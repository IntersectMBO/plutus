/* TODO: this only works if set on body, need to check how to add it there
without doing it as an Effect in a mainframe action
*/
.avoid-scrolling {
  overflow-y: hidden;
}

/* The "grey" background that prevents other actions to be performed */
.overlay {
  /*
    Hidden by default
    Centered vertically and horizontally
  */
  display: flex;
  align-items: center;
  justify-content: center;
  /* Stay in place */
  position: fixed;
  /* Sit on top */
  z-index: 1;
  left: 0;
  top: 0;
  /* Full width */
  width: 100vw;
  /* Full height */
  height: 100vh;
}

/* The overlay and overlay-background are separated because modals can have a global loading indicator
    which is an overlay on top of another. If both overlay have the transparency background, then what
    is outside the overlay is too dark. This way, in the modal view, we can select to only have the positional
    aspects of the overlay, without the background, if there are other overlays.
*/
.overlay-background {
  /* Fallback color */
  background-color: rgb(0, 0, 0);
  /* Black w/ opacity */
  background-color: rgba(0, 0, 0, 0.4);
}
/* Modal Content/Box */
.modal {
  background-color: #fefefe;
  border: 1px solid #888;
  position: relative;
  border-radius: var(--border-radius);
  box-shadow: 0 3px 27px 0 rgba(0, 0, 0, 0.34);

  /* The width cant be bigger than the 1024 size minus margins of both sides*/
  max-width: calc(var(--breakpoint-mid) - 2 * var(--medium-margin));
  /*
    The height cant be bigger than 90% of the vertical height and it's allowed
    to scroll.
  */
  max-height: 96vh;
  overflow: auto;
}

.modal-header {
  padding: var(--small-margin) var(--medium-margin);
  box-shadow: 0 4px 20px -10px rgba(0, 0, 0, 0.34);
  /* Make the position of the modal to always appear at the top */
  position: sticky;
  top: 0;
  background: white; /* if we dont set background it gets transparent */
  /* end sticky*/
  .title {
    @extend .font-semibold;
    margin: 0;
  }
}

.modal-close {
  /* Fix the close button on top right*/
  position: absolute;
  top: var(--small-margin);
  right: var(--medium-margin);
  cursor: pointer;
}

// This sets the same line-height for the title
// and the close button so they are horizontally aligned
// even if they don't have the same parent
.modal-close,
.modal-header .title {
  @extend .text-xl;
}

.modal-content {
  padding: var(--medium-margin);
}

.modal .modal-error {
  border: 1px solid var(--error-color);
}
