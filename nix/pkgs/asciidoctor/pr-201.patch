From 60d0e3f3e481967aa0f4d11a2a59b304e720bdc7 Mon Sep 17 00:00:00 2001
From: Michael Peyton Jones <me@michaelpj.com>
Date: Tue, 16 Jul 2019 11:01:16 +0100
Subject: [PATCH] Make convert_inline_anchor more in line with the html
 converter

In particular, some cases were using `node.target` as the `id` instead
of `node.id`.
---
 lib/asciidoctor-epub3/converter.rb | 29 +++++++++++++++++++++--------
 1 file changed, 21 insertions(+), 8 deletions(-)

diff --git a/lib/asciidoctor-epub3/converter.rb b/lib/asciidoctor-epub3/converter.rb
index 1742595..11924a0 100644
--- a/lib/asciidoctor-epub3/converter.rb
+++ b/lib/asciidoctor-epub3/converter.rb
@@ -691,10 +691,23 @@ def inline_anchor node
         id_attr = '' unless @xrefs_seen.add? refid
         refdoc = doc.references[:spine_items].find {|it| refdoc_id == (it.id || (it.attr 'docname')) }
         if refdoc
-          # QUESTION should we invoke xreftext for references in other documents?
-          if (refs = refdoc.references[:refs]) && ::Asciidoctor::Document === (ref = refs[refdoc_refid])
-            text ||= (ref.attr 'docreftext') || ref.doctitle
-          elsif (xreftext = refdoc.references[:ids][refdoc_refid])
+          if (refs = refdoc.references[:refs])
+            ref = refs[refdoc_refid]
+            # If the reference is to a document, we have attached special reftext as 'docreftext'
+            if ::Asciidoctor::Document === ref
+              xreftext = (ref.attr 'docreftext') || ref.doctitle
+            # Otherwise use the usual xreftext
+            elsif ::Asciidoctor::AbstractNode === ref
+              xreftext = (ref.xreftext node.attr('xrefstyle', nil, true)) || %([#{refdoc_refid}])
+            else
+              warn %(asciidoctor: anchor in #{refdoc_id} chapter: #{refdoc_refid} no ref in #{refs.keys})
+            end
+          else
+            # Fall back on looking up in 'ids' for backwards compatibility
+            xreftext = refdoc.references[:ids][refdoc_refid]
+          end
+
+          if xreftext
             text ||= xreftext
           else
             warn %(asciidoctor: WARNING: #{::File.basename(doc.attr 'docfile')}: invalid reference to unknown anchor in #{refdoc_id} chapter: #{refdoc_refid})
@@ -706,7 +719,7 @@ def inline_anchor node
         id_attr = (@xrefs_seen.add? refid) ? %( id="xref-#{refid}") : ''
         if (refs = doc.references[:refs])
           if ::Asciidoctor::AbstractNode === (ref = refs[refid])
-            xreftext = text || ref.xreftext((@xrefstyle ||= (doc.attr 'xrefstyle')))
+            xreftext = (ref.xreftext node.attr('xrefstyle', nil, true)) || %([#{refdoc_refid}])
           end
         else
           xreftext = doc.references[:ids][refid]
@@ -721,14 +734,14 @@ def inline_anchor node
       end
       %(<a#{id_attr} href="#{target}" class="xref">#{text || "[#{refid}]"}</a>)
     when :ref
-      %(<a id="#{target}"></a>)
+      %(<a id="#{node.id}"></a>)
     when :link
       %(<a href="#{target}" class="link">#{node.text}</a>)
     when :bibref
       if @xrefs_seen.include? target
-        %(<a id="#{target}" href="#xref-#{target}">[#{target}]</a>)
+        %(<a id="#{node.id}" href="#xref-#{target}">[#{node.reftext || node.target}]</a>)
       else
-        %(<a id="#{target}"></a>[#{target}])
+        %(<a id="#{node.id}"></a>[#{node.reftext || node.target}])
       end
     end
   end
