{
  pkgs = hackage:
    {
      packages = {
        "wai".revision = (((hackage."wai")."3.2.3").revisions).default;
        "semialign".revision = (((hackage."semialign")."1.1.0.1").revisions).default;
        "semialign".flags.semigroupoids = true;
        "lazysmallcheck".revision = (((hackage."lazysmallcheck")."0.6").revisions).default;
        "time-interval".revision = (((hackage."time-interval")."0.1.1").revisions).default;
        "these".revision = (((hackage."these")."1.1.1.1").revisions).default;
        "these".flags.assoc = true;
        "mainland-pretty".revision = (((hackage."mainland-pretty")."0.7.1").revisions).default;
        "deriving-aeson".revision = (((hackage."deriving-aeson")."0.2.7").revisions).default;
        "sbv".revision = (((hackage."sbv")."8.15").revisions).default;
        "binary".revision = (((hackage."binary")."0.8.8.0").revisions).default;
        "beam-migrate".revision = (((hackage."beam-migrate")."0.5.1.0").revisions).default;
        "beam-migrate".flags.werror = false;
        "serialise".revision = (((hackage."serialise")."0.2.3.0").revisions).default;
        "serialise".flags.newtime15 = true;
        "dependent-sum".revision = (((hackage."dependent-sum")."0.7.1.0").revisions).default;
        "generic-random".revision = (((hackage."generic-random")."1.4.0.0").revisions).default;
        "generic-random".flags.enable-inspect = false;
        "ghc-boot".revision = (((hackage."ghc-boot")."8.10.4.20210212").revisions).default;
        "streaming-commons".revision = (((hackage."streaming-commons")."0.2.2.1").revisions).default;
        "streaming-commons".flags.use-bytestring-builder = false;
        "old-time".revision = (((hackage."old-time")."1.1.0.3").revisions).default;
        "ral".revision = (((hackage."ral")."0.1").revisions).default;
        "ral".flags.distributive = true;
        "ral".flags.semigroupoids = true;
        "ral".flags.adjunctions = true;
        "bifunctors".revision = (((hackage."bifunctors")."5.5.7").revisions).default;
        "bifunctors".flags.tagged = true;
        "bifunctors".flags.semigroups = true;
        "katip".revision = (((hackage."katip")."0.8.5.0").revisions).default;
        "katip".flags.lib-werror = false;
        "haskell-lexer".revision = (((hackage."haskell-lexer")."1.1").revisions).default;
        "ghc-prim".revision = (((hackage."ghc-prim")."0.6.1").revisions).default;
        "wl-pprint-text".revision = (((hackage."wl-pprint-text")."1.2.0.1").revisions).default;
        "wl-pprint".revision = (((hackage."wl-pprint")."1.2.1").revisions).default;
        "formatting".revision = (((hackage."formatting")."7.1.3").revisions).default;
        "attoparsec-iso8601".revision = (((hackage."attoparsec-iso8601")."1.0.2.0").revisions).default;
        "attoparsec-iso8601".flags.developer = false;
        "attoparsec-iso8601".flags.fast = false;
        "bimap".revision = (((hackage."bimap")."0.4.0").revisions).default;
        "monad-par".revision = (((hackage."monad-par")."0.3.5").revisions).default;
        "monad-par".flags.chaselev = false;
        "monad-par".flags.newgeneric = false;
        "cryptohash-sha1".revision = (((hackage."cryptohash-sha1")."0.11.100.1").revisions).default;
        "socks".revision = (((hackage."socks")."0.6.1").revisions).default;
        "Stream".revision = (((hackage."Stream")."0.4.7.2").revisions).default;
        "string-conv".revision = (((hackage."string-conv")."0.1.2").revisions).default;
        "string-conv".flags.lib-werror = false;
        "terminal-size".revision = (((hackage."terminal-size")."0.3.2.1").revisions).default;
        "wl-pprint-annotated".revision = (((hackage."wl-pprint-annotated")."0.1.0.1").revisions).default;
        "warp".revision = (((hackage."warp")."3.3.17").revisions).default;
        "warp".flags.network-bytestring = false;
        "warp".flags.allow-sendfilefd = true;
        "warp".flags.warp-debug = false;
        "Only".revision = (((hackage."Only")."0.1").revisions).default;
        "cassava".revision = (((hackage."cassava")."0.5.2.0").revisions).default;
        "cassava".flags.bytestring--lt-0_10_4 = false;
        "snap-server".revision = (((hackage."snap-server")."1.1.2.0").revisions).default;
        "snap-server".flags.portable = false;
        "snap-server".flags.build-pong = false;
        "snap-server".flags.debug = false;
        "snap-server".flags.build-testserver = false;
        "snap-server".flags.openssl = false;
        "ieee".revision = (((hackage."ieee")."0.7").revisions).default;
        "ieee".flags.big_endian = false;
        "singleton-bool".revision = (((hackage."singleton-bool")."0.1.5").revisions).default;
        "cookie".revision = (((hackage."cookie")."0.4.5").revisions).default;
        "blaze-builder".revision = (((hackage."blaze-builder")."0.4.2.1").revisions).default;
        "void".revision = (((hackage."void")."0.7.3").revisions).default;
        "void".flags.safe = false;
        "generic-data".revision = (((hackage."generic-data")."0.9.2.0").revisions).default;
        "parsers".revision = (((hackage."parsers")."0.12.10").revisions).default;
        "parsers".flags.binary = true;
        "parsers".flags.parsec = true;
        "parsers".flags.attoparsec = true;
        "base-compat".revision = (((hackage."base-compat")."0.11.2").revisions).default;
        "wai-websockets".revision = (((hackage."wai-websockets")."3.0.1.2").revisions).default;
        "wai-websockets".flags.example = true;
        "io-streams-haproxy".revision = (((hackage."io-streams-haproxy")."1.0.1.0").revisions).default;
        "ansi-terminal".revision = (((hackage."ansi-terminal")."0.11").revisions).default;
        "ansi-terminal".flags.example = false;
        "unliftio-core".revision = (((hackage."unliftio-core")."0.2.0.1").revisions).default;
        "test-framework-hunit".revision = (((hackage."test-framework-hunit")."0.3.0.2").revisions).default;
        "test-framework-hunit".flags.base4 = true;
        "test-framework-hunit".flags.base3 = false;
        "free".revision = (((hackage."free")."5.1.3").revisions).default;
        "tasty-bench".revision = (((hackage."tasty-bench")."0.3").revisions).default;
        "exceptions".revision = (((hackage."exceptions")."0.10.4").revisions).default;
        "time-compat".revision = (((hackage."time-compat")."1.9.6").revisions).default;
        "time-compat".flags.old-locale = false;
        "cereal".revision = (((hackage."cereal")."0.5.8.1").revisions).default;
        "cereal".flags.bytestring-builder = false;
        "groups".revision = (((hackage."groups")."0.5.3").revisions).default;
        "vector-binary-instances".revision = (((hackage."vector-binary-instances")."0.2.5.2").revisions).default;
        "x509-system".revision = (((hackage."x509-system")."1.6.6").revisions).default;
        "mtl-compat".revision = (((hackage."mtl-compat")."0.2.2").revisions).default;
        "mtl-compat".flags.two-point-two = false;
        "mtl-compat".flags.two-point-one = false;
        "loch-th".revision = (((hackage."loch-th")."0.2.2").revisions).default;
        "yaml".revision = (((hackage."yaml")."0.11.5.0").revisions).default;
        "yaml".flags.no-exe = true;
        "yaml".flags.no-examples = true;
        "jwt".revision = (((hackage."jwt")."0.10.0").revisions).default;
        "xml".revision = (((hackage."xml")."1.3.14").revisions).default;
        "erf".revision = (((hackage."erf")."2.0.0.0").revisions).default;
        "ListLike".revision = (((hackage."ListLike")."4.7.4").revisions).default;
        "servant".revision = (((hackage."servant")."0.18.3").revisions).default;
        "ap-normalize".revision = (((hackage."ap-normalize")."0.1.0.1").revisions).default;
        "ap-normalize".flags.test-with-clang = false;
        "array".revision = (((hackage."array")."0.5.4.0").revisions).default;
        "hspec-expectations".revision = (((hackage."hspec-expectations")."0.8.2").revisions).default;
        "http-media".revision = (((hackage."http-media")."0.8.0.0").revisions).default;
        "size-based".revision = (((hackage."size-based")."0.1.2.0").revisions).default;
        "integer-gmp".revision = (((hackage."integer-gmp")."1.0.3.0").revisions).default;
        "psqueues".revision = (((hackage."psqueues")."0.2.7.2").revisions).default;
        "mono-traversable".revision = (((hackage."mono-traversable")."1.0.15.1").revisions).default;
        "conduit-extra".revision = (((hackage."conduit-extra")."1.3.5").revisions).default;
        "fast-logger".revision = (((hackage."fast-logger")."3.0.5").revisions).default;
        "cryptohash".revision = (((hackage."cryptohash")."0.11.9").revisions).default;
        "call-stack".revision = (((hackage."call-stack")."0.4.0").revisions).default;
        "reducers".revision = (((hackage."reducers")."3.12.3").revisions).default;
        "gauge".revision = (((hackage."gauge")."0.2.5").revisions).default;
        "gauge".flags.analysis = true;
        "simple-sendfile".revision = (((hackage."simple-sendfile")."0.2.30").revisions).default;
        "simple-sendfile".flags.allow-bsd = true;
        "safe".revision = (((hackage."safe")."0.3.19").revisions).default;
        "template-haskell".revision = (((hackage."template-haskell")."2.16.0.0").revisions).default;
        "http-date".revision = (((hackage."http-date")."0.0.11").revisions).default;
        "hsc2hs".revision = (((hackage."hsc2hs")."0.68.7").revisions).default;
        "hsc2hs".flags.in-ghc-tree = false;
        "vector".revision = (((hackage."vector")."0.12.3.0").revisions).default;
        "vector".flags.unsafechecks = false;
        "vector".flags.internalchecks = false;
        "vector".flags.boundschecks = true;
        "vector".flags.wall = false;
        "concurrent-output".revision = (((hackage."concurrent-output")."1.10.12").revisions).default;
        "th-lift-instances".revision = (((hackage."th-lift-instances")."0.1.18").revisions).default;
        "ekg".revision = (((hackage."ekg")."0.4.0.15").revisions).default;
        "data-default-instances-old-locale".revision = (((hackage."data-default-instances-old-locale")."0.0.1").revisions).default;
        "conduit".revision = (((hackage."conduit")."1.3.4.1").revisions).default;
        "constraints".revision = (((hackage."constraints")."0.13").revisions).default;
        "algebraic-graphs".revision = (((hackage."algebraic-graphs")."0.5").revisions).default;
        "word8".revision = (((hackage."word8")."0.1.3").revisions).default;
        "network".revision = (((hackage."network")."3.1.2.2").revisions).default;
        "network".flags.devel = false;
        "signal".revision = (((hackage."signal")."0.1.0.4").revisions).default;
        "HUnit".revision = (((hackage."HUnit")."1.6.2.0").revisions).default;
        "wai-app-static".revision = (((hackage."wai-app-static")."3.1.7.2").revisions).default;
        "wai-app-static".flags.print = false;
        "tree-diff".revision = (((hackage."tree-diff")."0.2").revisions).default;
        "http-types".revision = (((hackage."http-types")."0.12.3").revisions).default;
        "Glob".revision = (((hackage."Glob")."0.10.1").revisions).default;
        "data-ordlist".revision = (((hackage."data-ordlist")."0.4.7.0").revisions).default;
        "th-reify-many".revision = (((hackage."th-reify-many")."0.1.9").revisions).default;
        "streaming-bytestring".revision = (((hackage."streaming-bytestring")."0.2.1").revisions).default;
        "inline-r".revision = (((hackage."inline-r")."0.10.4").revisions).default;
        "direct-sqlite".revision = (((hackage."direct-sqlite")."2.3.26").revisions).default;
        "direct-sqlite".flags.urifilenames = true;
        "direct-sqlite".flags.haveusleep = true;
        "direct-sqlite".flags.json1 = true;
        "direct-sqlite".flags.fulltextsearch = true;
        "direct-sqlite".flags.systemlib = false;
        "doctest".revision = (((hackage."doctest")."0.18.1").revisions).default;
        "dlist".revision = (((hackage."dlist")."0.8.0.8").revisions).default;
        "lifted-base".revision = (((hackage."lifted-base")."0.2.3.12").revisions).default;
        "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
        "abstract-par".revision = (((hackage."abstract-par")."0.3.3").revisions).default;
        "wai-logger".revision = (((hackage."wai-logger")."2.3.6").revisions).default;
        "async".revision = (((hackage."async")."2.2.3").revisions).default;
        "async".flags.bench = false;
        "protolude".revision = (((hackage."protolude")."0.3.0").revisions).default;
        "protolude".flags.dev = false;
        "process".revision = (((hackage."process")."1.6.9.0").revisions).default;
        "criterion".revision = (((hackage."criterion")."1.5.9.0").revisions).default;
        "criterion".flags.embed-data-files = false;
        "criterion".flags.fast = false;
        "newtype-generics".revision = (((hackage."newtype-generics")."0.6").revisions).default;
        "half".revision = (((hackage."half")."0.3.1").revisions).default;
        "auto-update".revision = (((hackage."auto-update")."0.1.6").revisions).default;
        "http-conduit".revision = (((hackage."http-conduit")."2.3.8").revisions).default;
        "http-conduit".flags.aeson = true;
        "monad-control".revision = (((hackage."monad-control")."1.0.2.3").revisions).default;
        "random".revision = (((hackage."random")."1.2.0").revisions).default;
        "code-page".revision = (((hackage."code-page")."0.2.1").revisions).default;
        "validation".revision = (((hackage."validation")."1.1.1").revisions).default;
        "string-conversions".revision = (((hackage."string-conversions")."0.4.0.1").revisions).default;
        "quickcheck-text".revision = (((hackage."quickcheck-text")."0.1.2.1").revisions).default;
        "errors".revision = (((hackage."errors")."2.3.0").revisions).default;
        "unix-compat".revision = (((hackage."unix-compat")."0.5.3").revisions).default;
        "unix-compat".flags.old-time = false;
        "generics-sop".revision = (((hackage."generics-sop")."0.5.1.0").revisions).default;
        "optparse-applicative".revision = (((hackage."optparse-applicative")."0.16.1.0").revisions).default;
        "optparse-applicative".flags.process = true;
        "time-manager".revision = (((hackage."time-manager")."0.0.0").revisions).default;
        "hspec-discover".revision = (((hackage."hspec-discover")."2.8.2").revisions).default;
        "cborg".revision = (((hackage."cborg")."0.2.5.0").revisions).default;
        "cborg".flags.optimize-gmp = true;
        "parallel".revision = (((hackage."parallel")."3.2.2.0").revisions).default;
        "bytestring-builder".revision = (((hackage."bytestring-builder")."0.10.8.2.0").revisions).default;
        "bytestring-builder".flags.bytestring_has_builder = true;
        "QuickCheck".revision = (((hackage."QuickCheck")."2.14.2").revisions).default;
        "QuickCheck".flags.old-random = false;
        "QuickCheck".flags.templatehaskell = true;
        "uuid-types".revision = (((hackage."uuid-types")."1.0.5").revisions).default;
        "servant-client-core".revision = (((hackage."servant-client-core")."0.18.3").revisions).default;
        "scientific".revision = (((hackage."scientific")."0.3.7.0").revisions).default;
        "scientific".flags.integer-simple = false;
        "scientific".flags.bytestring-builder = false;
        "resource-pool".revision = (((hackage."resource-pool")."0.2.3.2").revisions).default;
        "resource-pool".flags.developer = false;
        "monad-loops".revision = (((hackage."monad-loops")."0.4.3").revisions).default;
        "monad-loops".flags.base4 = true;
        "nonempty-containers".revision = (((hackage."nonempty-containers")."0.3.4.1").revisions).default;
        "hscolour".revision = (((hackage."hscolour")."1.24.4").revisions).default;
        "entropy".revision = (((hackage."entropy")."0.4.1.6").revisions).default;
        "entropy".flags.halvm = false;
        "hpc".revision = (((hackage."hpc")."0.6.1.0").revisions).default;
        "binary-orphans".revision = (((hackage."binary-orphans")."1.0.1").revisions).default;
        "libBF".revision = (((hackage."libBF")."0.6.2").revisions).default;
        "libBF".flags.system-libbf = false;
        "tls".revision = (((hackage."tls")."1.5.5").revisions).default;
        "tls".flags.compat = true;
        "tls".flags.network = true;
        "tls".flags.hans = false;
        "prettyprinter".revision = (((hackage."prettyprinter")."1.7.0").revisions).default;
        "prettyprinter".flags.buildreadme = false;
        "th-extras".revision = (((hackage."th-extras")."0.0.0.4").revisions).default;
        "th-extras".flags.base4 = true;
        "quickcheck-io".revision = (((hackage."quickcheck-io")."0.2.0").revisions).default;
        "alex".revision = (((hackage."alex")."3.2.6").revisions).default;
        "alex".flags.small_base = true;
        "tasty-hunit".revision = (((hackage."tasty-hunit")."0.10.0.3").revisions).default;
        "megaparsec".revision = (((hackage."megaparsec")."9.0.1").revisions).default;
        "megaparsec".flags.dev = false;
        "th-orphans".revision = (((hackage."th-orphans")."0.13.11").revisions).default;
        "pretty-show".revision = (((hackage."pretty-show")."1.10").revisions).default;
        "distributive".revision = (((hackage."distributive")."0.6.2.1").revisions).default;
        "distributive".flags.tagged = true;
        "distributive".flags.semigroups = true;
        "transformers-base".revision = (((hackage."transformers-base")."0.4.5.2").revisions).default;
        "transformers-base".flags.orphaninstances = true;
        "base16-bytestring".revision = (((hackage."base16-bytestring")."1.0.1.0").revisions).default;
        "nicify-lib".revision = (((hackage."nicify-lib")."1.0.1").revisions).default;
        "operational".revision = (((hackage."operational")."0.2.3.5").revisions).default;
        "operational".flags.buildexamples = true;
        "wai-extra".revision = (((hackage."wai-extra")."3.1.6").revisions).default;
        "wai-extra".flags.build-example = false;
        "iproute".revision = (((hackage."iproute")."1.7.11").revisions).default;
        "data-default-instances-containers".revision = (((hackage."data-default-instances-containers")."0.0.1").revisions).default;
        "stm-chans".revision = (((hackage."stm-chans")."3.0.0.4").revisions).default;
        "cryptohash-md5".revision = (((hackage."cryptohash-md5")."0.11.100.1").revisions).default;
        "generic-deriving".revision = (((hackage."generic-deriving")."1.13.1").revisions).default;
        "generic-deriving".flags.base-4-9 = true;
        "base64-bytestring-type".revision = (((hackage."base64-bytestring-type")."1.0.1").revisions).default;
        "base64-bytestring-type".flags.cereal = true;
        "base64-bytestring-type".flags.serialise = true;
        "base64-bytestring-type".flags.http-api-data = true;
        "beam-sqlite".revision = (((hackage."beam-sqlite")."0.5.1.0").revisions).default;
        "beam-sqlite".flags.werror = false;
        "js-chart".revision = (((hackage."js-chart")."2.9.4.1").revisions).default;
        "vector-algorithms".revision = (((hackage."vector-algorithms")."0.8.0.4").revisions).default;
        "vector-algorithms".flags.unsafechecks = false;
        "vector-algorithms".flags.llvm = false;
        "vector-algorithms".flags.internalchecks = false;
        "vector-algorithms".flags.bench = true;
        "vector-algorithms".flags.boundschecks = true;
        "vector-algorithms".flags.properties = true;
        "happy".revision = (((hackage."happy")."1.20.0").revisions).default;
        "base".revision = (((hackage."base")."4.14.1.0").revisions).default;
        "freer-simple".revision = (((hackage."freer-simple")."1.2.1.1").revisions).default;
        "postgresql-simple".revision = (((hackage."postgresql-simple")."0.6.4").revisions).default;
        "blaze-markup".revision = (((hackage."blaze-markup")."0.8.2.8").revisions).default;
        "tasty-hedgehog".revision = (((hackage."tasty-hedgehog")."1.1.0.0").revisions).default;
        "postgresql-libpq".revision = (((hackage."postgresql-libpq")."0.9.4.3").revisions).default;
        "postgresql-libpq".flags.use-pkg-config = false;
        "network-uri".revision = (((hackage."network-uri")."2.6.4.1").revisions).default;
        "foldl".revision = (((hackage."foldl")."1.4.11").revisions).default;
        "regex-posix".revision = (((hackage."regex-posix")."0.96.0.0").revisions).default;
        "regex-posix".flags._regex-posix-clib = false;
        "moo".revision = (((hackage."moo")."1.2").revisions).default;
        "Diff".revision = (((hackage."Diff")."0.4.0").revisions).default;
        "cmdargs".revision = (((hackage."cmdargs")."0.10.21").revisions).default;
        "cmdargs".flags.testprog = false;
        "cmdargs".flags.quotation = true;
        "lazy-search".revision = (((hackage."lazy-search")."0.1.2.1").revisions).default;
        "abstract-deque".revision = (((hackage."abstract-deque")."0.3").revisions).default;
        "abstract-deque".flags.usecas = false;
        "rts".revision = (((hackage."rts")."1.0").revisions).default;
        "vector-sized".revision = (((hackage."vector-sized")."1.4.4").revisions).default;
        "beam-core".revision = (((hackage."beam-core")."0.9.1.0").revisions).default;
        "beam-core".flags.werror = false;
        "text".revision = (((hackage."text")."1.2.4.1").revisions).default;
        "aeson-pretty".revision = (((hackage."aeson-pretty")."0.8.8").revisions).default;
        "aeson-pretty".flags.lib-only = false;
        "tasty-golden".revision = (((hackage."tasty-golden")."2.3.4").revisions).default;
        "tasty-golden".flags.build-example = false;
        "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
        "time".revision = (((hackage."time")."1.9.3").revisions).default;
        "bech32".revision = (((hackage."bech32")."1.1.1").revisions).default;
        "bech32".flags.static = false;
        "bech32".flags.release = false;
        "servant-client".revision = (((hackage."servant-client")."0.18.3").revisions).default;
        "optics-extra".revision = (((hackage."optics-extra")."0.3").revisions).default;
        "uuid".revision = (((hackage."uuid")."1.3.15").revisions).default;
        "unordered-containers".revision = (((hackage."unordered-containers")."0.2.14.0").revisions).default;
        "unordered-containers".flags.debug = false;
        "easy-file".revision = (((hackage."easy-file")."0.2.2").revisions).default;
        "data-default-class".revision = (((hackage."data-default-class")."0.1.2.0").revisions).default;
        "tasty-expected-failure".revision = (((hackage."tasty-expected-failure")."0.12.3").revisions).default;
        "parser-combinators".revision = (((hackage."parser-combinators")."1.3.0").revisions).default;
        "parser-combinators".flags.dev = false;
        "pretty-simple".revision = (((hackage."pretty-simple")."4.0.0.0").revisions).default;
        "pretty-simple".flags.buildexe = false;
        "pretty-simple".flags.buildexample = false;
        "indexed-list-literals".revision = (((hackage."indexed-list-literals")."0.2.1.3").revisions).default;
        "time-units".revision = (((hackage."time-units")."1.0.0").revisions).default;
        "hspec-expectations-pretty-diff".revision = (((hackage."hspec-expectations-pretty-diff")."0.7.2.5").revisions).default;
        "servant-websockets".revision = (((hackage."servant-websockets")."2.0.0").revisions).default;
        "snap-core".revision = (((hackage."snap-core")."1.0.4.2").revisions).default;
        "snap-core".flags.portable = false;
        "snap-core".flags.debug = false;
        "snap-core".flags.network-uri = true;
        "ieee754".revision = (((hackage."ieee754")."0.8.0").revisions).default;
        "charset".revision = (((hackage."charset")."0.3.8").revisions).default;
        "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
        "dependent-sum-template".revision = (((hackage."dependent-sum-template")."0.1.0.3").revisions).default;
        "sop-core".revision = (((hackage."sop-core")."0.5.0.1").revisions).default;
        "data-fix".revision = (((hackage."data-fix")."0.3.1").revisions).default;
        "typed-process".revision = (((hackage."typed-process")."0.2.6.0").revisions).default;
        "mersenne-random-pure64".revision = (((hackage."mersenne-random-pure64")."0.2.2.0").revisions).default;
        "mersenne-random-pure64".flags.small_base = false;
        "dense-linear-algebra".revision = (((hackage."dense-linear-algebra")."0.1.0.0").revisions).default;
        "logict".revision = (((hackage."logict")."0.7.0.3").revisions).default;
        "contravariant".revision = (((hackage."contravariant")."1.5.3").revisions).default;
        "contravariant".flags.tagged = true;
        "contravariant".flags.semigroups = true;
        "contravariant".flags.statevar = true;
        "servant-foreign".revision = (((hackage."servant-foreign")."0.15.4").revisions).default;
        "text-short".revision = (((hackage."text-short")."0.1.3").revisions).default;
        "text-short".flags.asserts = false;
        "vault".revision = (((hackage."vault")."0.3.1.5").revisions).default;
        "vault".flags.useghc = true;
        "zlib-bindings".revision = (((hackage."zlib-bindings")."0.1.1.5").revisions).default;
        "hgmp".revision = (((hackage."hgmp")."0.1.2").revisions).default;
        "case-insensitive".revision = (((hackage."case-insensitive")."1.2.1.0").revisions).default;
        "constraints-extras".revision = (((hackage."constraints-extras")."0.3.1.0").revisions).default;
        "constraints-extras".flags.build-readme = true;
        "network-byte-order".revision = (((hackage."network-byte-order")."0.1.6").revisions).default;
        "optparse-generic".revision = (((hackage."optparse-generic")."1.4.4").revisions).default;
        "base58-bytestring".revision = (((hackage."base58-bytestring")."0.1.0").revisions).default;
        "srcloc".revision = (((hackage."srcloc")."0.6").revisions).default;
        "aeson-casing".revision = (((hackage."aeson-casing")."0.2.0.0").revisions).default;
        "unliftio".revision = (((hackage."unliftio")."0.2.18").revisions).default;
        "wcwidth".revision = (((hackage."wcwidth")."0.0.2").revisions).default;
        "wcwidth".flags.split-base = true;
        "wcwidth".flags.cli = false;
        "extensible-effects".revision = (((hackage."extensible-effects")."5.0.0.1").revisions).default;
        "extensible-effects".flags.lib-werror = false;
        "extensible-effects".flags.dump-core = false;
        "http-client-tls".revision = (((hackage."http-client-tls")."0.3.5.3").revisions).default;
        "fail".revision = (((hackage."fail")."4.9.0.0").revisions).default;
        "microlens-th".revision = (((hackage."microlens-th")."0.4.3.6").revisions).default;
        "fingertree".revision = (((hackage."fingertree")."0.1.4.2").revisions).default;
        "tasty-smallcheck".revision = (((hackage."tasty-smallcheck")."0.8.2").revisions).default;
        "test-framework".revision = (((hackage."test-framework")."0.8.2.0").revisions).default;
        "bytestring".revision = (((hackage."bytestring")."0.10.12.0").revisions).default;
        "canonical-json".revision = (((hackage."canonical-json")."0.6.0.0").revisions).default;
        "witherable".revision = (((hackage."witherable")."0.4.1").revisions).default;
        "pipes".revision = (((hackage."pipes")."4.3.16").revisions).default;
        "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
        "ansi-wl-pprint".flags.example = false;
        "reflection".revision = (((hackage."reflection")."2.1.6").revisions).default;
        "reflection".flags.slow = false;
        "reflection".flags.template-haskell = true;
        "th-utilities".revision = (((hackage."th-utilities")."0.2.4.1").revisions).default;
        "hostname".revision = (((hackage."hostname")."1.0").revisions).default;
        "base-unicode-symbols".revision = (((hackage."base-unicode-symbols")."0.2.4.2").revisions).default;
        "base-unicode-symbols".flags.base-4-8 = true;
        "base-unicode-symbols".flags.old-base = false;
        "basement".revision = (((hackage."basement")."0.0.12").revisions).default;
        "process-extras".revision = (((hackage."process-extras")."0.7.4").revisions).default;
        "inline-c".revision = (((hackage."inline-c")."0.9.1.5").revisions).default;
        "inline-c".flags.gsl-example = false;
        "mwc-random".revision = (((hackage."mwc-random")."0.15.0.1").revisions).default;
        "wai-cors".revision = (((hackage."wai-cors")."0.2.7").revisions).default;
        "ekg-core".revision = (((hackage."ekg-core")."0.1.1.7").revisions).default;
        "ghc-paths".revision = (((hackage."ghc-paths")."0.1.0.12").revisions).default;
        "either".revision = (((hackage."either")."5.0.1.1").revisions).default;
        "setenv".revision = (((hackage."setenv")."0.1.1.3").revisions).default;
        "integer-logarithms".revision = (((hackage."integer-logarithms")."1.0.3.1").revisions).default;
        "integer-logarithms".flags.check-bounds = false;
        "integer-logarithms".flags.integer-gmp = true;
        "utf8-string".revision = (((hackage."utf8-string")."1.0.2").revisions).default;
        "http-client".revision = (((hackage."http-client")."0.7.8").revisions).default;
        "http-client".flags.network-uri = true;
        "newtype".revision = (((hackage."newtype")."0.2.2.0").revisions).default;
        "ghc".revision = (((hackage."ghc")."8.10.4.20210212").revisions).default;
        "lens".revision = (((hackage."lens")."4.19.2").revisions).default;
        "lens".flags.test-doctests = true;
        "lens".flags.test-templates = true;
        "lens".flags.test-hunit = true;
        "lens".flags.benchmark-uniplate = false;
        "lens".flags.inlining = true;
        "lens".flags.safe = false;
        "lens".flags.trustworthy = true;
        "lens".flags.old-inline-pragmas = false;
        "lens".flags.test-properties = true;
        "lens".flags.dump-splices = false;
        "lens".flags.j = false;
        "x509".revision = (((hackage."x509")."1.7.5").revisions).default;
        "containers".revision = (((hackage."containers")."0.6.2.1").revisions).default;
        "regex-compat".revision = (((hackage."regex-compat")."0.95.2.1").revisions).default;
        "semigroupoids".revision = (((hackage."semigroupoids")."5.3.4").revisions).default;
        "semigroupoids".flags.distributive = true;
        "semigroupoids".flags.comonad = true;
        "semigroupoids".flags.contravariant = true;
        "semigroupoids".flags.containers = true;
        "semigroupoids".flags.tagged = true;
        "semigroupoids".flags.unordered-containers = true;
        "semigroupoids".flags.doctests = true;
        "io-streams".revision = (((hackage."io-streams")."1.5.2.1").revisions).default;
        "io-streams".flags.network = true;
        "io-streams".flags.zlib = true;
        "io-streams".flags.nointeractivetests = false;
        "singletons".revision = (((hackage."singletons")."2.7").revisions).default;
        "async-timer".revision = (((hackage."async-timer")."0.1.4.1").revisions).default;
        "tf-random".revision = (((hackage."tf-random")."0.5").revisions).default;
        "math-functions".revision = (((hackage."math-functions")."0.3.4.2").revisions).default;
        "math-functions".flags.system-expm1 = true;
        "math-functions".flags.system-erf = true;
        "optional-args".revision = (((hackage."optional-args")."1.0.2").revisions).default;
        "byteorder".revision = (((hackage."byteorder")."1.0.4").revisions).default;
        "ekg-json".revision = (((hackage."ekg-json")."0.1.0.6").revisions).default;
        "optics-core".revision = (((hackage."optics-core")."0.3.0.1").revisions).default;
        "some".revision = (((hackage."some")."1.0.2").revisions).default;
        "some".flags.newtype-unsafe = true;
        "tagged".revision = (((hackage."tagged")."0.8.6.1").revisions).default;
        "tagged".flags.deepseq = true;
        "tagged".flags.transformers = true;
        "barbies".revision = (((hackage."barbies")."2.0.2.0").revisions).default;
        "tdigest".revision = (((hackage."tdigest")."0.2.1.1").revisions).default;
        "quiet".revision = (((hackage."quiet")."0.2").revisions).default;
        "haskell-src-exts".revision = (((hackage."haskell-src-exts")."1.23.1").revisions).default;
        "quickcheck-instances".revision = (((hackage."quickcheck-instances")."0.3.25.2").revisions).default;
        "quickcheck-instances".flags.bytestring-builder = false;
        "streaming".revision = (((hackage."streaming")."0.2.3.0").revisions).default;
        "row-types".revision = (((hackage."row-types")."1.0.1.0").revisions).default;
        "criterion-measurement".revision = (((hackage."criterion-measurement")."0.1.3.0").revisions).default;
        "criterion-measurement".flags.fast = false;
        "insert-ordered-containers".revision = (((hackage."insert-ordered-containers")."0.2.5").revisions).default;
        "show-combinators".revision = (((hackage."show-combinators")."0.2.0.0").revisions).default;
        "base-orphans".revision = (((hackage."base-orphans")."0.8.4").revisions).default;
        "fin".revision = (((hackage."fin")."0.1.1").revisions).default;
        "prettyprinter-ansi-terminal".revision = (((hackage."prettyprinter-ansi-terminal")."1.1.2").revisions).default;
        "primitive".revision = (((hackage."primitive")."0.7.1.0").revisions).default;
        "servant-server".revision = (((hackage."servant-server")."0.18.3").revisions).default;
        "pqueue".revision = (((hackage."pqueue")."1.4.1.3").revisions).default;
        "smallcheck".revision = (((hackage."smallcheck")."1.2.1").revisions).default;
        "dns".revision = (((hackage."dns")."3.0.4").revisions).default;
        "directory".revision = (((hackage."directory")."1.3.6.0").revisions).default;
        "random-shuffle".revision = (((hackage."random-shuffle")."0.0.4").revisions).default;
        "transformers-compat".revision = (((hackage."transformers-compat")."0.6.6").revisions).default;
        "transformers-compat".flags.two = false;
        "transformers-compat".flags.five = false;
        "transformers-compat".flags.four = false;
        "transformers-compat".flags.generic-deriving = true;
        "transformers-compat".flags.five-three = true;
        "transformers-compat".flags.three = false;
        "transformers-compat".flags.mtl = true;
        "fmlist".revision = (((hackage."fmlist")."0.9.4").revisions).default;
        "memory".revision = (((hackage."memory")."0.16.0").revisions).default;
        "memory".flags.support_basement = true;
        "memory".flags.support_bytestring = true;
        "memory".flags.support_foundation = true;
        "memory".flags.support_deepseq = true;
        "profunctors".revision = (((hackage."profunctors")."5.6").revisions).default;
        "bsb-http-chunked".revision = (((hackage."bsb-http-chunked")."0.0.0.4").revisions).default;
        "th-abstraction".revision = (((hackage."th-abstraction")."0.3.2.0").revisions).default;
        "microlens".revision = (((hackage."microlens")."0.4.12.0").revisions).default;
        "nonempty-vector".revision = (((hackage."nonempty-vector")."0.2.1.0").revisions).default;
        "microlens-mtl".revision = (((hackage."microlens-mtl")."0.2.0.1").revisions).default;
        "resourcet".revision = (((hackage."resourcet")."1.2.4.2").revisions).default;
        "ordered-containers".revision = (((hackage."ordered-containers")."0.2.2").revisions).default;
        "aeson".revision = (((hackage."aeson")."1.5.6.0").revisions).default;
        "aeson".flags.developer = false;
        "aeson".flags.bytestring-builder = false;
        "aeson".flags.fast = false;
        "aeson".flags.cffi = false;
        "th-lift".revision = (((hackage."th-lift")."0.8.2").revisions).default;
        "streaming-binary".revision = (((hackage."streaming-binary")."0.2.2.0").revisions).default;
        "cabal-doctest".revision = (((hackage."cabal-doctest")."1.0.8").revisions).default;
        "data-default".revision = (((hackage."data-default")."0.7.1.1").revisions).default;
        "connection".revision = (((hackage."connection")."0.3.1").revisions).default;
        "finite-typelits".revision = (((hackage."finite-typelits")."0.1.4.2").revisions).default;
        "typerep-map".revision = (((hackage."typerep-map")."0.3.3.0").revisions).default;
        "semigroups".revision = (((hackage."semigroups")."0.19.1").revisions).default;
        "semigroups".flags.bytestring = true;
        "semigroups".flags.deepseq = true;
        "semigroups".flags.binary = true;
        "semigroups".flags.containers = true;
        "semigroups".flags.tagged = true;
        "semigroups".flags.template-haskell = true;
        "semigroups".flags.bytestring-builder = false;
        "semigroups".flags.transformers = true;
        "semigroups".flags.hashable = true;
        "semigroups".flags.unordered-containers = true;
        "semigroups".flags.text = true;
        "uniplate".revision = (((hackage."uniplate")."1.6.13").revisions).default;
        "parsec".revision = (((hackage."parsec")."3.1.14.0").revisions).default;
        "turtle".revision = (((hackage."turtle")."1.5.22").revisions).default;
        "ghc-boot-th".revision = (((hackage."ghc-boot-th")."8.10.4.20210212").revisions).default;
        "libyaml".revision = (((hackage."libyaml")."0.1.2").revisions).default;
        "libyaml".flags.system-libyaml = false;
        "libyaml".flags.no-unicode = false;
        "hedgehog-corpus".revision = (((hackage."hedgehog-corpus")."0.2.0").revisions).default;
        "servant-subscriber".revision = (((hackage."servant-subscriber")."0.7.0.0").revisions).default;
        "servant-subscriber".flags.websockets_0_11 = true;
        "generic-lens-core".revision = (((hackage."generic-lens-core")."2.1.0.0").revisions).default;
        "splitmix".revision = (((hackage."splitmix")."0.1.0.3").revisions).default;
        "splitmix".flags.optimised-mixer = false;
        "x509-store".revision = (((hackage."x509-store")."1.6.7").revisions).default;
        "websockets".revision = (((hackage."websockets")."0.12.7.2").revisions).default;
        "websockets".flags.example = false;
        "nothunks".revision = (((hackage."nothunks")."0.1.3").revisions).default;
        "nothunks".flags.bytestring = true;
        "nothunks".flags.vector = true;
        "nothunks".flags.text = true;
        "time-out".revision = (((hackage."time-out")."0.2").revisions).default;
        "IntervalMap".revision = (((hackage."IntervalMap")."0.6.1.2").revisions).default;
        "hedgehog".revision = (((hackage."hedgehog")."1.0.5").revisions).default;
        "system-filepath".revision = (((hackage."system-filepath")."0.4.14").revisions).default;
        "recursion-schemes".revision = (((hackage."recursion-schemes")."5.1.3").revisions).default;
        "recursion-schemes".flags.template-haskell = true;
        "hspec-core".revision = (((hackage."hspec-core")."2.8.2").revisions).default;
        "asn1-types".revision = (((hackage."asn1-types")."0.3.4").revisions).default;
        "filepath".revision = (((hackage."filepath")."1.4.2.1").revisions).default;
        "asn1-encoding".revision = (((hackage."asn1-encoding")."0.9.6").revisions).default;
        "list-t".revision = (((hackage."list-t")."1.0.4").revisions).default;
        "Unique".revision = (((hackage."Unique")."0.4.7.8").revisions).default;
        "monad-par-extras".revision = (((hackage."monad-par-extras")."0.3.3").revisions).default;
        "foundation".revision = (((hackage."foundation")."0.0.26.1").revisions).default;
        "foundation".flags.minimal-deps = false;
        "foundation".flags.doctest = false;
        "foundation".flags.experimental = false;
        "foundation".flags.linktest = false;
        "foundation".flags.bench-all = false;
        "foundation".flags.bounds-check = false;
        "test-framework-quickcheck2".revision = (((hackage."test-framework-quickcheck2")."0.3.0.5").revisions).default;
        "hint".revision = (((hackage."hint")."0.9.0.4").revisions).default;
        "temporary".revision = (((hackage."temporary")."1.3").revisions).default;
        "optics-th".revision = (((hackage."optics-th")."0.3.0.2").revisions).default;
        "unbounded-delays".revision = (((hackage."unbounded-delays")."0.1.1.1").revisions).default;
        "tasty".revision = (((hackage."tasty")."1.4.1").revisions).default;
        "tasty".flags.unix = true;
        "tasty".flags.clock = true;
        "statistics-linreg".revision = (((hackage."statistics-linreg")."0.3").revisions).default;
        "deepseq".revision = (((hackage."deepseq")."1.4.4.0").revisions).default;
        "kan-extensions".revision = (((hackage."kan-extensions")."5.2.2").revisions).default;
        "vector-th-unbox".revision = (((hackage."vector-th-unbox")."0.2.1.9").revisions).default;
        "indexed-profunctors".revision = (((hackage."indexed-profunctors")."0.1.1").revisions).default;
        "strict".revision = (((hackage."strict")."0.4.0.1").revisions).default;
        "strict".flags.assoc = true;
        "byteable".revision = (((hackage."byteable")."0.1.1").revisions).default;
        "http-api-data".revision = (((hackage."http-api-data")."0.4.3").revisions).default;
        "http-api-data".flags.use-text-show = false;
        "attoparsec".revision = (((hackage."attoparsec")."0.13.2.5").revisions).default;
        "attoparsec".flags.developer = false;
        "generic-lens".revision = (((hackage."generic-lens")."2.1.0.0").revisions).default;
        "unix-bytestring".revision = (((hackage."unix-bytestring")."0.3.7.3").revisions).default;
        "monad-logger".revision = (((hackage."monad-logger")."0.3.36").revisions).default;
        "monad-logger".flags.template_haskell = true;
        "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
        "partial-order".revision = (((hackage."partial-order")."0.2.0.0").revisions).default;
        "partial-order".flags.extra-instances = true;
        "readable".revision = (((hackage."readable")."0.3.1").revisions).default;
        "blaze-textual".revision = (((hackage."blaze-textual")."0.2.1.0").revisions).default;
        "blaze-textual".flags.native = true;
        "blaze-textual".flags.integer-simple = false;
        "blaze-textual".flags.developer = false;
        "digest".revision = (((hackage."digest")."0.0.1.2").revisions).default;
        "digest".flags.bytestring-in-base = false;
        "pem".revision = (((hackage."pem")."0.2.4").revisions).default;
        "file-embed".revision = (((hackage."file-embed")."0.0.14.0").revisions).default;
        "double-conversion".revision = (((hackage."double-conversion")."2.0.2.0").revisions).default;
        "double-conversion".flags.developer = false;
        "colour".revision = (((hackage."colour")."2.3.6").revisions).default;
        "terminfo".revision = (((hackage."terminfo")."0.4.1.4").revisions).default;
        "syb".revision = (((hackage."syb")."0.7.2.1").revisions).default;
        "safe-exceptions".revision = (((hackage."safe-exceptions")."0.1.7.1").revisions).default;
        "blaze-html".revision = (((hackage."blaze-html")."0.9.1.2").revisions).default;
        "invariant".revision = (((hackage."invariant")."0.5.3").revisions).default;
        "dependent-map".revision = (((hackage."dependent-map")."0.4.0.0").revisions).default;
        "generic-arbitrary".revision = (((hackage."generic-arbitrary")."0.1.0").revisions).default;
        "system-fileio".revision = (((hackage."system-fileio")."0.3.16.4").revisions).default;
        "hashable".revision = (((hackage."hashable")."1.3.2.0").revisions).default;
        "hashable".flags.integer-gmp = true;
        "hashable".flags.random-initial-seed = false;
        "clock".revision = (((hackage."clock")."0.8.2").revisions).default;
        "clock".flags.llvm = false;
        "swagger2".revision = (((hackage."swagger2")."2.6").revisions).default;
        "adjunctions".revision = (((hackage."adjunctions")."4.4").revisions).default;
        "comonad".revision = (((hackage."comonad")."5.0.8").revisions).default;
        "comonad".flags.distributive = true;
        "comonad".flags.indexed-traversable = true;
        "comonad".flags.containers = true;
        "natural-transformation".revision = (((hackage."natural-transformation")."0.4").revisions).default;
        "immortal".revision = (((hackage."immortal")."0.3").revisions).default;
        "lifted-async".revision = (((hackage."lifted-async")."0.10.2").revisions).default;
        "ghc-heap".revision = (((hackage."ghc-heap")."8.10.4.20210212").revisions).default;
        "dictionary-sharing".revision = (((hackage."dictionary-sharing")."0.1.0.0").revisions).default;
        "ghci".revision = (((hackage."ghci")."8.10.4.20210212").revisions).default;
        "assoc".revision = (((hackage."assoc")."1.0.2").revisions).default;
        "statistics".revision = (((hackage."statistics")."0.15.2.0").revisions).default;
        "sqlite-simple".revision = (((hackage."sqlite-simple")."0.4.18.0").revisions).default;
        "asn1-parse".revision = (((hackage."asn1-parse")."0.9.5").revisions).default;
        "base64-bytestring".revision = (((hackage."base64-bytestring")."1.2.0.1").revisions).default;
        "gray-code".revision = (((hackage."gray-code")."0.3.1").revisions).default;
        "regex-base".revision = (((hackage."regex-base")."0.94.0.1").revisions).default;
        "bin".revision = (((hackage."bin")."0.1").revisions).default;
        "tasty-quickcheck".revision = (((hackage."tasty-quickcheck")."0.10.1.2").revisions).default;
        "managed".revision = (((hackage."managed")."1.0.8").revisions).default;
        "filelock".revision = (((hackage."filelock")."0.1.1.5").revisions).default;
        "th-expand-syns".revision = (((hackage."th-expand-syns")."0.4.7.0").revisions).default;
        "type-equality".revision = (((hackage."type-equality")."1").revisions).default;
        "filemanip".revision = (((hackage."filemanip")."0.3.6.3").revisions).default;
        "deriving-compat".revision = (((hackage."deriving-compat")."0.5.9").revisions).default;
        "deriving-compat".flags.new-functor-classes = true;
        "deriving-compat".flags.base-4-9 = true;
        "deriving-compat".flags.template-haskell-2-11 = true;
        "Cabal".revision = (((hackage."Cabal")."3.2.1.0").revisions).default;
        "hspec".revision = (((hackage."hspec")."2.8.2").revisions).default;
        "cryptonite".revision = (((hackage."cryptonite")."0.27").revisions).default;
        "cryptonite".flags.old_toolchain_inliner = false;
        "cryptonite".flags.support_pclmuldq = false;
        "cryptonite".flags.support_deepseq = true;
        "cryptonite".flags.support_aesni = true;
        "cryptonite".flags.use_target_attributes = true;
        "cryptonite".flags.support_sse = false;
        "cryptonite".flags.support_rdrand = true;
        "cryptonite".flags.integer-gmp = true;
        "cryptonite".flags.check_alignment = false;
        "hedgehog-quickcheck".revision = (((hackage."hedgehog-quickcheck")."0.1.1").revisions).default;
        "network-info".revision = (((hackage."network-info")."0.2.0.10").revisions).default;
        "th-compat".revision = (((hackage."th-compat")."0.1.2").revisions).default;
        "mmorph".revision = (((hackage."mmorph")."1.1.5").revisions).default;
        "indexed-traversable".revision = (((hackage."indexed-traversable")."0.1.1").revisions).default;
        "zlib".revision = (((hackage."zlib")."0.6.2.3").revisions).default;
        "zlib".flags.non-blocking-ffi = false;
        "zlib".flags.bundled-c-zlib = false;
        "zlib".flags.pkg-config = false;
        "MonadRandom".revision = (((hackage."MonadRandom")."0.5.3").revisions).default;
        "hourglass".revision = (((hackage."hourglass")."0.2.12").revisions).default;
        "appar".revision = (((hackage."appar")."0.1.8").revisions).default;
        "indexed-traversable-instances".revision = (((hackage."indexed-traversable-instances")."0.1").revisions).default;
        "testing-type-modifiers".revision = (((hackage."testing-type-modifiers")."0.1.0.1").revisions).default;
        "th-desugar".revision = (((hackage."th-desugar")."1.11").revisions).default;
        "mime-types".revision = (((hackage."mime-types")."0.1.0.9").revisions).default;
        "prometheus".revision = (((hackage."prometheus")."2.2.2").revisions).default;
        "http2".revision = (((hackage."http2")."3.0.2").revisions).default;
        "http2".flags.devel = false;
        "http2".flags.h2spec = false;
        "http2".flags.doc = false;
        "generic-monoid".revision = (((hackage."generic-monoid")."0.1.0.1").revisions).default;
        "data-default-instances-dlist".revision = (((hackage."data-default-instances-dlist")."0.0.1").revisions).default;
        "microstache".revision = (((hackage."microstache")."1.0.1.2").revisions).default;
        "unix-time".revision = (((hackage."unix-time")."0.4.7").revisions).default;
        "base-compat-batteries".revision = (((hackage."base-compat-batteries")."0.11.2").revisions).default;
        "extra".revision = (((hackage."extra")."1.7.9").revisions).default;
        "sort".revision = (((hackage."sort")."1.0.0.0").revisions).default;
        "old-locale".revision = (((hackage."old-locale")."1.0.0.7").revisions).default;
        "SHA".revision = (((hackage."SHA")."1.6.4.4").revisions).default;
        "SHA".flags.exe = false;
        "split".revision = (((hackage."split")."0.2.3.4").revisions).default;
        "x509-validation".revision = (((hackage."x509-validation")."1.6.11").revisions).default;
        "dec".revision = (((hackage."dec")."0.0.4").revisions).default;
        "transformers-except".revision = (((hackage."transformers-except")."0.1.1").revisions).default;
        "StateVar".revision = (((hackage."StateVar")."1.2.1").revisions).default;
        "monoidal-containers".revision = (((hackage."monoidal-containers")."0.6.0.1").revisions).default;
        "monoidal-containers".flags.split-these = true;
        "composition-prelude".revision = (((hackage."composition-prelude")."3.0.0.2").revisions).default;
        "composition-prelude".flags.development = false;
        "atomic-primops".revision = (((hackage."atomic-primops")."0.8.4").revisions).default;
        "atomic-primops".flags.debug = false;
        "stm".revision = (((hackage."stm")."2.5.0.0").revisions).default;
        "rate-limit".revision = (((hackage."rate-limit")."1.4.2").revisions).default;
        "extensible-exceptions".revision = (((hackage."extensible-exceptions")."0.1.1.4").revisions).default;
        };
      compiler = {
        version = "8.10.4.20210212";
        nix-name = "ghc810420210212";
        packages = {
          "binary" = "0.8.8.0";
          "ghc-boot" = "8.10.4.20210212";
          "ghc-prim" = "0.6.1";
          "exceptions" = "0.10.4";
          "array" = "0.5.4.0";
          "integer-gmp" = "1.0.3.0";
          "template-haskell" = "2.16.0.0";
          "pretty" = "1.1.3.6";
          "process" = "1.6.9.0";
          "hpc" = "0.6.1.0";
          "base" = "4.14.1.0";
          "rts" = "1.0";
          "text" = "1.2.4.1";
          "mtl" = "2.2.2";
          "time" = "1.9.3";
          "unix" = "2.7.2.2";
          "bytestring" = "0.10.12.0";
          "ghc" = "8.10.4.20210212";
          "containers" = "0.6.2.1";
          "directory" = "1.3.6.0";
          "parsec" = "3.1.14.0";
          "ghc-boot-th" = "8.10.4.20210212";
          "filepath" = "1.4.2.1";
          "deepseq" = "1.4.4.0";
          "transformers" = "0.5.6.2";
          "terminfo" = "0.4.1.4";
          "ghc-heap" = "8.10.4.20210212";
          "ghci" = "8.10.4.20210212";
          "Cabal" = "3.2.1.0";
          "stm" = "2.5.0.0";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        ouroboros-network = ./.plan.nix/ouroboros-network.nix;
        flat = ./.plan.nix/flat.nix;
        marlowe = ./.plan.nix/marlowe.nix;
        plutus-use-cases = ./.plan.nix/plutus-use-cases.nix;
        cardano-cli = ./.plan.nix/cardano-cli.nix;
        purescript-bridge = ./.plan.nix/purescript-bridge.nix;
        plutus-playground-server = ./.plan.nix/plutus-playground-server.nix;
        ouroboros-consensus-cardano = ./.plan.nix/ouroboros-consensus-cardano.nix;
        cardano-crypto-wrapper = ./.plan.nix/cardano-crypto-wrapper.nix;
        typed-protocols = ./.plan.nix/typed-protocols.nix;
        ouroboros-network-testing = ./.plan.nix/ouroboros-network-testing.nix;
        servant-purescript = ./.plan.nix/servant-purescript.nix;
        ouroboros-consensus-shelley = ./.plan.nix/ouroboros-consensus-shelley.nix;
        plutus-benchmark = ./.plan.nix/plutus-benchmark.nix;
        cardano-slotting = ./.plan.nix/cardano-slotting.nix;
        playground-common = ./.plan.nix/playground-common.nix;
        cardano-node = ./.plan.nix/cardano-node.nix;
        cardano-crypto-class = ./.plan.nix/cardano-crypto-class.nix;
        lobemo-backend-monitoring = ./.plan.nix/lobemo-backend-monitoring.nix;
        marlowe-dashboard-server = ./.plan.nix/marlowe-dashboard-server.nix;
        tracer-transformers = ./.plan.nix/tracer-transformers.nix;
        plutus-tx-plugin = ./.plan.nix/plutus-tx-plugin.nix;
        marlowe-symbolic = ./.plan.nix/marlowe-symbolic.nix;
        plutus-metatheory = ./.plan.nix/plutus-metatheory.nix;
        marlowe-playground-server = ./.plan.nix/marlowe-playground-server.nix;
        lobemo-scribe-systemd = ./.plan.nix/lobemo-scribe-systemd.nix;
        quickcheck-dynamic = ./.plan.nix/quickcheck-dynamic.nix;
        cardano-config = ./.plan.nix/cardano-config.nix;
        network-mux = ./.plan.nix/network-mux.nix;
        lobemo-backend-ekg = ./.plan.nix/lobemo-backend-ekg.nix;
        small-steps = ./.plan.nix/small-steps.nix;
        byron-spec-ledger = ./.plan.nix/byron-spec-ledger.nix;
        byron-spec-chain = ./.plan.nix/byron-spec-chain.nix;
        cardano-crypto-praos = ./.plan.nix/cardano-crypto-praos.nix;
        monoidal-synchronisation = ./.plan.nix/monoidal-synchronisation.nix;
        cardano-binary-test = ./.plan.nix/cardano-binary-test.nix;
        plutus-core = ./.plan.nix/plutus-core.nix;
        cardano-prelude-test = ./.plan.nix/cardano-prelude-test.nix;
        plutus-errors = ./.plan.nix/plutus-errors.nix;
        plutus-pab = ./.plan.nix/plutus-pab.nix;
        typed-protocols-examples = ./.plan.nix/typed-protocols-examples.nix;
        cardano-crypto-tests = ./.plan.nix/cardano-crypto-tests.nix;
        freer-extras = ./.plan.nix/freer-extras.nix;
        cardano-ledger-byron-test = ./.plan.nix/cardano-ledger-byron-test.nix;
        plutus-tx = ./.plan.nix/plutus-tx.nix;
        hedgehog-extras = ./.plan.nix/hedgehog-extras.nix;
        fake-pab = ./.plan.nix/fake-pab.nix;
        plutus-contract = ./.plan.nix/plutus-contract.nix;
        iohk-monitoring = ./.plan.nix/iohk-monitoring.nix;
        io-sim = ./.plan.nix/io-sim.nix;
        cardano-crypto-test = ./.plan.nix/cardano-crypto-test.nix;
        web-ghc = ./.plan.nix/web-ghc.nix;
        cardano-ledger-byron = ./.plan.nix/cardano-ledger-byron.nix;
        shelley-spec-ledger-test = ./.plan.nix/shelley-spec-ledger-test.nix;
        cardano-api = ./.plan.nix/cardano-api.nix;
        ouroboros-consensus = ./.plan.nix/ouroboros-consensus.nix;
        cardano-binary = ./.plan.nix/cardano-binary.nix;
        cardano-prelude = ./.plan.nix/cardano-prelude.nix;
        plutus-doc = ./.plan.nix/plutus-doc.nix;
        ouroboros-network-framework = ./.plan.nix/ouroboros-network-framework.nix;
        lobemo-backend-aggregation = ./.plan.nix/lobemo-backend-aggregation.nix;
        plutus-ledger-api = ./.plan.nix/plutus-ledger-api.nix;
        io-classes = ./.plan.nix/io-classes.nix;
        ouroboros-consensus-byron = ./.plan.nix/ouroboros-consensus-byron.nix;
        contra-tracer = ./.plan.nix/contra-tracer.nix;
        shelley-spec-non-integral = ./.plan.nix/shelley-spec-non-integral.nix;
        plutus-ledger = ./.plan.nix/plutus-ledger.nix;
        cardano-ledger-alonzo = ./.plan.nix/cardano-ledger-alonzo.nix;
        small-steps-test = ./.plan.nix/small-steps-test.nix;
        plutus-chain-index = ./.plan.nix/plutus-chain-index.nix;
        Win32-network = ./.plan.nix/Win32-network.nix;
        cardano-ledger-core = ./.plan.nix/cardano-ledger-core.nix;
        cardano-ledger-shelley-ma = ./.plan.nix/cardano-ledger-shelley-ma.nix;
        goblins = ./.plan.nix/goblins.nix;
        lobemo-backend-trace-forwarder = ./.plan.nix/lobemo-backend-trace-forwarder.nix;
        prettyprinter-configurable = ./.plan.nix/prettyprinter-configurable.nix;
        cardano-crypto = ./.plan.nix/cardano-crypto.nix;
        shelley-spec-ledger = ./.plan.nix/shelley-spec-ledger.nix;
        marlowe-actus = ./.plan.nix/marlowe-actus.nix;
        strict-containers = ./.plan.nix/strict-containers.nix;
        word-array = ./.plan.nix/word-array.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "ouroboros-network" = {
            flags = {
              "cddl" = lib.mkOverride 900 true;
              "ipv6" = lib.mkOverride 900 false;
              "asserts" = lib.mkOverride 900 false;
              };
            };
          "flat" = { flags = {}; };
          "marlowe" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "plutus-use-cases" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "cardano-cli" = {
            flags = { "unexpected_thunks" = lib.mkOverride 900 false; };
            };
          "purescript-bridge" = { flags = {}; };
          "plutus-playground-server" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "ouroboros-consensus-cardano" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "cardano-crypto-wrapper" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "typed-protocols" = { flags = {}; };
          "ouroboros-network-testing" = { flags = {}; };
          "servant-purescript" = { flags = {}; };
          "ouroboros-consensus-shelley" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "plutus-benchmark" = { flags = {}; };
          "cardano-slotting" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "playground-common" = { flags = {}; };
          "cardano-node" = {
            flags = {
              "unexpected_thunks" = lib.mkOverride 900 false;
              "systemd" = lib.mkOverride 900 true;
              };
            };
          "cardano-crypto-class" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "lobemo-backend-monitoring" = { flags = {}; };
          "marlowe-dashboard-server" = { flags = {}; };
          "tracer-transformers" = { flags = {}; };
          "plutus-tx-plugin" = { flags = {}; };
          "marlowe-symbolic" = { flags = {}; };
          "plutus-metatheory" = { flags = {}; };
          "marlowe-playground-server" = { flags = {}; };
          "lobemo-scribe-systemd" = { flags = {}; };
          "quickcheck-dynamic" = { flags = {}; };
          "cardano-config" = {
            flags = { "systemd" = lib.mkOverride 900 true; };
            };
          "network-mux" = {
            flags = {
              "ipv6" = lib.mkOverride 900 false;
              "asserts" = lib.mkOverride 900 false;
              };
            };
          "lobemo-backend-ekg" = { flags = {}; };
          "small-steps" = {
            flags = {
              "development" = lib.mkOverride 900 false;
              "sts_assert" = lib.mkOverride 900 false;
              };
            };
          "byron-spec-ledger" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "byron-spec-chain" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "cardano-crypto-praos" = {
            flags = {
              "development" = lib.mkOverride 900 false;
              "external-libsodium-vrf" = lib.mkOverride 900 true;
              };
            };
          "monoidal-synchronisation" = { flags = {}; };
          "cardano-binary-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "plutus-core" = { flags = {}; };
          "cardano-prelude-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "plutus-errors" = { flags = {}; };
          "plutus-pab" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "typed-protocols-examples" = { flags = {}; };
          "cardano-crypto-tests" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "freer-extras" = { flags = {}; };
          "cardano-ledger-byron-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "plutus-tx" = { flags = {}; };
          "hedgehog-extras" = { flags = {}; };
          "fake-pab" = { flags = {}; };
          "plutus-contract" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "iohk-monitoring" = {
            flags = {
              "performance-test-queue" = lib.mkOverride 900 false;
              "disable-observables" = lib.mkOverride 900 false;
              };
            };
          "io-sim" = { flags = { "asserts" = lib.mkOverride 900 false; }; };
          "cardano-crypto-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "web-ghc" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "cardano-ledger-byron" = {
            flags = {
              "development" = lib.mkOverride 900 false;
              "test-normal-form" = lib.mkOverride 900 false;
              };
            };
          "shelley-spec-ledger-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "cardano-api" = { flags = {}; };
          "ouroboros-consensus" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "cardano-binary" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "cardano-prelude" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "plutus-doc" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "ouroboros-network-framework" = { flags = {}; };
          "lobemo-backend-aggregation" = { flags = {}; };
          "plutus-ledger-api" = { flags = {}; };
          "io-classes" = {
            flags = {
              "checktvarinvariant" = lib.mkOverride 900 false;
              "asserts" = lib.mkOverride 900 false;
              };
            };
          "ouroboros-consensus-byron" = {
            flags = { "asserts" = lib.mkOverride 900 false; };
            };
          "contra-tracer" = { flags = {}; };
          "shelley-spec-non-integral" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "plutus-ledger" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "cardano-ledger-alonzo" = { flags = {}; };
          "small-steps-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "plutus-chain-index" = { flags = {}; };
          "Win32-network" = { flags = { "demo" = lib.mkOverride 900 false; }; };
          "cardano-ledger-core" = { flags = {}; };
          "cardano-ledger-shelley-ma" = { flags = {}; };
          "goblins" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "lobemo-backend-trace-forwarder" = { flags = {}; };
          "prettyprinter-configurable" = { flags = {}; };
          "cardano-crypto" = {
            flags = {
              "golden-tests-exe" = lib.mkOverride 900 false;
              "golden-tests" = lib.mkOverride 900 false;
              };
            };
          "shelley-spec-ledger" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "marlowe-actus" = {
            flags = { "defer-plugin-errors" = lib.mkOverride 900 false; };
            };
          "strict-containers" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "word-array" = { flags = {}; };
          };
        })
    ];
  }