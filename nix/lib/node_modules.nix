{ npmlock2nix
, nodejs
, nodejs-14_x
, python2
, stdenv
, lib
, CoreServices ? null # needed by darwin only
, xcodebuild ? null   # needed by darwin only
, nix-info
, darwin
}:
# Description: Takes a source directory, a `package.json` and a `package-lock.json`
# and creates an output containing `node_modules/, package.json, package-lock.json`. The `buildInputs`
# will be avaibale during `npm install`
# Type: Attr -> Derivation
{ projectDir, packageJson, packageLockJson, buildInputs ? [ ], githubSourceHashMap ? { } }:
npmlock2nix.node_modules {
  src = projectDir;
  inherit packageJson packageLockJson githubSourceHashMap;
  inherit nodejs;
  preBuild = ''
    echo "node_modules build ..."
    echo "*****************************************************"
    cat ${nodejs}/bin/npm | head -n 20
    echo "*****************************************************"
    cat ${nodejs-14_x}/bin/npm | head -n 20
    echo "*****************************************************"
  '' + lib.optionalString (stdenv.isDarwin) ''
    echo "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ${darwin.DarwinTools}/bin/sw_vers
    echo "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    export
    echo "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ${nodejs-14_x}/bin/npm  --version
    ${nodejs-14_x}/bin/node --version
    echo "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ${nodejs}/bin/npm  --version
    ${nodejs}/bin/node --version
  '';
  buildInputs = [ python2 ]
    ++ lib.optionals (stdenv.isDarwin) [ CoreServices xcodebuild ]
    ++ buildInputs;
}
