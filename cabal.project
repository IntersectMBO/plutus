-- Custom repository for cardano haskell packages, see CONTRIBUTING for more
repository cardano-haskell-packages
  url: https://chap.intersectmbo.org/
  secure: True
  root-keys:
    3e0cce471cf09815f930210f7827266fd09045445d65923e6d0238a6cd15126f
    443abb7fb497a134c343faf52f0b659bd7999bc06b7f63fa76dc99d631f9bea1
    a86a1f6ce86c449c46666bda44268677abf29b5b2d2eb5ec7af903ec2f117a82
    bcec67e8e99cabfa7764d75ad9b158d72bfacf70ca1d0ec8bc6b4406d1bf8413
    c00aae8461a256275598500ea0e187588c35a5d5d7454fb57eac18d9edb86a56
    d4a35cd3121aa00d18544bb0ac01c3e1691d618f462c46129271bccf39f7e8ee

-- See CONTRIBUTING for some Nix commands you will need to run if you
-- update either of these.
index-state:
  -- Bump both the following dates if you need newer packages from Hackage
  , hackage.haskell.org 2025-10-23T20:17:38Z
  -- Bump this if you need newer packages from CHaP
  , cardano-haskell-packages 2025-10-23T21:54:57Z

packages: cardano-constitution
          plutus-benchmark
          plutus-conformance
          plutus-core
          plutus-executables
          plutus-ledger-api
          plutus-metatheory
          plutus-tx
          plutus-tx-plugin
          doc/docusaurus/docusaurus-examples.cabal

-- We never, ever, want this.
write-ghc-environment-files: never

-- Always build tests and benchmarks.
tests: true
benchmarks: true

-- The only sensible test display option, since it allows us to have colourized
-- 'tasty' output.
test-show-details: direct

package plutus-core
  flags: +with-inline-r +with-cert

if arch(wasm32)
  package plutus-core
    flags: +do-not-build-plutus-exec

-- Various dependencies of coq don't work when cross building for windows
if os(windows)
  -- Note: we enable this and then disable it conditionally, rather than enabling
  -- it conditionally, to avoid https://github.com/haskell/cabal/issues/9293
  package plutus-core
    flags: -with-cert
  -- This is a bit silly. Although we won't use plutus-cert in this case, cabal
  -- still considers it a "local" project and tries to solve for it so we hack
  -- around the dependency issue, keeping cabal happy, which is fine since it
  -- won't actually build it.
  allow-older: plutus-cert:base

-- Recently introduced flag to be clever and use SIMD instructions.
-- We don't need this and it causes problems in a few settings including
-- cross-compilation.
package bitvec
  flags: -simd

-- See the note on nix/agda-packages.nix for why this is here.
-- (NOTE this will change to ieee754 in newer versions of nixpkgs).
extra-packages: ieee, filemanip

source-repository-package
  type: git
  location: https://github.com/jaccokrijnen/plutus-cert
  tag: e814b9171398cbdfecdc6823067156a7e9fc76a3

allow-newer:
  -- https://github.com/phadej/vec/issues/121
  ral:QuickCheck,
  fin:QuickCheck,
  bin:QuickCheck,

-- https://github.com/IntersectMBO/plutus/pull/7236
constraints: setup.optparse-applicative >=0.19.0.0
allow-newer: turtle:optparse-applicative

if impl (ghc >= 9.14)
  -- https://github.com/snowleopard/alga/issues/322
  source-repository-package
    type: git
    location: https://github.com/snowleopard/alga/
    tag: d4e43fb42db05413459fb2df493361d5a666588a

if impl (ghc >= 9.14)
  constraints:
    , nothunks ^>= 0.2
    , microlens ^>= 0.4
    , microlens-mtl < 0.2.1.1
    , microlens-th < 0.4.3.18
    -- Newest version causes Arbitrary instance clashes in quickcheck-instances.
    , QuickCheck < 2.17.0.0

-- cabal-allow-newer
if impl (ghc >= 9.14)
  allow-newer:
    , Cabal:Cabal-syntax
    , Cabal:containers
    , Cabal-syntax:containers
    , OneTuple:base
    , QuickCheck:base
    , QuickCheck:splitmix
    , aeson:OneTuple
    , aeson:containers
    , aeson:data-fix
    , aeson:ghc-prim
    , aeson:indexed-traversable
    , aeson:scientific
    , aeson:semialign
    , aeson:template-haskell
    , aeson:text-iso8601
    , aeson:these
    , aeson:time
    , aeson:time-compat
    , aeson:witherable
    , assoc:base
    , async:base
    , base:ghc-internal
    , base:ghc-prim
    , bifunctors:template-haskell
    , bin:base
    , binary:containers
    , binary-orphans:base
    , boring:base
    , brick:base
    , canonical-json:containers
    , cardano-crypto-class:io-classes
    , cborg:base
    , cborg:containers
    , cborg:ghc-prim
    , concurrent-output:process
    , config-ini:containers
    , config-ini:text
    , constraints-extras:base
    , constraints-extras:template-haskell
    , containers:base
    , containers:template-haskell
    , criterion:aeson
    , data-default:containers
    , data-default-class:data-default
    , data-fix:base
    , dec:base
    , deepseq:base
    , deepseq:ghc-prim
    , dependent-map:containers
    , deriving-compat:containers
    , deriving-compat:template-haskell
    , dictionary-sharing:containers
    , directory:base
    , directory:time
    , dom-lt:containers
    , fin:base
    , fin:universe-base
    , foldl:containers
    , free:containers
    , free:template-haskell
    , generically:base
    , ghc-heap:containers
    , ghc-heap:ghc-internal
    , hashable:base
    , hashable:containers
    , hashable:ghc-bignum
    , hedgehog:containers
    , hedgehog:template-haskell
    , hedgehog:time
    , hedgehog-fn:hedgehog
    , hsc2hs:base
    , indexed-traversable:base
    , indexed-traversable:containers
    , indexed-traversable-instances:base
    , integer-conversion:base
    , integer-logarithms:base
    , integer-logarithms:ghc-bignum
    , io-classes:base
    , io-classes:time
    , lens:containers
    , lens:free
    , lens:template-haskell
    , list-t:foldl
    , megaparsec:base
    , megaparsec:containers
    , megaparsec:transformers
    , microlens-th:containers
    , microlens-th:template-haskell
    , microstache:aeson
    , microstache:base
    , microstache:containers
    , microstache:unordered-containers
    , microstache:vector
    , monoidal-containers:base
    , monoidal-containers:containers
    , network-uri:th-compat
    , nonempty-vector:base
    , nothunks:containers
    , nothunks:time
    , nothunks:wherefrom-compat
    , ordered-containers:containers
    , os-string:template-haskell
    , parallel:base
    , parsec:text
    , plutus-core:dependent-map
    , plutus-core:microlens-th
    , plutus-core:vty
    , primitive:base
    , process:base
    , process:unix
    , quickcheck-instances:QuickCheck
    , quickcheck-instances:base
    , quickcheck-instances:containers
    , ral:base
    , ral:boring
    , recursion-schemes:containers
    , recursion-schemes:template-haskell
    , scientific:base
    , scientific:containers
    , scientific:integer-logarithms
    , scientific:template-haskell
    , semialign:base
    , semialign:containers
    , semigroupoids:bifunctors
    , serialise:base
    , serialise:containers
    , serialise:ghc-prim
    , serialise:time
    , singletons:base
    , singletons-th:base
    , singletons-th:singletons
    , singletons-th:template-haskell
    , singletons-th:th-desugar
    , singletons-th:th-orphans
    , size-based:template-haskell
    , some:base
    , splitmix:base
    , statistics:parallel
    , tagged:base
    , tagged:template-haskell
    , tasty:base
    , tasty:tagged
    , tasty-golden:tasty
    , tasty-hedgehog:base
    , test-framework:time
    , text:binary
    , text:bytestring
    , text:template-haskell
    , text-iso8601:time
    , text-short:base
    , text-short:bytestring
    , text-short:ghc-prim
    , text-short:template-haskell
    , th-abstraction:template-haskell
    , th-compat:template-haskell
    , th-desugar:template-haskell
    , th-expand-syns:base
    , th-expand-syns:containers
    , th-expand-syns:template-haskell
    , th-lift:template-haskell
    , th-lift-instances:th-lift
    , th-orphans:template-haskell
    , these:base
    , time-compat:base
    , time-compat:deepseq
    , time-compat:time
    , transformers:base
    , tree-diff:QuickCheck
    , tree-diff:base
    , tree-diff:containers
    , tree-diff:time
    , turtle:containers
    , turtle:time
    , typed-process:async
    , universe-base:base
    , universe-base:containers
    , unix:time
    , unordered-containers:hashable
    , unordered-containers:template-haskell
    , uuid-types:template-haskell
    , vector-th-unbox:base
    , vector-th-unbox:template-haskell
    , wherefrom-compat:base
    , wherefrom-compat:ghc-heap
    , witherable:containers
