#!/usr/bin/env bash
set -eEuo pipefail

error () {
    echo "$*" >&2
    exit 1
}

readonly ops_repo="input-output-hk/plutus-ops"
readonly ops_branch="master"
readonly plutus_rev="${GITHUB_SHA:-}"

if [ -z "${plutus_rev}" ]
then
    error "GITHUB_SHA environment variable not set!"
fi

readonly plutus_ref="${GITHUB_REF_SLUG:-}"

if [ -z "${plutus_ref}" ]
then
    error "GITHUB_REF_SLUG environment variable not set!"
fi

declare -A ref_env_mapping=(
    # TODO Make this the production branch
    [marlowe-dist-demo]=production
    [master]=staging
    # TODO need branches for wyohack and plutus-production
)

if [ ! -v 'ref_env_mapping[${plutus_ref}]' ]
then
    error "Ref ${plutus_ref} does not correspond to any known env"
fi
plutus_env="${ref_env_mapping[${plutus_ref}]}"

if [ "$#" -ne 0 ]
then
    error "USAGE: $0"
fi

### Set up scratch space

tmp=/var/lib/empty

cleanup () {
    if [ "${tmp}" != "/var/lib/empty" ]
    then
        rm -fR "${tmp}"
    fi
}
trap cleanup EXIT

tmp="$(mktemp -d)"

declare -r tmp

### Write the new revision cue file

cat > "${tmp}/${plutus_env}.cue" <<EOF
package revisions

"${plutus_env}": "${plutus_rev}"
EOF



### Get the old revision cue file, exit if it's unchanged
hub api -XGET -F ref="${ops_branch}" "/repos/${ops_repo}/contents/revisions/${plutus_env}.cue" > "${tmp}/${plutus_env}.cue-contents.json"
prev_hash="$(jq --join-output '.sha' < "${tmp}/${plutus_env}.cue-contents.json")"
jq --join-output '.content' < "${tmp}/${plutus_env}.cue-contents.json" | base64 -d > "${tmp}/${plutus_env}-old.cue"
if diff -q "${tmp}/${plutus_env}.cue" "${tmp}/${plutus_env}-old.cue" >/dev/null
then
    exit 0
fi

### Commit the new revision cue file
base64 "${tmp}/${plutus_env}.cue" > "${tmp}/${plutus_env}.cue-encoded"
echo "${plutus_env}: Bump plutus to ${plutus_rev}" > "${tmp}/commit-message"
hub api -XPUT \
    -F message=@"${tmp}/commit-message" \
    -F content=@"${tmp}/${plutus_env}.cue-encoded" \
    -F sha="${prev_hash}" \
    -F branch="${ops_branch}" \
    "/repos/${ops_repo}/contents/revisions/${plutus_env}.cue"
