module Ast12 where

open import VerifiedCompilation
open import VerifiedCompilation.Certificate
open import Untyped
open import RawU
open import Builtin
open import Data.Unit
open import Data.Nat
open import Data.Integer
open import Utils
import Agda.Builtin.Bool
import Relation.Nullary
import VerifiedCompilation.UntypedTranslation
open import Agda.Builtin.Maybe
open import Data.Empty using (⊥)
open import Data.Bool.Base using (Bool; false; true)
open import Agda.Builtin.Equality using (_≡_; refl)

ast12 : Untyped

ast12 = (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (ULambda (ULambda (UCase (UApp (UVar 11) (UVar 0)) ((ULambda (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UForce (UCase (UApp (ULambda (UCase (UVar 7) ((ULambda (ULambda (ULambda (ULambda (ULambda (UCase (UVar 5) ((ULambda (ULambda (ULambda (UApp (UVar 19) (UForce (UApp (ULambda (UApp (ULambda (UCase (UVar 11) ((ULambda (UDelay (UConstr 1 ((UCase (UVar 0) ((ULambda (ULambda (ULambda (UForce (UCase (UVar 16) ((ULambda (UDelay (UCase (UVar 0) ((ULambda (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 4)) (UVar 0))) (UConstr 1 ([]))) (UConstr 0 ([])))))) ∷ [])))) ∷ (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UVar 10))) (UConstr 1 ([]))) (UConstr 0 ([])))) ∷ [])))))) ∷ [])) ∷ (UConstr 1 ((UApp (UApp (UApp (UApp (UVar 1) (UVar 27)) (UVar 26)) (UConstr 0 ((UConstr 0 ((UConstr 1 ([])) ∷ (UConstr 0 ([])) ∷ [])) ∷ (UConstr 0 ((UConstr 0 ((UVar 6) ∷ [])) ∷ (UConstr 0 ([])) ∷ [])) ∷ []))) (UCase (UVar 5) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 8))))))))))))))))) ∷ []))) ∷ (UConstr 1 ((UForce (UCase (UVar 13) ((ULambda (UDelay (UCase (UVar 0) ((ULambda (ULambda (ULambda (UForce (UCase (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 1 ([]))) ∷ (ULambda (ULambda (UDelay (UForce (UCase (UCase (UVar 1) ((ULambda (ULambda (ULambda (ULambda (UForce (UCase (UForce (UCase (UCase (UVar 3) ((ULambda (ULambda (UCase (UVar 1) ((ULambda (UConstr 0 ((UVar 0) ∷ []))) ∷ (ULambda (UConstr 1 ([]))) ∷ [])))) ∷ [])) ((ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 0)) (UVar 10))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))) ((UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UApp (UApp (UApp (UVar 14) (UVar 2)) (UCon (tagCon bytestring (mkByteString "")))) (UCon (tagCon bytestring (mkByteString ""))))) (UVar 8))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))))) ∷ [])) ((UDelay (UConstr 0 ((UVar 1) ∷ []))) ∷ (UDelay (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))) ∷ [])))))) ∷ [])))))) (UCase (UVar 9) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))) ∷ []))) ((ULambda (UDelay (UConstr 0 ([])))) ∷ (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Not found: refund output"))) (UConstr 0 ([]))))) ∷ [])))))) ∷ [])))) ∷ (UDelay (UConstr 0 ([]))) ∷ []))) ∷ (UConstr 1 ((UApp (ULambda (UForce (UApp (ULambda (UCase (UVar 1) ((UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))) ∷ (ULambda (ULambda (UDelay (UForce (UCase (UVar 0) ((UDelay (UApp (ULambda (UApp (ULambda (UForce (UCase (UForce (UCase (UCase (UVar 3) ((ULambda (ULambda (ULambda (ULambda (UVar 1))))) ∷ [])) ((UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Expected OutputDatum, got NoOutputDatum"))) (UConstr 0 ([]))))) ∷ (ULambda (UDelay (UForce (UCase (UApp (UApp (UApp (UApp (UApp (UApp (UVar 37) (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 0 ((UConstr 1 ([])) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UForce (UCase (UApp (UApp (UApp (UVar 53) (UConstr 1 ([]))) (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ []))))) (UVar 0)) ((ULambda (UDelay (UForce (UCase (UApp (UApp (UApp (UApp (UApp (UApp (UVar 40) (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UForce (UCase (UApp (UApp (UApp (UVar 56) (UConstr 1 ([]))) (ULambda (ULambda (UConstr 0 ((UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])) ∷ []))))) (UVar 0)) ((ULambda (UDelay (UCase (UVar 0) ((ULambda (ULambda (UForce (UCase (UApp (UForce (UVar 44)) (UVar 1)) ((ULambda (UDelay (UForce (UCase (UApp (UApp (UApp (UVar 60) (UConstr 1 ([]))) (ULambda (ULambda (UConstr 0 ((UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])) ∷ []))))) (UVar 1)) ((ULambda (UDelay (UCase (UVar 0) ((ULambda (ULambda (UForce (UCase (UApp (UForce (UVar 48)) (UVar 1)) ((ULambda (UDelay (UForce (UCase (UApp (UApp (UApp (UVar 64) (UConstr 1 ([]))) (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ []))))) (UVar 1)) ((ULambda (UDelay (UForce (UCase (UApp (UApp (UApp (UApp (UApp (UApp (UVar 51) (ULambda (ULambda (UConstr 1 ([]))))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 0 ((UVar 0) ∷ [])))) (ULambda (UConstr 1 ([])))) (UVar 0)) ((ULambda (UDelay (UConstr 0 ((UConstr 0 ((UVar 6) ∷ (UVar 2) ∷ (UVar 0) ∷ [])) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) (UDelay (UConstr 1 ([])))))))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (UVar 0)) ((ULambda (UDelay (UConstr 0 ((UConstr 0 ((UVar 0) ∷ [])) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) (UDelay (UConstr 1 ([]))))))))))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (UVar 0)) ((ULambda (UDelay (UForce (UCase (UVar 0) ((ULambda (UDelay (UForce (UCase (UCase (UVar 9) ((ULambda (ULambda (ULambda (UCase (UVar 3) ((ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 4)) (UVar 1))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 3)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))))))) ∷ []))))) ∷ [])) ((UDelay (UConstr 0 ([]))) ∷ (UDelay (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Invalid output datum: contains a different Bid than expected"))) (UConstr 1 ([])))) ∷ []))))) ∷ (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Invalid output datum: expected Just Bid, got Nothing"))) (UConstr 0 ([]))))) ∷ []))))) ∷ (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Failed to decode output datum"))) (UConstr 0 ([]))))) ∷ []))))) ∷ (ULambda (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Expected OutputDatum, got OutputDatumHash"))) (UConstr 0 ([])))))) ∷ []))) ((UDelay (UVar 0)) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))) (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UApp (UApp (UApp (UVar 7) (UVar 0)) (UCon (tagCon bytestring (mkByteString "")))) (UCon (tagCon bytestring (mkByteString ""))))) (UCase (UVar 5) ((ULambda (ULambda (ULambda (UVar 0)))) ∷ [])))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UApp (UApp (UVar 7) (UVar 0)) (UVar 14)) (UVar 13)))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([]))))))) (UCase (UVar 1) ((ULambda (ULambda (ULambda (ULambda (UVar 2))))) ∷ [])))) ∷ (ULambda (ULambda (UDelay (UApp (UVar 4) (UCon (tagCon unit tt)))))) ∷ [])))))) ∷ []))) (ULambda (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UApp (UApp (UBuiltin appendString) (UCon (tagCon string "Expected exactly one continuing output, got "))) (UApp (ULambda (UApp (UVar 22) (UApp (UApp (UApp (UVar 26) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)) (UConstr 0 ([]))))) (UApp (UForce (UVar 22)) (UVar 1))))) (UConstr 0 ([])))))))) (UForce (UCase (UCase (UVar 11) ((ULambda (ULambda (ULambda (UCase (UVar 2) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UCase (UVar 16) ((ULambda (ULambda (UConstr 1 ([])))) ∷ (ULambda (UConstr 1 ([]))) ∷ (ULambda (ULambda (UConstr 1 ([])))) ∷ (ULambda (UConstr 1 ([]))) ∷ (ULambda (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 18)))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 1 ([]))) ∷ (ULambda (ULambda (UDelay (UCase (UVar 1) ((ULambda (ULambda (UForce (UCase (UForce (UCase (UCase (UVar 1) ((ULambda (ULambda (UCase (UVar 8) ((ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 3)) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ [])))) ∷ [])) ((UDelay (UCase (UVar 1) ((ULambda (ULambda (UCase (UVar 8) ((ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 2)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ [])))) ∷ []))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))) ((UDelay (UConstr 0 ((UVar 3) ∷ []))) ∷ (UDelay (UApp (UApp (UVar 5) (UVar 5)) (UVar 2))) ∷ []))))) ∷ []))))) ∷ [])))))))) ∷ (ULambda (UConstr 1 ([]))) ∷ [])))))))))))))))))) ∷ []))))) ∷ [])) ((ULambda (UDelay (UCase (UVar 0) ((ULambda (ULambda (UCase (UVar 0) ((ULambda (UApp (ULambda (UApp (ULambda (ULambda (ULambda (ULambda (UApp (UVar 3) (UCase (UVar 20) ((ULambda (ULambda (ULambda (UCase (UVar 2) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))) ∷ []))))) ∷ []))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ([]))) ∷ (ULambda (ULambda (UDelay (UApp (ULambda (UForce (UCase (UCase (UVar 2) ((ULambda (ULambda (ULambda (ULambda (UCase (UVar 10) ((ULambda (ULambda (UCase (UVar 5) ((ULambda (ULambda (UForce (UCase (UCase (UVar 3) ((ULambda (UCase (UVar 2) ((ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ (ULambda (UConstr 1 ([]))) ∷ []))) ∷ (ULambda (UCase (UVar 2) ((ULambda (UConstr 1 ([]))) ∷ (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ []))) ∷ [])) ((UDelay (UForce (UCase (UVar 2) ((ULambda (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UCase (UVar 1) ((ULambda (UCase (UVar 1) ((ULambda (UCase (UVar 1) ((ULambda (UCase (UVar 1) ((ULambda (UApp (UApp (UVar 19) (UVar 1)) (UVar 0))) ∷ (ULambda (UConstr 1 ([]))) ∷ []))) ∷ (ULambda (UCase (UVar 1) ((ULambda (UConstr 1 ([]))) ∷ (ULambda (UApp (UApp (UVar 19) (UVar 1)) (UVar 0))) ∷ []))) ∷ []))) ∷ (ULambda (ULambda (ULambda (UConstr 1 ([]))))) ∷ []))) ∷ (ULambda (ULambda (ULambda (UCase (UVar 3) ((ULambda (UConstr 1 ([]))) ∷ (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 5)) (UVar 2))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 4)) (UVar 1))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 3)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([]))))))) (UDelay (UConstr 1 ([])))))))) ∷ []))))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay (UForce (UCase (UVar 0) ((ULambda (UDelay (UConstr 1 ([])))) ∷ (UDelay (UConstr 0 ([]))) ∷ [])))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ [])))) ∷ [])))))) ∷ [])) ((UDelay (UConstr 1 ((UVar 2) ∷ (UVar 0) ∷ []))) ∷ (UDelay (UVar 0)) ∷ [])))) (UApp (UApp (UVar 3) (UVar 3)) (UVar 0)))))) ∷ [])))))))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))))) ∷ [])))) ∷ [])))) ∷ (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Lf"))) (UConstr 0 ([]))))) ∷ [])))) ∷ (UConstr 0 ([])) ∷ [])) ∷ [])) ∷ [])) ∷ [])))) ∷ (UDelay (UConstr 1 ((UApp (UApp (UApp (UApp (UVar 0) (UVar 26)) (UVar 25)) (UConstr 0 ((UConstr 0 ((UConstr 0 ((UVar 5) ∷ [])) ∷ (UConstr 0 ([])) ∷ [])) ∷ (UConstr 0 ((UConstr 2 ([])) ∷ (UConstr 0 ([])) ∷ [])) ∷ []))) (UCase (UVar 4) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 8))))))))))))))))) ∷ []))) ∷ (UConstr 1 ((UForce (UCase (UVar 12) ((ULambda (UApp (ULambda (UDelay (UForce (UCase (UApp (UVar 0) (UCase (UVar 6) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))) ∷ []))) ((ULambda (UDelay (UConstr 0 ([])))) ∷ (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Not found: Output paid to seller"))) (UConstr 0 ([]))))) ∷ []))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 1 ([]))) ∷ (ULambda (ULambda (UDelay (UForce (UCase (UCase (UVar 1) ((ULambda (ULambda (ULambda (ULambda (UForce (UCase (UForce (UCase (UCase (UVar 3) ((ULambda (ULambda (UCase (UVar 1) ((ULambda (UConstr 0 ((UVar 0) ∷ []))) ∷ (ULambda (UConstr 1 ([]))) ∷ [])))) ∷ [])) ((ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 0)) (UVar 19))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))) ((UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UApp (UApp (UApp (UVar 10) (UVar 2)) (UCon (tagCon bytestring (mkByteString "")))) (UCon (tagCon bytestring (mkByteString ""))))) (UCase (UVar 8) ((ULambda (ULambda (ULambda (UVar 0)))) ∷ [])))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))))) ∷ [])) ((UDelay (UConstr 0 ((UVar 1) ∷ []))) ∷ (UDelay (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))) ∷ [])))))) ∷ [])))))))) ∷ (UDelay (UConstr 0 ([]))) ∷ []))) ∷ (UConstr 1 ((UApp (ULambda (UForce (UCase (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 1 ([]))) ∷ (ULambda (ULambda (UDelay (UForce (UCase (UCase (UVar 1) ((ULambda (ULambda (ULambda (ULambda (UForce (UCase (UForce (UCase (UCase (UVar 3) ((ULambda (ULambda (UCase (UVar 1) ((ULambda (UConstr 0 ((UVar 0) ∷ []))) ∷ (ULambda (UConstr 1 ([]))) ∷ [])))) ∷ [])) ((ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 0)) (UVar 9))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))) ((UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UApp (UApp (UVar 10) (UVar 2)) (UVar 17)) (UVar 16)))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))))) ∷ [])) ((UDelay (UConstr 0 ((UVar 1) ∷ []))) ∷ (UDelay (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))) ∷ [])))))) ∷ [])))))) (UCase (UVar 5) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))) ∷ []))) ((ULambda (UDelay (UConstr 0 ([])))) ∷ (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Not found: Output paid to highest bidder"))) (UConstr 0 ([]))))) ∷ [])))) (UForce (UCase (UVar 12) ((ULambda (UDelay (UCase (UVar 0) ((ULambda (ULambda (ULambda (UVar 1)))) ∷ [])))) ∷ (UDelay (UVar 9)) ∷ [])))) ∷ (UConstr 0 ([])) ∷ [])) ∷ [])) ∷ []))) ∷ []))) (ULambda (ULambda (ULambda (ULambda (UForce (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UCase (UApp (UApp (UApp (UVar 0) (UVar 7)) (UVar 6)) (UVar 4)) ((UDelay (UConstr 0 ([]))) ∷ (UDelay (UForce (UCase (UApp (UApp (UApp (UVar 0) (UVar 7)) (UVar 6)) (UVar 5)) ((UDelay (UConstr 1 ([]))) ∷ (UDelay (UCase (UVar 5) ((ULambda (ULambda (UCase (UVar 6) ((ULambda (ULambda (UForce (UApp (ULambda (UCase (UForce (UCase (UApp (UApp (UApp (UVar 0) (UVar 11)) (UCase (UVar 4) ((ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UVar 1)) ∷ (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UConstr 0 ((UApp (UApp (UVar 11) (UVar 15)) (UVar 0)) ∷ [])))) ∷ (UDelay (UVar 1)) ∷ (UDelay (UVar 1)) ∷ [])))) ∷ []))))) ∷ []))) (UCase (UVar 2) ((ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UVar 1)) ∷ (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UConstr 0 ((UApp (UApp (UVar 11) (UVar 15)) (UVar 0)) ∷ [])))) ∷ (UDelay (UVar 1)) ∷ (UDelay (UVar 1)) ∷ [])))) ∷ []))))) ∷ []))) ((UDelay (UConstr 0 ([]))) ∷ (UDelay (UConstr 1 ([]))) ∷ (UDelay (UConstr 0 ([]))) ∷ []))) ((UDelay (UForce (UCase (UApp (UApp (UApp (UVar 0) (UVar 11)) (UCase (UVar 1) ((ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UVar 1)) ∷ (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UConstr 0 ((UApp (UApp (UVar 10) (UVar 15)) (UVar 0)) ∷ [])))) ∷ (UDelay (UVar 1)) ∷ (UDelay (UVar 1)) ∷ [])))) ∷ []))))) ∷ []))) (UCase (UVar 3) ((ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UVar 1)) ∷ (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UConstr 0 ((UApp (UApp (UVar 10) (UVar 15)) (UVar 0)) ∷ [])))) ∷ (UDelay (UVar 1)) ∷ (UDelay (UVar 1)) ∷ [])))) ∷ []))))) ∷ []))) ((UDelay (UConstr 0 ([]))) ∷ (UDelay (UConstr 1 ([]))) ∷ (UDelay (UConstr 0 ([]))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))) (ULambda (ULambda (ULambda (UForce (UApp (ULambda (UApp (ULambda (UCase (UVar 3) ((ULambda (UDelay (UForce (UVar 1)))) ∷ (UDelay (UForce (UCase (UVar 2) ((ULambda (UDelay (UConstr 2 ([])))) ∷ (UDelay (UConstr 0 ([]))) ∷ (UDelay (UConstr 2 ([]))) ∷ [])))) ∷ (UDelay (UForce (UVar 0))) ∷ []))) (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UForce (UVar 1)))) ∷ (UDelay (UConstr 1 ([]))) ∷ (UDelay (UForce (UVar 0))) ∷ [])))))) (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UApp (UApp (UApp (UVar 10) (UVar 4)) (UVar 1)) (UVar 0)))) ∷ (UDelay UError) ∷ (UDelay (UConstr 2 ([]))) ∷ []))))) ∷ (UDelay UError) ∷ (UDelay (UForce (UCase (UVar 0) ((ULambda (UDelay (UConstr 1 ([])))) ∷ (UDelay UError) ∷ (UDelay (UConstr 0 ([]))) ∷ [])))) ∷ []))))))))))))) ∷ [])))) ∷ []))) ∷ [])))) ∷ []))) (ULambda (ULambda (ULambda (UCase (UVar 0) ((ULambda (ULambda (UCase (UVar 1) ((ULambda (ULambda (UForce (UApp (ULambda (UApp (ULambda (UCase (UVar 2) ((UDelay (UForce (UCase (UVar 3) ((ULambda (UDelay (UApp (UVar 1) (UVar 4)))) ∷ (UDelay (UApp (ULambda (UConstr 1 ([]))) (UForce (UVar 1)))) ∷ (UDelay (UApp (UVar 0) (UVar 3))) ∷ [])))) ∷ (UDelay (UForce (UCase (UVar 3) ((ULambda (UDelay (UApp (UVar 1) (UConstr 0 ((UApp (UApp (UVar 12) (UVar 9)) (UVar 0)) ∷ []))))) ∷ (UDelay (UApp (ULambda (UConstr 1 ([]))) (UForce (UVar 1)))) ∷ (UDelay (UApp (UVar 0) (UConstr 2 ([])))) ∷ [])))) ∷ []))) (ULambda (UForce (UApp (ULambda (UCase (UForce (UVar 2)) ((ULambda (UDelay (UForce (UVar 1)))) ∷ (UDelay (UConstr 0 ([]))) ∷ (UDelay (UForce (UVar 0))) ∷ []))) (UDelay (UForce (UCase (UVar 0) ((ULambda (UDelay (UForce (UCase (UForce (UVar 2)) ((ULambda (UDelay (UForce (UCase (UApp (UApp (UApp (UVar 11) (UVar 9)) (UVar 1)) (UVar 0)) ((UDelay (UConstr 1 ([]))) ∷ (UDelay (UConstr 0 ([]))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay UError) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay UError) ∷ (UDelay (UForce (UCase (UForce (UVar 1)) ((ULambda (UDelay (UConstr 0 ([])))) ∷ (UDelay UError) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))) ∷ []))))))))) (UDelay (UCase (UVar 2) ((ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UVar 1)) ∷ (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UConstr 0 ((UApp (UApp (UVar 11) (UVar 9)) (UVar 0)) ∷ [])))) ∷ (UDelay (UVar 1)) ∷ (UDelay (UVar 1)) ∷ [])))) ∷ []))))) ∷ []))))))) ∷ [])))) ∷ []))))))) (ULambda (UCase (UVar 0) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 6))))))))) ∷ []))))) (ULambda (UCase (UVar 0) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 4))))))) ∷ []))))) (ULambda (UCase (UVar 0) ((ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 5))))))) ∷ []))))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UCon (tagCon integer (ℤ.pos 0)))) ∷ (ULambda (ULambda (UDelay (UCase (UVar 1) ((ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 8))) (UDelay (UApp (UVar 6) (UVar 0)))) (UDelay (UApp (UApp (UVar 5) (UVar 5)) (UVar 2))))))) ∷ []))))) ∷ [])))))) (UVar 3))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UCon (tagCon integer (ℤ.pos 0)))) ∷ (ULambda (ULambda (UDelay (UCase (UVar 1) ((ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 6))) (UDelay (UVar 0))) (UDelay (UApp (UApp (UVar 5) (UVar 5)) (UVar 2))))))) ∷ []))))) ∷ [])))))))))))))))) ∷ []))))))) ∷ []))) (UApp (UVar 16) (UVar 5))) ((UDelay (UCon (tagCon unit tt))) ∷ (UDelay (UApp (UVar 30) (UCon (tagCon string "PT5")))) ∷ [])))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 24) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UApp (UVar 32) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 2))))) (UCase (UVar 0) ((ULambda (ULambda (UApp (UVar 21) (UCon (tagCon unit tt))))) ∷ (ULambda (UApp (UVar 20) (UCon (tagCon unit tt)))) ∷ (ULambda (ULambda (UApp (UVar 21) (UCon (tagCon unit tt))))) ∷ (ULambda (UApp (UVar 20) (UCon (tagCon unit tt)))) ∷ (ULambda (ULambda (UForce (UCase (UVar 0) ((ULambda (UDelay (UApp (UApp (UVar 30) (UVar 23)) (UVar 0)))) ∷ (UDelay (UApp (UVar 21) (UCon (tagCon unit tt)))) ∷ []))))) ∷ (ULambda (UApp (UVar 20) (UCon (tagCon unit tt)))) ∷ [])))))) ∷ []))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UCase (UVar 0) ((UCon (tagCon string "")) ∷ (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UVar 1)) ∷ (ULambda (ULambda (UDelay (UCase (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 0))))) (UDelay (UConstr 0 ((UConstr 0 ([])) ∷ (UVar 5) ∷ [])))) (UDelay (UApp (UApp (UVar 8) (UVar 0)) (UVar 5)))))) (UApp (UApp (UBuiltin divideInteger) (UApp (UForce (UVar 6)) (UVar 4))) (UCon (tagCon integer (ℤ.pos 2))))) ((ULambda (ULambda (UApp (UApp (UBuiltin appendString) (UApp (UApp (UVar 7) (UVar 7)) (UVar 1))) (UApp (UApp (UVar 7) (UVar 7)) (UVar 0))))) ∷ []))))) ∷ []))))) ∷ []))))))) (UDelay (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UCase (UVar 0) ((UCon (tagCon integer (ℤ.pos 0))) ∷ (ULambda (ULambda (UApp (UApp (UBuiltin addInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))))) ∷ []))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ((UConstr 0 ([])) ∷ (UConstr 0 ([])) ∷ []))) ∷ (ULambda (ULambda (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 3))) (UDelay (UConstr 0 ((UConstr 1 ((UVar 1) ∷ (UConstr 0 ([])) ∷ [])) ∷ (UVar 0) ∷ [])))) (UDelay (UCase (UApp (UApp (ULambda (UApp (UApp (UVar 5) (UVar 5)) (UVar 0))) (UApp (UApp (UBuiltin subtractInteger) (UVar 3)) (UCon (tagCon integer (ℤ.pos 1))))) (UVar 0)) ((ULambda (ULambda (UConstr 0 ((UConstr 1 ((UVar 3) ∷ (UVar 1) ∷ [])) ∷ (UVar 0) ∷ [])))) ∷ [])))))))) ∷ []))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ([]))) ∷ (ULambda (ULambda (UDelay (UForce (UCase (UVar 1) ((UDelay (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))))) ∷ [])))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 0))))) (UDelay (ULambda (UConstr 1 ((UCon (tagCon string "-")) ∷ (UApp (UApp (UApp (UApp (UVar 3) (UVar 3)) (UVar 2)) (UApp (UApp (UBuiltin subtractInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UVar 0)) ∷ []))))) (UDelay (UApp (UVar 3) (UApp (UApp (UVar 4) (UConstr 0 ([]))) (UVar 0)))))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (ULambda (UVar 0))) ∷ (ULambda (ULambda (UDelay (UApp (ULambda (ULambda (UConstr 1 ((UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 3))) (UDelay (UCon (tagCon string "0")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 3))) (UDelay (UCon (tagCon string "1")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 3))) (UDelay (UCon (tagCon string "2")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 3))) (UDelay (UCon (tagCon string "3")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 3))) (UDelay (UCon (tagCon string "4")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 3))) (UDelay (UCon (tagCon string "5")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 6)))) (UVar 3))) (UDelay (UCon (tagCon string "6")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 7)))) (UVar 3))) (UDelay (UCon (tagCon string "7")))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 8)))) (UVar 3))) (UDelay (UCon (tagCon string "8")))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 9)))) (UVar 3))) (UCon (tagCon string "9"))) (UCon (tagCon string "<invalid digit>")))))))))))))))))))))))))))))) ∷ (UApp (UVar 1) (UVar 0)) ∷ [])))) (UApp (UApp (UVar 3) (UVar 3)) (UVar 0)))))) ∷ [])))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))) (UDelay (UConstr 1 ((UApp (UApp (UBuiltin remainderInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 10)))) ∷ (UVar 2) ∷ [])))) (UDelay (UApp (UApp (ULambda (UApp (UApp (UVar 4) (UVar 4)) (UVar 0))) (UConstr 1 ((UApp (UApp (UBuiltin remainderInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 10)))) ∷ (UVar 2) ∷ []))) (UVar 0)))))) (UApp (UApp (UBuiltin quotientInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 10))))))))))) (UConstr 0 ((ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 1)) (UVar 0))) (UDelay (UConstr 0 ([])))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 2 ([]))) (UConstr 1 ([])))))))) ∷ (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 1 ([]))) (UConstr 0 ([]))))) ∷ (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 1)) (UVar 0))) (UConstr 1 ([]))) (UConstr 0 ([]))))) ∷ (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UVar 0)) (UVar 1)))) ∷ (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UVar 1)) (UVar 0)))) ∷ [])))) (UConstr 0 ((ULambda (UApp (UApp (UBuiltin addInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 0))) ∷ (ULambda (UApp (UApp (UBuiltin subtractInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 1))))) ∷ (ULambda (UVar 0)) ∷ (ULambda (UVar 0)) ∷ (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UDelay (UConstr 1 ((UVar 1) ∷ (UApp (UApp (ULambda (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))) (UApp (UApp (UBuiltin addInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UVar 0)) ∷ [])))) (UDelay (UConstr 0 ([]))))))))) ∷ (ULambda (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 2)) (UCon (tagCon integer (ℤ.pos 0))))) (UDelay (UApp (UVar 1) (UVar 5)))) (UDelay (UApp (UVar 0) (UVar 5)))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 0)) (UVar 4))) (UDelay (UConstr 1 ((UVar 0) ∷ (UApp (ULambda (UApp (UApp (UVar 2) (UVar 2)) (UVar 0))) (UApp (UApp (UBuiltin addInteger) (UVar 0)) (UVar 3))) ∷ [])))) (UDelay (UConstr 0 ([])))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UVar 3))) (UDelay (UConstr 0 ([])))) (UDelay (UConstr 1 ((UVar 0) ∷ (UApp (ULambda (UApp (UApp (UVar 2) (UVar 2)) (UVar 0))) (UApp (UApp (UBuiltin addInteger) (UVar 0)) (UVar 2))) ∷ [])))))))))) (UApp (UApp (UBuiltin subtractInteger) (UVar 1)) (UVar 2)))))) ∷ [])))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UConstr 0 ((UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UConstr 0 ((UVar 15) ∷ (UVar 14) ∷ (UVar 13) ∷ (UVar 12) ∷ (UVar 11) ∷ (UVar 10) ∷ (UVar 9) ∷ (UVar 8) ∷ (UVar 7) ∷ (UVar 6) ∷ (UVar 5) ∷ (UVar 4) ∷ (UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))))))))))))))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 45) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UApp (UVar 4) (UVar 1)) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 16)))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 45) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UApp (UVar 4) (UVar 1)) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 15))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 25) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 44) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 44) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UApp (UVar 4) (UVar 1)) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 13))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UApp (ULambda (UApp (ULambda (UConstr 0 ((UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 46) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UApp (UVar 47) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 50) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UApp (ULambda (UConstr 1 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 52) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 48) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 2)))) ∷ (UApp (UApp (UApp (UVar 46) (UBuiltin unBData)) (UApp (UApp (UVar 46) (UBuiltin unBData)) (UBuiltin unIData))) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 2 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 1 ((UApp (UForce (UBuiltin headList)) (UVar 0)) ∷ [])))) (UDelay (UApp (UVar 48) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) ∷ (UApp (UApp (UVar 44) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 43) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 11)))) (UApp (UApp (UApp (UVar 40) (UBuiltin unBData)) (UApp (UApp (UVar 40) (UBuiltin unBData)) (UBuiltin unIData))) (UApp (UForce (UBuiltin headList)) (UVar 10)))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 43) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UApp (UVar 22) (UVar 1)) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 9)))) (UApp (UApp (UApp (UVar 40) (UVar 37)) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 8)))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UApp (UVar 40) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UVar 39) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 45) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) ∷ (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UApp (UVar 40) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UVar 39) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 45) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) ∷ [])))) (UDelay (UApp (UVar 42) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 7))))) (UApp (UApp (UVar 36) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UVar 6)))) (UApp (UApp (UApp (UVar 40) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 1 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 4 ((UApp (UVar 24) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 3 ((UApp (UVar 41) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UVar 22) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 1))) (UDelay (UConstr 5 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 1))) (UDelay (UConstr 2 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UVar 21) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 43) (UCon (tagCon string "PT1")))))))))))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UVar 32)) (UApp (UForce (UBuiltin headList)) (UVar 5)))) (UApp (UApp (UApp (UVar 40) (UBuiltin unBData)) (UVar 32)) (UApp (UForce (UBuiltin headList)) (UVar 4)))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 3)))) (UApp (UApp (UApp (UVar 40) (UVar 19)) (UApp (UApp (UVar 40) (UVar 35)) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 2 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 0 ([])))) (UDelay (UApp (UVar 43) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (UApp (UForce (UBuiltin headList)) (UVar 2)))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 43) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UApp (UVar 21) (UVar 1)) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UApp (UVar 38) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UApp (UVar 38) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 25) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 5)))) ∷ (UApp (UForce (UBuiltin headList)) (UVar 4)) ∷ (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 1 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 4 ((UApp (UVar 6) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UApp (UVar 24) (UVar 18)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 3 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 1))) (UDelay (UConstr 5 ((UApp (UVar 5) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 1))) (UDelay (UConstr 2 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 25) (UCon (tagCon string "PT1")))))))))))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 4))))) ∷ []))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UApp (ULambda (UConstr 0 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UVar 24) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UApp (ULambda (UConstr 4 ((UApp (UApp (UVar 29) (UVar 26)) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UForce (UBuiltin headList)) (UVar 0)) ∷ (UApp (UApp (UVar 29) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UApp (UVar 28) (UVar 25)) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 32) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 5 ((UApp (UApp (UApp (UVar 30) (UVar 27)) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UApp (UVar 28) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 1))) (UDelay (UConstr 3 ((UApp (UApp (UVar 28) (UVar 25)) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 1))) (UDelay (UApp (ULambda (UApp (ULambda (UConstr 6 ((UApp (UApp (UVar 30) (UVar 27)) (UApp (UForce (UBuiltin headList)) (UVar 2))) ∷ (UApp (UApp (UVar 28) (UVar 29)) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UApp (UApp (UVar 32) (UVar 29)) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UCase (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 34) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) ((ULambda (ULambda (UApp (UApp (UVar 22) (UVar 1)) (UVar 0)))) ∷ [])) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 1))) (UDelay (UConstr 2 ((UApp (UApp (UVar 28) (UVar 25)) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UApp (UApp (UVar 31) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UVar 0))))) (UDelay (UApp (UVar 32) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 6)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UApp (UVar 29) (UCon (tagCon string "PT1"))))))))))))))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 25) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 6 ((UApp (UVar 22) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UApp (UVar 23) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 9 ((UApp (UVar 22) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UApp (UVar 23) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 2))) (UDelay (UConstr 1 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UVar 0) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 2))) (UDelay (UApp (ULambda (UConstr 5 ((UApp (UVar 24) (UApp (UForce (UBuiltin headList)) (UVar 2))) ∷ (UApp (UVar 1) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 1))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 2))) (UDelay (UConstr 4 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 2))) (UDelay (UConstr 10 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 6)))) (UVar 2))) (UDelay (UConstr 8 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 7)))) (UVar 2))) (UDelay (UConstr 2 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 8)))) (UVar 2))) (UDelay (UConstr 3 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 9)))) (UVar 2))) (UDelay (UConstr 0 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 10)))) (UVar 2))) (UDelay (UConstr 7 ((UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ [])))) (UDelay (UApp (UVar 25) (UCon (tagCon string "PT1")))))))))))))))))))))))))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 2))) (UDelay (UConstr 2 ((UApp (UVar 0) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 2))) (UDelay (UConstr 1 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UVar 0) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))) ∷ [])))) (UDelay (UApp (UVar 29) (UCon (tagCon string "PT1"))))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 30) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 2 ([])))) (UDelay (UApp (UVar 32) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 21) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 1 ((UApp (UVar 21) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 2 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UApp (UVar 23) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 22) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 17) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (UDelay (UApp (UApp (UApp (UApp (UApp (UVar 0) (ULambda (ULambda (UConstr 1 ([]))))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 1 ([])))) (ULambda (UConstr 0 ((UVar 0) ∷ []))))))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UApp (UApp (UApp (UForce (UBuiltin chooseData)) (UVar 0)) (UDelay (UApp (ULambda (UApp (UApp (UVar 6) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UDelay (UApp (UVar 4) (UApp (UBuiltin unMapData) (UVar 0))))) (UDelay (UApp (UVar 3) (UApp (UBuiltin unListData) (UVar 0))))) (UDelay (UApp (UVar 2) (UApp (UBuiltin unIData) (UVar 0))))) (UDelay (UApp (UVar 1) (UApp (UBuiltin unBData) (UVar 0)))))))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))) (UDelay (UApp (UVar 13) (UCon (tagCon string "PT3"))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 0))))) (UDelay (UApp (UApp (ULambda (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))) (UApp (UApp (UBuiltin subtractInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UApp (UApp (UBuiltin subtractInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))))) (UDelay (UApp (ULambda (UConstr 0 ((UApp (UApp (UBuiltin quotientInteger) (UVar 2)) (UVar 0)) ∷ (UApp (UApp (UBuiltin quotientInteger) (UVar 1)) (UVar 0)) ∷ []))) (UApp (UApp (UVar 3) (UVar 1)) (UVar 0))))))))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))) (UDelay (UVar 1))) (UDelay (UApp (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) (UApp (UApp (UBuiltin modInteger) (UVar 1)) (UVar 0)))))))))))) (ULambda (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Expected SpendingScript with a datum"))) (UConstr 0 ([]))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UApp (ULambda (UConstr 0 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 11) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (UVar 0)))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 0 ([])))) (UDelay (UApp (UVar 9) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UDelay (UConstr 2 ([])))) (UDelay (UApp (UVar 9) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ [])))) (UDelay (UApp (UVar 7) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 7) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UApp (UVar 4) (UVar 1)) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UApp (UBuiltin unListData) (UVar 0))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 1 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UApp (UVar 5) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UApp (UVar 5) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))) (ULambda (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UVar 0)) (UConstr 0 ([]))))))) (ULambda (ULambda (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 4) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UConstr 0 ((UApp (UVar 5) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1))) ∷ (UApp (UVar 4) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1))) ∷ [])) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UApp (UBuiltin unMapData) (UVar 0)))))))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UForce (UBuiltin chooseList))) (UVar 0)) (UDelay (UVar 2))) (UDelay (UApp (UApp (UVar 1) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))))))) (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))))
