module Ast3 where

open import VerifiedCompilation
open import VerifiedCompilation.Certificate
open import Untyped
open import RawU
open import Builtin
open import Data.Unit
open import Data.Nat
open import Data.Integer
open import Utils
import Agda.Builtin.Bool
import Relation.Nullary
import VerifiedCompilation.UntypedTranslation
open import Agda.Builtin.Maybe
open import Data.Empty using (⊥)
open import Data.Bool.Base using (Bool; false; true)
open import Agda.Builtin.Equality using (_≡_; refl)

ast3 : Untyped

ast3 = (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UApp (UVar 12) (UVar 0)))) (ULambda (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 7))) (ULambda (ULambda (ULambda (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 5))) (ULambda (ULambda (ULambda (UApp (UVar 19) (UForce (UApp (ULambda (UApp (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 11))) (ULambda (UDelay (UApp (ULambda (UApp (UApp (UVar 0) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 17))) (ULambda (UDelay (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 0))) (ULambda (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 4)) (UVar 0))) (UConstr 1 ([]))) (UConstr 0 ([])))))))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UVar 11))) (UConstr 1 ([]))) (UConstr 0 ([]))))))))))) (UApp (UApp (UVar 0) (UApp (UApp (UApp (UApp (UVar 2) (UVar 28)) (UVar 27)) (UApp (UApp (UForce (UVar 31)) (UApp (UApp (UForce (UVar 32)) (UForce (UDelay (UConstr 1 ([]))))) (UConstr 0 ([])))) (UApp (UApp (UForce (UVar 33)) (UApp (UForce (UVar 44)) (UVar 7))) (UConstr 0 ([]))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 6))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 8)))))))))))))))))))) (UApp (UApp (UVar 0) (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 14))) (ULambda (UDelay (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 0))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UVar 0) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 11))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))))))) (ULambda (UDelay (UConstr 0 ([]))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Not found: refund output"))) (UConstr 0 ([])))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UForce (UDelay (UConstr 1 ([])))))) (ULambda (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 3))) (ULambda (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UApp (UForce (UVar 70)) (UVar 0)))) (ULambda (UForce (UDelay (UConstr 1 ([]))))))))))) (ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 0)) (UVar 11))) (UConstr 0 ([]))) (UConstr 1 ([])))))) (UDelay (UConstr 1 ([]))))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UApp (UApp (UApp (UVar 16) (UVar 2)) (UCon (tagCon bytestring (mkByteString "")))) (UCon (tagCon bytestring (mkByteString ""))))) (UVar 9))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))))))))))) (UDelay (UApp (UForce (UVar 63)) (UVar 1)))) (UDelay (UApp (UVar 3) (UVar 0)))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))))))))) (UDelay (UConstr 0 ([])))))) (UApp (UApp (UVar 0) (UApp (ULambda (UForce (UApp (ULambda (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 1))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt))))) (ULambda (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UForce (UApp (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 3))) (ULambda (ULambda (ULambda (ULambda (UVar 1)))))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Expected OutputDatum, got NoOutputDatum"))) (UConstr 0 ([])))))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UApp (UApp (UApp (UApp (UApp (UVar 42) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UForce (UVar 63)) (UForce (UDelay (UConstr 1 ([]))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UApp (UApp (UForce (UVar 60)) (UForce (UDelay (UConstr 1 ([]))))) (ULambda (ULambda (UApp (UForce (UVar 65)) (UVar 1))))) (UVar 0)))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UApp (UApp (UApp (UApp (UApp (UVar 45) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UApp (UApp (UForce (UVar 63)) (UForce (UDelay (UConstr 1 ([]))))) (ULambda (ULambda (UApp (UForce (UVar 68)) (UApp (UApp (UForce (UForce (UVar 69))) (UVar 1)) (UVar 0)))))) (UVar 0)))) (ULambda (UDelay (UApp (UForce (UApp (UForce (UForce (UDelay (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))))) (UVar 0))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UForce (UVar 49)) (UVar 1)))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UApp (UApp (UForce (UVar 67)) (UForce (UDelay (UConstr 1 ([]))))) (ULambda (ULambda (UApp (UForce (UVar 72)) (UApp (UApp (UForce (UForce (UVar 73))) (UVar 1)) (UVar 0)))))) (UVar 1)))) (ULambda (UDelay (UApp (UForce (UApp (UForce (UForce (UDelay (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))))) (UVar 0))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UForce (UVar 53)) (UVar 1)))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UApp (UApp (UForce (UVar 71)) (UForce (UDelay (UConstr 1 ([]))))) (ULambda (ULambda (UApp (UForce (UVar 76)) (UVar 1))))) (UVar 1)))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UApp (UApp (UApp (UApp (UApp (UVar 56) (ULambda (ULambda (UForce (UDelay (UConstr 1 ([]))))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UApp (UForce (UVar 76)) (UVar 0)))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (UVar 0)))) (ULambda (UDelay (UApp (UForce (UVar 76)) (UConstr 0 ((UVar 6) ∷ (UVar 2) ∷ (UVar 0) ∷ [])))))) (UDelay (UForce (UDelay (UConstr 1 ([])))))))))) (UDelay (UForce (UDelay (UConstr 1 ([])))))))))) (UDelay (UForce (UDelay (UConstr 1 ([]))))))))))))) (UDelay (UForce (UDelay (UConstr 1 ([])))))))))) (UDelay (UForce (UDelay (UConstr 1 ([]))))))))))))) (UDelay (UForce (UDelay (UConstr 1 ([]))))))))) (UDelay (UForce (UDelay (UConstr 1 ([])))))))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (UVar 0)))) (ULambda (UDelay (UApp (UForce (UVar 65)) (UApp (UForce (UVar 65)) (UVar 0)))))) (UDelay (UForce (UDelay (UConstr 1 ([])))))))))) (UDelay (UForce (UDelay (UConstr 1 ([]))))))))) (UDelay (UForce (UDelay (UConstr 1 ([]))))))))))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (UVar 0)))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 10))) (ULambda (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 3))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 4)) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 3)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([]))))))))))))))) (UDelay (UConstr 0 ([])))) (UDelay (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Invalid output datum: contains a different Bid than expected"))) (UConstr 1 ([]))))))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Invalid output datum: expected Just Bid, got Nothing"))) (UConstr 0 ([])))))))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Failed to decode output datum"))) (UConstr 0 ([])))))))))) (ULambda (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Expected OutputDatum, got OutputDatumHash"))) (UConstr 0 ([])))))))))) (UDelay (UVar 0))) (UDelay (UConstr 1 ([])))))) (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UApp (UApp (UApp (UVar 8) (UVar 0)) (UCon (tagCon bytestring (mkByteString "")))) (UCon (tagCon bytestring (mkByteString ""))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 6))) (ULambda (ULambda (ULambda (UVar 0))))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UApp (UApp (UVar 8) (UVar 0)) (UVar 15)) (UVar 14)))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([]))))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (ULambda (ULambda (UVar 2))))))))) (ULambda (ULambda (UDelay (UApp (UVar 4) (UCon (tagCon unit tt))))))))))))) (ULambda (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UApp (UApp (UBuiltin appendString) (UCon (tagCon string "Expected exactly one continuing output, got "))) (UApp (ULambda (UApp (UVar 23) (UApp (UApp (UApp (UVar 27) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)) (UForce (UDelay (UConstr 0 ([]))))))) (UApp (UForce (UVar 23)) (UVar 1))))) (UConstr 0 ([])))))))) (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 12))) (ULambda (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 2))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UApp (UApp (UApp (UApp (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UCase (UVar 6) ((UVar 5) ∷ (UVar 4) ∷ (UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))))))) (UVar 16))) (ULambda (ULambda (UVar 73)))) (ULambda (UVar 72))) (ULambda (ULambda (UVar 73)))) (ULambda (UVar 72))) (ULambda (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 18)))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UForce (UDelay (UConstr 1 ([])))))) (ULambda (ULambda (UDelay (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 9))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 3)) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))))))))) (UDelay (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 9))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 2)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))))))))) (UDelay (UConstr 1 ([]))))))) (UDelay (UApp (UForce (UVar 81)) (UVar 3)))) (UDelay (UApp (UVar 5) (UVar 2))))))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0))))))))) (ULambda (UVar 72)))))))))))))))))))))))))) (ULambda (UDelay (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 0))) (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 0))) (ULambda (UApp (ULambda (UApp (ULambda (ULambda (ULambda (ULambda (UApp (UVar 3) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 21))) (ULambda (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 2))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))))))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UForce (UDelay (UConstr 0 ([])))))) (ULambda (ULambda (UDelay (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 2))) (ULambda (ULambda (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 11))) (ULambda (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 5))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 3))) (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 2))) (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (ULambda (UConstr 1 ([])))))) (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 2))) (ULambda (UConstr 1 ([])))) (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 2))) (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 1))) (ULambda (UDelay (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UApp (UApp (UVar 20) (UVar 1)) (UVar 0)))) (ULambda (UConstr 1 ([])))))) (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UConstr 1 ([])))) (ULambda (UApp (UApp (UVar 20) (UVar 1)) (UVar 0)))))))) (ULambda (ULambda (ULambda (UConstr 1 ([])))))))) (ULambda (ULambda (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 3))) (ULambda (UConstr 1 ([])))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 5)) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 4)) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 3)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([]))))))) (UDelay (UConstr 1 ([])))))))))))))))) (UDelay (UConstr 1 ([])))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (ULambda (UDelay (UConstr 1 ([]))))) (UDelay (UConstr 0 ([])))))))))) (UDelay (UConstr 1 ([])))))))))))))))))) (UDelay (UApp (UApp (UForce (UVar 64)) (UVar 2)) (UVar 0)))) (UDelay (UVar 0))))) (UApp (UVar 3) (UVar 0)))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))))))))))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Lf"))) (UConstr 0 ([]))))))))) (UForce (UDelay (UConstr 0 ([]))))))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 54)) (UVar 1)) (UVar 0)))))))) (UDelay (UApp (ULambda (UApp (UApp (UVar 0) (UApp (UApp (UApp (UApp (UVar 1) (UVar 27)) (UVar 26)) (UApp (UApp (UForce (UVar 30)) (UApp (UApp (UForce (UVar 31)) (UApp (UForce (UVar 43)) (UVar 6))) (UConstr 0 ([])))) (UApp (UApp (UForce (UVar 32)) (UForce (UDelay (UConstr 2 ([]))))) (UConstr 0 ([]))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 5))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 8)))))))))))))))))))) (UApp (UApp (UVar 0) (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 13))) (ULambda (UApp (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UVar 0) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 7))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))))))) (ULambda (UDelay (UConstr 0 ([]))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Not found: Output paid to seller"))) (UConstr 0 ([]))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UForce (UDelay (UConstr 1 ([])))))) (ULambda (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 3))) (ULambda (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UApp (UForce (UVar 66)) (UVar 0)))) (ULambda (UForce (UDelay (UConstr 1 ([]))))))))))) (ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 0)) (UVar 21))) (UConstr 0 ([]))) (UConstr 1 ([])))))) (UDelay (UConstr 1 ([]))))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UApp (UApp (UApp (UVar 12) (UVar 2)) (UCon (tagCon bytestring (mkByteString "")))) (UCon (tagCon bytestring (mkByteString ""))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 9))) (ULambda (ULambda (ULambda (UVar 0))))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))))))))))) (UDelay (UApp (UForce (UVar 59)) (UVar 1)))) (UDelay (UApp (UVar 3) (UVar 0)))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0))))))))) (UDelay (UConstr 0 ([])))))) (UApp (UApp (UVar 0) (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UVar 0) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 7))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))))))) (ULambda (UDelay (UConstr 0 ([]))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Not found: Output paid to highest bidder"))) (UConstr 0 ([])))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UForce (UDelay (UConstr 1 ([])))))) (ULambda (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 1))) (ULambda (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 3))) (ULambda (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (ULambda (UApp (UForce (UVar 66)) (UVar 0)))) (ULambda (UForce (UDelay (UConstr 1 ([]))))))))))) (ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 0)) (UVar 10))) (UConstr 0 ([]))) (UConstr 1 ([])))))) (UDelay (UConstr 1 ([]))))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UApp (UApp (UVar 12) (UVar 2)) (UVar 19)) (UVar 18)))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))))))))))) (UDelay (UApp (UForce (UVar 59)) (UVar 1)))) (UDelay (UApp (UVar 3) (UVar 0)))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 13))) (ULambda (UDelay (UApp (UForce (UApp (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))) (UVar 0))) (ULambda (ULambda (ULambda (UVar 1)))))))) (UDelay (UVar 10)))))) (UForce (UDelay (UConstr 0 ([])))))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 53)) (UVar 1)) (UVar 0)))))))) (ULambda (ULambda (ULambda (ULambda (UForce (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UVar 0) (UVar 7)) (UVar 6)) (UVar 4)))) (UDelay (UConstr 0 ([])))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UVar 0) (UVar 7)) (UVar 6)) (UVar 5)))) (UDelay (UConstr 1 ([])))) (UDelay (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 5))) (ULambda (ULambda (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 6))) (ULambda (ULambda (UForce (UApp (UApp (ULambda (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UForce (UApp (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))) (UApp (UApp (UApp (UVar 0) (UVar 11)) (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 4))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 0))) (UDelay (UVar 1))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UApp (UForce (UVar 57)) (UApp (UApp (UVar 11) (UVar 15)) (UVar 0)))))) (UDelay (UVar 1))) (UDelay (UVar 1))))))))))) (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 2))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 0))) (UDelay (UVar 1))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UApp (UForce (UVar 57)) (UApp (UApp (UVar 11) (UVar 15)) (UVar 0)))))) (UDelay (UVar 1))) (UDelay (UVar 1))))))))))))) (UDelay (UConstr 0 ([])))) (UDelay (UConstr 1 ([])))) (UDelay (UConstr 0 ([]))))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))) (UApp (UApp (UApp (UVar 0) (UVar 11)) (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 1))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 0))) (UDelay (UVar 1))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UApp (UForce (UVar 57)) (UApp (UApp (UVar 10) (UVar 15)) (UVar 0)))))) (UDelay (UVar 1))) (UDelay (UVar 1))))))))))) (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 3))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 0))) (UDelay (UVar 1))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UApp (UForce (UVar 57)) (UApp (UApp (UVar 10) (UVar 15)) (UVar 0)))))) (UDelay (UVar 1))) (UDelay (UVar 1))))))))))))) (UDelay (UConstr 0 ([])))) (UDelay (UConstr 1 ([])))) (UDelay (UConstr 0 ([])))))))) (ULambda (ULambda (ULambda (UForce (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 3))) (ULambda (UDelay (UForce (UVar 1))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 2))) (ULambda (UDelay (UConstr 2 ([]))))) (UDelay (UConstr 0 ([])))) (UDelay (UConstr 2 ([]))))))) (UDelay (UForce (UVar 0))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UForce (UVar 1))))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UVar 0)))))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UApp (UApp (UApp (UVar 10) (UVar 4)) (UVar 1)) (UVar 0))))) (UDelay UError)) (UDelay (UConstr 2 ([])))))))) (UDelay UError)) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 0))) (ULambda (UDelay (UConstr 1 ([]))))) (UDelay UError)) (UDelay (UConstr 0 ([]))))))))))))))) (UDelay (UConstr 1 ([]))))))))))))))))) (ULambda (ULambda (ULambda (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 0))) (ULambda (ULambda (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 1))) (ULambda (ULambda (UForce (UApp (ULambda (UApp (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 2))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 3))) (ULambda (UDelay (UApp (UVar 1) (UVar 4))))) (UDelay (UApp (ULambda (UConstr 1 ([]))) (UForce (UVar 1))))) (UDelay (UApp (UVar 0) (UVar 3))))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 3))) (ULambda (UDelay (UApp (UVar 1) (UApp (UForce (UVar 58)) (UApp (UApp (UVar 12) (UVar 9)) (UVar 0))))))) (UDelay (UApp (ULambda (UConstr 1 ([]))) (UForce (UVar 1))))) (UDelay (UApp (UVar 0) (UForce (UDelay (UConstr 2 ([]))))))))))) (ULambda (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UForce (UVar 2)))) (ULambda (UDelay (UForce (UVar 1))))) (UDelay (UConstr 0 ([])))) (UDelay (UForce (UVar 0))))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 0))) (ULambda (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UForce (UVar 2)))) (ULambda (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))) (UApp (UApp (UApp (UVar 11) (UVar 9)) (UVar 1)) (UVar 0)))) (UDelay (UConstr 1 ([])))) (UDelay (UConstr 0 ([])))) (UDelay (UConstr 1 ([])))))))) (UDelay UError)) (UDelay (UConstr 1 ([])))))))) (UDelay UError)) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UForce (UVar 1)))) (ULambda (UDelay (UConstr 0 ([]))))) (UDelay UError)) (UDelay (UConstr 1 ([])))))))))))))) (UDelay (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 2))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 0))) (UDelay (UVar 1))) (UDelay (UForce (UApp (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (ULambda (UCase (UVar 3) ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (UDelay (UApp (UForce (UVar 58)) (UApp (UApp (UVar 11) (UVar 9)) (UVar 0)))))) (UDelay (UVar 1))) (UDelay (UVar 1)))))))))))))))))))))))) (ULambda (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 0))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 6))))))))))))) (ULambda (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 0))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 4))))))))))) (ULambda (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))) (UVar 0))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 5))))))))))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UCon (tagCon integer (ℤ.pos 0))))) (ULambda (ULambda (UDelay (UApp (UForce (UApp (UForce (UForce (UDelay (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 9))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UVar 7) (UVar 0)))) (UDelay (UApp (UVar 5) (UVar 2))))))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UVar 3))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UCon (tagCon integer (ℤ.pos 0))))) (ULambda (ULambda (UDelay (UApp (UForce (UApp (UForce (UForce (UDelay (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))))) (UVar 1))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 1)) (UVar 7))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UVar 0))) (UDelay (UApp (UVar 5) (UVar 2))))))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))))))))))))))))))) (UApp (UVar 17) (UVar 5))))) (UDelay (UCon (tagCon unit tt)))) (UDelay (UApp (UVar 36) (UCon (tagCon string "PT5"))))))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 0 ((UVar 0) ∷ []))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))) (UDelay (UApp (UVar 38) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 2))))) (UApp (UApp (UApp (UApp (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UCase (UVar 6) ((UVar 5) ∷ (UVar 4) ∷ (UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))))))) (UVar 0))) (ULambda (ULambda (UApp (UVar 25) (UCon (tagCon unit tt)))))) (ULambda (UApp (UVar 24) (UCon (tagCon unit tt))))) (ULambda (ULambda (UApp (UVar 25) (UCon (tagCon unit tt)))))) (ULambda (UApp (UVar 24) (UCon (tagCon unit tt))))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (ULambda (UDelay (UApp (UApp (UVar 36) (UVar 27)) (UVar 0))))) (UDelay (UApp (UVar 25) (UCon (tagCon unit tt))))))))) (ULambda (UApp (UVar 24) (UCon (tagCon unit tt))))))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UCon (tagCon string ""))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UVar 1))) (ULambda (ULambda (UDelay (UApp (UForce (UApp (UForce (UForce (UDelay (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))))) (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 0))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UForce (UForce (UVar 42))) (UForce (UDelay (UConstr 0 ([]))))) (UVar 5)))) (UDelay (UApp (UApp (UVar 9) (UVar 0)) (UVar 5)))))) (UApp (UApp (UBuiltin divideInteger) (UApp (UForce (UVar 7)) (UVar 4))) (UCon (tagCon integer (ℤ.pos 2))))))) (ULambda (ULambda (UApp (UApp (UBuiltin appendString) (UApp (UVar 7) (UVar 1))) (UApp (UVar 7) (UVar 0)))))))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UDelay (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UCon (tagCon integer (ℤ.pos 0)))) (ULambda (ULambda (UApp (UApp (UBuiltin addInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UVar 3) (UVar 0)))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UApp (UApp (UForce (UForce (UVar 36))) (UForce (UDelay (UConstr 0 ([]))))) (UForce (UDelay (UConstr 0 ([]))))))) (ULambda (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UForce (UForce (UVar 38))) (UApp (UApp (ULambda (ULambda (UApp (UApp (UForce (UVar 38)) (UVar 1)) (UVar 0)))) (UVar 1)) (UForce (UDelay (UConstr 0 ([])))))) (UVar 0)))) (UDelay (UApp (UForce (UApp (UForce (UForce (UDelay (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))))) (UApp (UApp (UVar 4) (UApp (UApp (UBuiltin subtractInteger) (UVar 3)) (UCon (tagCon integer (ℤ.pos 1))))) (UVar 0)))) (ULambda (ULambda (UApp (UApp (UForce (UForce (UVar 40))) (UApp (UApp (UForce (UVar 38)) (UVar 3)) (UVar 1))) (UVar 0)))))))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (UConstr 0 ([])))) (ULambda (ULambda (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UVar 1))) (UDelay (UApp (UVar 3) (UVar 0)))) (UDelay (UConstr 1 ([])))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 0))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (ULambda (UApp (UApp (UForce (UVar 33)) (UCon (tagCon string "-"))) (UApp (UApp (UApp (UVar 3) (UVar 2)) (UApp (UApp (UBuiltin subtractInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UVar 0)))))) (UDelay (UApp (UVar 4) (UApp (UApp (UVar 5) (UForce (UDelay (UConstr 0 ([]))))) (UVar 0))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (UForce (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UVar 0))) (UDelay (ULambda (UVar 0)))) (ULambda (ULambda (UDelay (UApp (ULambda (ULambda (UApp (UApp (UForce (UVar 34)) (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "0")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "1")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "2")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "3")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "4")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "5")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 6)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "6")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 7)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "7")))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 8)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UCon (tagCon string "8")))) (UDelay (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 9)))) (UVar 3))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UCon (tagCon string "9"))) (UCon (tagCon string "<invalid digit>"))))))))))))))))))))))))))))))) (UApp (UVar 1) (UVar 0))))) (UApp (UVar 3) (UVar 0)))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UForce (UVar 31)) (UApp (UApp (UBuiltin remainderInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 10))))) (UVar 2)))) (UDelay (UApp (UApp (UVar 3) (UApp (UApp (UForce (UVar 31)) (UApp (UApp (UBuiltin remainderInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 10))))) (UVar 2))) (UVar 0)))))) (UApp (UApp (UBuiltin quotientInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 10)))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UForce (UDelay (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UConstr 0 ((UVar 7) ∷ (UVar 6) ∷ (UVar 5) ∷ (UVar 4) ∷ (UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))))))))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 0 ([])))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 2 ([])))) (UDelay (UConstr 1 ([]))))))))))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 1 ([]))) (UConstr 0 ([])))))) (ULambda (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 1)) (UVar 0))) (UConstr 1 ([]))) (UConstr 0 ([])))))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UVar 0))) (UDelay (UVar 1))))))) (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UVar 1))) (UDelay (UVar 0))))))))) (UApp (UApp (UApp (UApp (UApp (UApp (UForce (UDelay (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UConstr 0 ((UVar 5) ∷ (UVar 4) ∷ (UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))))))) (ULambda (UApp (UApp (UBuiltin addInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 0)))) (ULambda (UApp (UApp (UBuiltin subtractInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 1)))))) (ULambda (UVar 0))) (ULambda (UVar 0))) (UVar 0)) (ULambda (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 2)) (UCon (tagCon integer (ℤ.pos 0))))) (UConstr 1 ([]))) (UConstr 0 ([]))))) (UDelay (UApp (UVar 0) (UVar 5)))) (UDelay (UApp (UVar 1) (UVar 5)))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 0)) (UVar 5))) (UConstr 1 ([]))) (UConstr 0 ([]))))) (UDelay (UForce (UDelay (UConstr 0 ([])))))) (UDelay (UApp (UApp (UForce (UVar 32)) (UVar 0)) (UApp (UVar 1) (UApp (UApp (UBuiltin addInteger) (UVar 0)) (UVar 4))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UVar 4))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UForce (UDelay (UConstr 0 ([])))))) (UDelay (UApp (UApp (UForce (UVar 31)) (UVar 0)) (UApp (UVar 1) (UApp (UApp (UBuiltin addInteger) (UVar 0)) (UVar 3))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (UApp (UBuiltin subtractInteger) (UVar 1)) (UVar 2))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 1)) (UVar 0))) (UConstr 1 ([]))) (UConstr 0 ([]))))) (UDelay (UForce (UDelay (UConstr 0 ([])))))) (UDelay (UApp (UApp (UForce (UVar 27)) (UVar 1)) (UApp (UApp (UVar 2) (UApp (UApp (UBuiltin addInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UVar 0))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (ULambda (ULambda (ULambda (UConstr 0 ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UConstr 0 ((UVar 15) ∷ (UVar 14) ∷ (UVar 13) ∷ (UVar 12) ∷ (UVar 11) ∷ (UVar 10) ∷ (UVar 9) ∷ (UVar 8) ∷ (UVar 7) ∷ (UVar 6) ∷ (UVar 5) ∷ (UVar 4) ∷ (UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))))))))))))))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (UApp (UApp (UForce (UVar 51)) (UForce (UDelay (UConstr 0 ([]))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 55)) (UApp (UVar 5) (UVar 1))) (UApp (UVar 2) (UVar 0))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 16)))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (UApp (UApp (UForce (UVar 51)) (UForce (UDelay (UConstr 0 ([]))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 55)) (UApp (UVar 5) (UVar 1))) (UApp (UVar 2) (UVar 0))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 15))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 25) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 49) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (UApp (UApp (UForce (UVar 50)) (UForce (UDelay (UConstr 0 ([]))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 54)) (UApp (UVar 5) (UVar 1))) (UApp (UVar 2) (UVar 0))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 13))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UApp (ULambda (ULambda (ULambda (ULambda (UConstr 0 ((UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 51) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UApp (UVar 52) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 0 ((UVar 0) ∷ []))) (UApp (UVar 55) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (UApp (UApp (ULambda (ULambda (ULambda (UConstr 1 ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 57) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 53) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 2))))) (UApp (UApp (UApp (UForce (UVar 51)) (UBuiltin unBData)) (UApp (UApp (UForce (UVar 51)) (UBuiltin unBData)) (UBuiltin unIData))) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 0 ([])))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 2 ((UVar 0) ∷ []))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 1 ((UVar 0) ∷ []))) (UApp (UForce (UBuiltin headList)) (UVar 0))))) (UDelay (UApp (UVar 53) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 0))))) (UApp (UApp (UVar 49) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 48) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 11)))) (UApp (UApp (UApp (UForce (UVar 45)) (UBuiltin unBData)) (UApp (UApp (UForce (UVar 45)) (UBuiltin unBData)) (UBuiltin unIData))) (UApp (UForce (UBuiltin headList)) (UVar 10)))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (UApp (UApp (UForce (UVar 49)) (UForce (UDelay (UConstr 0 ([]))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 53)) (UApp (UVar 23) (UVar 1))) (UApp (UVar 2) (UVar 0))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 9)))) (UApp (UApp (UApp (UForce (UVar 45)) (UVar 42)) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 8)))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UForce (UVar 29)) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UForce (UVar 33)) (UApp (UApp (UVar 44) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UVar 43) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 50) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 0))))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UForce (UVar 34)) (UApp (UApp (UVar 44) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UVar 43) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 50) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))))) (UDelay (UApp (UVar 47) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 7))))) (UApp (UApp (UVar 41) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UVar 6)))) (UApp (UApp (UApp (UForce (UVar 45)) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 1 ((UVar 0) ∷ []))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 4 ((UVar 0) ∷ []))) (UApp (UVar 24) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 3 ((UVar 0) ∷ []))) (UApp (UVar 46) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UVar 22) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 5 ((UVar 0) ∷ []))) (UApp (UVar 23) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 2 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UVar 21) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 48) (UCon (tagCon string "PT1")))))))))))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UVar 36)) (UApp (UForce (UBuiltin headList)) (UVar 5)))) (UApp (UApp (UApp (UForce (UVar 45)) (UBuiltin unBData)) (UVar 36)) (UApp (UForce (UBuiltin headList)) (UVar 4)))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 3)))) (UApp (UApp (UApp (UForce (UVar 45)) (UVar 19)) (UApp (UApp (UForce (UVar 45)) (UVar 40)) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 2 ([])))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 0 ([])))) (UDelay (UApp (UVar 48) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (UApp (UForce (UBuiltin headList)) (UVar 2)))) (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (UApp (UApp (UForce (UVar 49)) (UForce (UDelay (UConstr 0 ([]))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 53)) (UApp (UVar 22) (UVar 1))) (UApp (UVar 2) (UVar 0))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UApp (UBuiltin unListData) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UApp (UVar 43) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UApp (UVar 43) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 30) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 5))))) (UApp (UForce (UBuiltin headList)) (UVar 4))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 1 ((UVar 0) ∷ []))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 4 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 6) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UApp (UVar 29) (UVar 22)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 3 ((UVar 0) ∷ []))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 5 ((UVar 0) ∷ []))) (UApp (UVar 5) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 2 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 30) (UCon (tagCon string "PT1")))))))))))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 4))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (UApp (UApp (ULambda (ULambda (ULambda (UConstr 0 ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UVar 29) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (UApp (UApp (ULambda (ULambda (ULambda (UConstr 4 ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))) (UApp (UApp (UVar 34) (UVar 31)) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UApp (UVar 34) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UApp (UVar 33) (UVar 30)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 37) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 5 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UApp (UApp (UForce (UVar 35)) (UVar 32)) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UApp (UVar 33) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 3 ((UVar 0) ∷ []))) (UApp (UApp (UVar 33) (UVar 30)) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UApp (ULambda (ULambda (ULambda (ULambda (UConstr 6 ((UVar 3) ∷ (UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UVar 35) (UVar 32)) (UApp (UForce (UBuiltin headList)) (UVar 2)))) (UApp (UApp (UVar 33) (UVar 34)) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UApp (UApp (UForce (UVar 37)) (UVar 34)) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (ULambda (UApp (UForce (UApp (UForce (UForce (UDelay (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ []))))))))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UForce (UForce (UVar 46))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 40) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (ULambda (ULambda (UApp (UApp (UVar 26) (UVar 1)) (UVar 0)))))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 2 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UApp (UVar 33) (UVar 30)) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UVar 36) (UBuiltin unBData)) (UApp (UForce (UBuiltin headList)) (UVar 0))))) (UDelay (UApp (UVar 37) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 6)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))) (UDelay (UApp (UVar 34) (UCon (tagCon string "PT1"))))))))))))))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 30) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 6 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 27) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UApp (UVar 28) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 9 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 27) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UApp (UVar 28) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UForce (UApp (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 1 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UVar 0) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UApp (UApp (UApp (ULambda (ULambda (ULambda (UConstr 5 ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))) (UApp (UVar 29) (UApp (UForce (UBuiltin headList)) (UVar 2)))) (UApp (UVar 1) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 1))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 4 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 10 ((UVar 0) ∷ []))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 1)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 6)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 8 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 7)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 2 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 8)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 3 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 9)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1))))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 10)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 7 ((UVar 0) ∷ []))) (UApp (UVar 28) (UApp (UForce (UBuiltin headList)) (UVar 1)))))) (UDelay (UApp (UVar 30) (UCon (tagCon string "PT1")))))))))))))))))))))))))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 0 ((UVar 0) ∷ []))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (ULambda (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 2 ((UVar 0) ∷ []))) (UApp (UVar 0) (UApp (UForce (UBuiltin headList)) (UVar 1)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 2))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 1 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UVar 0) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1))))))) (UDelay (UApp (UVar 34) (UCon (tagCon string "PT1"))))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 0 ((UVar 0) ∷ []))) (UApp (UVar 35) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 2 ([])))) (UDelay (UApp (UVar 37) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 0 ((UVar 0) ∷ []))) (UApp (UVar 26) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 1 ((UVar 0) ∷ []))) (UApp (UVar 26) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 2 ((UVar 0) ∷ []))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UApp (UVar 28) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 27) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 22) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (UDelay (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ []))))))) (UDelay (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ []))))))) (UDelay (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ []))))))) (UDelay (UApp (UApp (UApp (UApp (UApp (UVar 0) (ULambda (ULambda (UForce (UDelay (UConstr 1 ([]))))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UForce (UDelay (UConstr 1 ([])))))) (ULambda (UApp (UForce (UVar 20)) (UVar 0))))))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UApp (UApp (UApp (UForce (UBuiltin chooseData)) (UVar 0)) (UDelay (UApp (ULambda (UApp (UApp (UVar 6) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))) (UDelay (UApp (UVar 4) (UApp (UBuiltin unMapData) (UVar 0))))) (UDelay (UApp (UVar 3) (UApp (UBuiltin unListData) (UVar 0))))) (UDelay (UApp (UVar 2) (UApp (UBuiltin unIData) (UVar 0))))) (UDelay (UApp (UVar 1) (UApp (UBuiltin unBData) (UVar 0)))))))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UVar 16) (UCon (tagCon string "PT3"))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 0))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (UVar 2) (UApp (UApp (UBuiltin subtractInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UApp (UApp (UBuiltin subtractInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))))) (UDelay (UApp (ULambda (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UApp (UBuiltin quotientInteger) (UVar 2)) (UVar 0))) (UApp (UApp (UBuiltin quotientInteger) (UVar 1)) (UVar 0)))) (UApp (UApp (UVar 4) (UVar 1)) (UVar 0)))))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (ULambda (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UVar 1))) (UDelay (UApp (UApp (UVar 2) (UVar 0)) (UApp (UApp (UBuiltin modInteger) (UVar 1)) (UVar 0))))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))))) (ULambda (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Expected SpendingScript with a datum"))) (UConstr 0 ([]))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 0 ((UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 1))) ∷ (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ∷ []))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UDelay (UApp (UVar 13) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (ULambda (ULambda (UConstr 0 ((UVar 2) ∷ (UVar 1) ∷ (UVar 0) ∷ []))))))) (ULambda (UVar 0)))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 0 ([])))) (UDelay (UApp (UVar 10) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UForce (UDelay (UConstr 1 ([])))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UForce (UVar 5)) (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UForce (UDelay (UConstr 2 ([])))))) (UDelay (UApp (UVar 10) (UCon (tagCon string "PT1"))))))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))) (UDelay (ULambda (UConstr 0 ((UVar 0) ∷ [])))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UApp (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UDelay (UApp (UVar 7) (UCon (tagCon string "PT1"))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (UApp (UApp (UForce (UVar 8)) (UForce (UDelay (UConstr 0 ([]))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 12)) (UApp (UVar 5) (UVar 1))) (UApp (UVar 2) (UVar 0))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UApp (UBuiltin unListData) (UVar 0))))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 0 ((UVar 0) ∷ []))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (ULambda (UConstr 1 ((UVar 0) ∷ []))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UApp (UVar 5) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UForce (UDelay (UConstr 1 ([])))))) (UDelay (UForce (UApp (UApp (UForce (UApp (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UForce (UVar 10)) (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UApp (UVar 5) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))) (ULambda (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UVar 0)) (UConstr 0 ([]))))))) (UDelay (ULambda (ULambda (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (ULambda (UApp (UApp (UForce (UVar 5)) (UForce (UDelay (UConstr 0 ([]))))) (ULambda (ULambda (UApp (UApp (UForce (UVar 9)) (UApp (UApp (UForce (UForce (UVar 11))) (UApp (UVar 6) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1)))) (UApp (UVar 5) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1))))) (UApp (UVar 2) (UVar 0))))))) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0)))))) (UApp (UBuiltin unMapData) (UVar 0))))))))) (UDelay (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UForce (UBuiltin chooseList))) (UVar 0)) (UDelay (UVar 2))) (UDelay (UApp (UApp (UVar 1) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))))))))) (UForce (UDelay (UConstr 1 ([])))))) (UDelay (ULambda (ULambda (UConstr 1 ((UVar 1) ∷ (UVar 0) ∷ []))))))) (UDelay (ULambda (UConstr 0 ((UVar 0) ∷ [])))))) (UDelay (UDelay (ULambda (ULambda (UConstr 0 ((UVar 1) ∷ (UVar 0) ∷ [])))))))
