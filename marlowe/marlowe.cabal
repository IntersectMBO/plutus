cabal-version: 2.0
name: marlowe
version: 0.1.0.0
license: BSD3
license-file: LICENSE
build-type: Simple
copyright: Copyright: (c) 2018 Input Output
maintainer: alexander.nemish@iohk.io
stability: experimental
author: Alexander Nemish
synopsis:
  Marlowe: financial contracts on Cardano Computation Layer
description:
  A reference implementation of Marlowe, domain-specific language targeted at
  the execution of financial contracts in the style of Peyton Jones et al
  on Cardano Computation Layer.
category: Language
extra-doc-files: README.md

source-repository head
  type: git
  location: https://github.com/input-output-hk/plutus

library
  hs-source-dirs: src
  build-depends:
    base -any,
    bytestring -any,
    containers -any,
    mtl -any,
    template-haskell -any,
    plutus-tx -any,
    text,
    wallet-api -any,
    lens -any
  default-language: Haskell2010
  default-extensions: ExplicitForAll ScopedTypeVariables
                      DeriveGeneric StandaloneDeriving DeriveLift
                      GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                      DeriveTraversable
  exposed-modules:
    Language.Marlowe
    Language.Marlowe.Client
    Language.Marlowe.Escrow
  other-modules:
    Language.Marlowe.Common
  ghc-options:
    -Wall -Wnoncanonical-monad-instances
    -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities

test-suite marlowe-test
    default-language: Haskell2010
    hs-source-dirs: test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    other-modules:
      Spec.Marlowe
    build-depends:
        base >=4.9 && <5,
        containers -any,
        hedgehog -any,
        tasty -any,
        tasty-hunit -any,
        tasty-hedgehog >=0.2.0.0,
        text -any,
        wallet-api -any,
        marlowe,
        plutus-tx -any,
        template-haskell -any
  ghc-options:
    -Wall -Wnoncanonical-monad-instances
    -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities
