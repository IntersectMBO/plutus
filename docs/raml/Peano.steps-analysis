# Arguments:
#   4 -> look for polynomial bound with degree at most 4
#  -m -> print bounds for all toplevel functions

$ ./raml analyze steps 4 -m Peano.raml

Resource Aware ML, Version 1.4.1, July 2018

Typechecking module ...
  Typecheck successful.
  Stack-based typecheck successful.

Analyzing function to_int ...

  Trying degree: 4

== to_int :

  nat -> int

  Non-zero annotations of the argument:
      9.00  <--  [S(*)]
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 9.00*M
   where
     M is the number of S-nodes of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      0.04 seconds
  #Constraints:  70

====

Analyzing function succ ...

  Trying degree: 4

== succ :

  nat -> nat

  Non-zero annotations of the argument:
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00
--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      0.03 seconds
  #Constraints:  12

====

Analyzing function pred ...

  Trying degree: 4

== pred :

  nat -> nat

  Non-zero annotations of the argument:
      3.00  <--  []

  Non-zero annotations of result:

  Simplified bound:
     3.00
--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      0.05 seconds
  #Constraints:  25

====

Analyzing function add ...

  Trying degree: 4

== add :

  [nat; nat] -> nat

  Non-zero annotations of the argument:
      8.00  <--  ([S(*)], [])
      3.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 8.00*M
   where
     M is the number of S-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      0.08 seconds
  #Constraints:  176

====

Analyzing function mul ...

  Trying degree: 4

== mul :

  [nat; nat] -> nat

  Non-zero annotations of the argument:
      8.00  <--  ([S(*)], [S(*)])
     12.00  <--  ([S(*)], [])
      3.00  <--  ([], [])

  Non-zero annotations of result:

  Simplified bound:
     3.00 + 8.00*L*M + 12.00*M
   where
     L is the number of S-nodes of the 2nd component of the argument
     M is the number of S-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      0.24 seconds
  #Constraints:  1039

====



### Now try it again, leaving out -m to get a bound for the main action

$ ./raml analyze steps 4 Peano.raml 

Resource Aware ML, Version 1.4.1, July 2018

Typechecking expression ...
  Typecheck successful.
  Stack-based typecheck successful.

Analyzing expression ...

  Trying degree: 4

  Derived upper bound: 622.00

  Mode:          upper
  Metric:        steps
  Degree:        4
  Run time:      0.23 seconds
  #Constraints:  1230

# Compare the bound with the results in Peano.evaluation
