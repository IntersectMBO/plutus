# This workflow sends a message to the plutus-ci channel whenever a status check fails, 
# and tried to notify the author of the commit that caused the failure.

name: "📮 Slack Message Broker"

on:
  check_run:
    types: [completed]
  workflow_run:
    workflows: 
      - "🔗 Broken Links"
      - "🗽 Cardano Constitution Tests"
      - "💰 Cost Model Benchmark"
      - "🦕 Docusaurus Site" 
      - "📜 Haddock Site"
      - "🩺 Longitudinal Benchmark"
      - "🔮 Metatheory Site"
      - "🌘 Nightly Testsuite"
      - "📝 Papers & Specs"
      - "🏛️ PlutusTx Template"

jobs:
  Send:
    runs-on: [ubuntu-latest]
    steps:
      - name: Prepare Slack Message
        uses: actions/github-script@main
        id: prepare-slack-message
        with:
          script: | 
            console.log(${{ toJson(github.event) }});


            function getSlackMemberToBeNotified() {
              const senderLogin = "${{ github.event.sender.login }}";
              const slackMemberIds = {
                "zeme-wana": "U03HGDNDRKR",
                "effecfully": "UBH8K0ZU2",
                "kwxm": "UCF4SL4BT",
                "Unisay": "U02V796524S",
                "ramsay-t": "U05T49F9FV1",
                "ana-pantilie": "U05V2854W86",
                "zliu41": "U03BP2HTKDK",
                "bezirg": "UQ1LUSR8B"
              };
              if (senderLogin in slackMemberIds) {
                return `<@${slackMemberIds[senderLogin]}>`;
              } else {
                return "@here";
              }
            }


            let message = "";
            let shouldSendMessage = false;
            let slackMember = getSlackMemberToBeNotified();
            
         
            function handleWorkflowRunEvent() {
              const name = "${{ github.event.workflow_run.name }}";
              const url = "${{ github.event.workflow_run.html_url }}";
              const status = "${{ github.event.workflow_run.status }}";
              const conclusion = "${{ github.event.workflow_run.conclusion }}";
              const failureConclusions = [ "failure", "null", "cancelled", "action_required", "neutral", "timed_out" ];

              if (conclusion == "") {
                message = `${name} \`${status}\` ⏳ <${url}|View Logs> ${slackMember}`;
              } else if (conclusion == "success") {
                message = `${name} \`${conclusion}\` ✅ <${url}|View Logs> ${slackMember}`;
              } else if (conclusion == "skipped") {
                message = `${name} \`${conclusion}\` ⏩ <${url}|View Logs> ${slackMember}`;
              } else if (failureConclusions.includes(conclusion)) {
                message = `${name} \`${conclusion}\` ❌ <${url}|View Logs> ${slackMember}`;
                shouldSendMessage = true;
              } else {
                message = `${name} \`${conclusion}\` ⁉️ <${url}|View Logs> Unknown Conclusion @channel`;
                shouldSendMessage = true;
              }
            }


            function handleCheckRunEvent() {
              const name = "${{ github.event.check_run.name }}";
              const status = "${{ github.event.check_run.status }}";
              const conclusion = "${{ github.event.check_run.conclusion }}";
              const url = "${{ github.event.check_run.html_url }}";

              if (conclusion == "success") {
                message = `${name} \`${conclusion}\` ✅ <${url}|View Logs> ${slackMember}`;
              } else if (conclusion == "failure") {
                message = `${name} \`${conclusion}\` ❌ <${url}|View Logs> ${slackMember}`;
                shouldSendMessage = true;
              } else {
                message = `${name} \`${conclusion}\` ⁉️ <${url}|View Logs> Unknown Conclusion @channel`;
                shouldSendMessage = true;
              }
            }


            if ("${{ github.event_name }}" == "workflow_run") {
              handleWorkflowRunEvent();
            } else if ("${{ github.event_name }}" == "check_run") {
              handleCheckRunEvent();
            } else {
              message = `Unknown event: ${{ github.event_name }}`;
              shouldSendMessage = true;
            }

            console.log(`message:  ${message}`);
            console.log(`shouldSendMessage:  ${shouldSendMessage}`);

            core.setOutput("message", message); 
            core.setOutput("shouldSendMessage", shouldSendMessage); 


      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.27.0
        if: ${{ steps.prepare-slack-message.outputs.shouldSendMessage == 'true' }}
        env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 
        with:
          channel-id: C07A1GSNZEE # plutus-ci
          payload: |
            {
              "text": "${{ steps.prepare-slack-message.outputs.message }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.prepare-slack-message.outputs.message }}" 
                  }
                }
              ]
            }



