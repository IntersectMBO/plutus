# This workflow can be used to notify Slack channels when workflow_run events occur.
# We currently notify the plutus-core-dev and plutus-tools-dev channels whenever
# the script-evaluation-test or benchmark workflows run.
# TODO this must be turned into a standalone GitHub action so that it can be used 
# for arbitrary channels and workflows. 
name: Slack Message Broker
on:
  workflow_run:

jobs:
  slack-broker:
    runs-on: [ubuntu-latest]

    steps:

      - name: Prepare Slack Message
        uses: actions/github-script@v6
        id: prepare-slack-message
        if: contains(fromJSON('["script-evaluation-test", "benchmark"]'), github.event.workflow_job.name)
        with:
          script: | 
            const name = "${{ github.event.workflow_job.name }}";
            const url = "${{ github.event.workflow_job.html_url }}";
            const status = "${{ github.event.workflow_job.status }}";
            const emojy = { success: "‚úÖ", failure: "‚ùå", cancelled: "‚úã" }[status];
            const conclusion = "${{ github.event.workflow_job.conclusion }}";
            const action = "${{ github.event.action }}";
            const message = `${emojy} \`${name}\` *${action}* | *${status}* | *${conclusion}* üëâüèª <${url}|view logs>`;
            core.setOutput("message", message); 

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: my-private-channel
          payload: |
            {
              "text": "${{ steps.prepare-slack-message.outputs.message }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.prepare-slack-message.outputs.message }}" 
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 
