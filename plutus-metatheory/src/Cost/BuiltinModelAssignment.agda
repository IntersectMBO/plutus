-- Assignment of models to Builtins

module Cost.BuiltinModelAssignment where

open import Data.Fin using (suc;zero)
open import Builtin using (Builtin;arity)
open Builtin.Builtin
open import Cost.Model using (BuiltinModel;CostingModel;costingCPU;costingMem)
open CostingModel

assignModel : (b : Builtin) â†’ BuiltinModel (arity b)
assignModel addInteger =
    record { costingCPU = maxSize 205665 812
           ; costingMem = maxSize 1 1 }
assignModel appendByteString =
    record { costingCPU = addedSizes 1000 571
           ; costingMem = addedSizes 0 1 }
assignModel appendString =
    record { costingCPU = addedSizes 1000 24177
           ; costingMem = addedSizes 4 1 }
assignModel bData =
    record { costingCPU = constantCost 1000
           ; costingMem = constantCost 32 }
assignModel blake2b-224 =
    record { costingCPU = linearCostIn zero 117366 10475
           ; costingMem = constantCost 4 }
assignModel blake2b-256 =
    record { costingCPU = linearCostIn zero 117366 10475
           ; costingMem = constantCost 4 }
assignModel bls12-381-G1-add =
    record { costingCPU = constantCost 1046420
           ; costingMem = constantCost 18 }
assignModel bls12-381-G1-compress =
    record { costingCPU = constantCost 3387741
           ; costingMem = constantCost 6 }
assignModel bls12-381-G1-equal =
    record { costingCPU = constantCost 545063
           ; costingMem = constantCost 1 }
assignModel bls12-381-G1-hashToGroup =
    record { costingCPU = linearCostIn zero 66311195 23097
           ; costingMem = constantCost 18 }
assignModel bls12-381-G1-neg =
    record { costingCPU = constantCost 292890
           ; costingMem = constantCost 18 }
assignModel bls12-381-G1-scalarMul =
    record { costingCPU = linearCostIn zero 94607019 87060
           ; costingMem = constantCost 18 }
assignModel bls12-381-G1-uncompress =
    record { costingCPU = constantCost 16598737
           ; costingMem = constantCost 18 }
assignModel bls12-381-G2-add =
    record { costingCPU = constantCost 2359410
           ; costingMem = constantCost 36 }
assignModel bls12-381-G2-compress =
    record { costingCPU = constantCost 3973992
           ; costingMem = constantCost 12 }
assignModel bls12-381-G2-equal =
    record { costingCPU = constantCost 1102635
           ; costingMem = constantCost 1 }
assignModel bls12-381-G2-hashToGroup =
    record { costingCPU = linearCostIn zero 204557793 23271
           ; costingMem = constantCost 36 }
assignModel bls12-381-G2-neg =
    record { costingCPU = constantCost 307813
           ; costingMem = constantCost 36 }
assignModel bls12-381-G2-scalarMul =
    record { costingCPU = linearCostIn zero 190191402 85902
           ; costingMem = constantCost 36 }
assignModel bls12-381-G2-uncompress =
    record { costingCPU = constantCost 33191512
           ; costingMem = constantCost 36 }
assignModel bls12-381-finalVerify =
    record { costingCPU = constantCost 388656972
           ; costingMem = constantCost 1 }
assignModel bls12-381-millerLoop =
    record { costingCPU = constantCost 402099373
           ; costingMem = constantCost 72 }
assignModel bls12-381-mulMlResult =
    record { costingCPU = constantCost 2544991
           ; costingMem = constantCost 72 }
assignModel chooseData =
    record { costingCPU = constantCost 19537
           ; costingMem = constantCost 32 }
assignModel chooseList =
    record { costingCPU = constantCost 175354
           ; costingMem = constantCost 32 }
assignModel chooseUnit =
    record { costingCPU = constantCost 46417
           ; costingMem = constantCost 4 }
assignModel consByteString =
    record { costingCPU = linearCostIn (suc zero) 221973 511
           ; costingMem = addedSizes 0 1 }
assignModel constrData =
    record { costingCPU = constantCost 89141
           ; costingMem = constantCost 32 }
assignModel decodeUtf8 =
    record { costingCPU = linearCostIn zero 497525 14068
           ; costingMem = linearCostIn zero 4 2 }
assignModel divideInteger =
    record { costingCPU = twoArgumentsConstAboveDiagonal 196500 (multipliedSizes 453240 220)
           ; costingMem = twoArgumentsSubtractedSizes 0 1 1 }
assignModel encodeUtf8 =
    record { costingCPU = linearCostIn zero 1000 28662
           ; costingMem = linearCostIn zero 4 2 }
assignModel equalsByteString =
    record { costingCPU = twoArgumentsLinearOnDiagonal 245000 216773 62
           ; costingMem = constantCost 1 }
assignModel equalsData =
    record { costingCPU = minSize 1060367 12586
           ; costingMem = constantCost 1 }
assignModel equalsInteger =
    record { costingCPU = minSize 208512 421
           ; costingMem = constantCost 1 }
assignModel equalsString =
    record { costingCPU = twoArgumentsLinearOnDiagonal 187000 1000 52998
           ; costingMem = constantCost 1 }
assignModel fstPair =
    record { costingCPU = constantCost 80436
           ; costingMem = constantCost 32 }
assignModel headList =
    record { costingCPU = constantCost 43249
           ; costingMem = constantCost 32 }
assignModel iData =
    record { costingCPU = constantCost 1000
           ; costingMem = constantCost 32 }
assignModel ifThenElse =
    record { costingCPU = constantCost 80556
           ; costingMem = constantCost 1 }
assignModel indexByteString =
    record { costingCPU = constantCost 57667
           ; costingMem = constantCost 4 }
assignModel keccak-256 =
    record { costingCPU = linearCostIn zero 1927926 82523
           ; costingMem = constantCost 4 }
assignModel lengthOfByteString =
    record { costingCPU = constantCost 1000
           ; costingMem = constantCost 10 }
assignModel lessThanByteString =
    record { costingCPU = minSize 197145 156
           ; costingMem = constantCost 1 }
assignModel lessThanEqualsByteString =
    record { costingCPU = minSize 197145 156
           ; costingMem = constantCost 1 }
assignModel lessThanEqualsInteger =
    record { costingCPU = minSize 204924 473
           ; costingMem = constantCost 1 }
assignModel lessThanInteger =
    record { costingCPU = minSize 208896 511
           ; costingMem = constantCost 1 }
assignModel listData =
    record { costingCPU = constantCost 52467
           ; costingMem = constantCost 32 }
assignModel mapData =
    record { costingCPU = constantCost 64832
           ; costingMem = constantCost 32 }
assignModel mkCons =
    record { costingCPU = constantCost 65493
           ; costingMem = constantCost 32 }
assignModel mkNilData =
    record { costingCPU = constantCost 22558
           ; costingMem = constantCost 32 }
assignModel mkNilPairData =
    record { costingCPU = constantCost 16563
           ; costingMem = constantCost 32 }
assignModel mkPairData =
    record { costingCPU = constantCost 76511
           ; costingMem = constantCost 32 }
assignModel modInteger =
    record { costingCPU = twoArgumentsConstAboveDiagonal 196500 (multipliedSizes 453240 220)
           ; costingMem = twoArgumentsSubtractedSizes 0 1 1 }
assignModel multiplyInteger =
    record { costingCPU = addedSizes 69522 11687
           ; costingMem = addedSizes 0 1 }
assignModel nullList =
    record { costingCPU = constantCost 60091
           ; costingMem = constantCost 32 }
assignModel quotientInteger =
    record { costingCPU = twoArgumentsConstAboveDiagonal 196500 (multipliedSizes 453240 220)
           ; costingMem = twoArgumentsSubtractedSizes 0 1 1 }
assignModel remainderInteger =
    record { costingCPU = twoArgumentsConstAboveDiagonal 196500 (multipliedSizes 453240 220)
           ; costingMem = twoArgumentsSubtractedSizes 0 1 1 }
assignModel serialiseData =
    record { costingCPU = linearCostIn zero 1159724 392670
           ; costingMem = linearCostIn zero 0 2 }
assignModel sha2-256 =
    record { costingCPU = linearCostIn zero 806990 30482
           ; costingMem = constantCost 4 }
assignModel sha3-256 =
    record { costingCPU = linearCostIn zero 1927926 82523
           ; costingMem = constantCost 4 }
assignModel sliceByteString =
    record { costingCPU = linearCostIn (suc (suc zero)) 265318 0
           ; costingMem = linearCostIn (suc (suc zero)) 4 0 }
assignModel sndPair =
    record { costingCPU = constantCost 85931
           ; costingMem = constantCost 32 }
assignModel subtractInteger =
    record { costingCPU = maxSize 205665 812
           ; costingMem = maxSize 1 1 }
assignModel tailList =
    record { costingCPU = constantCost 41182
           ; costingMem = constantCost 32 }
assignModel trace =
    record { costingCPU = constantCost 212342
           ; costingMem = constantCost 32 }
assignModel unBData =
    record { costingCPU = constantCost 31220
           ; costingMem = constantCost 32 }
assignModel unConstrData =
    record { costingCPU = constantCost 32696
           ; costingMem = constantCost 32 }
assignModel unIData =
    record { costingCPU = constantCost 43357
           ; costingMem = constantCost 32 }
assignModel unListData =
    record { costingCPU = constantCost 32247
           ; costingMem = constantCost 32 }
assignModel unMapData =
    record { costingCPU = constantCost 38314
           ; costingMem = constantCost 32 }
assignModel verifyEcdsaSecp256k1Signature =
    record { costingCPU = constantCost 35190005
           ; costingMem = constantCost 10 }
assignModel verifyEd25519Signature =
    record { costingCPU = linearCostIn (suc (suc zero)) 57996947 18975
           ; costingMem = constantCost 10 }
assignModel verifySchnorrSecp256k1Signature =
    record { costingCPU = linearCostIn (suc zero) 39121781 32260
           ; costingMem = constantCost 10 }
