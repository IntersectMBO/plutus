(program
  (let
    (nonrec)
    (datatypebind
      (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
    )
    (termbind
      (strict)
      (vardecl error (all a (type) (fun (con unit) a)))
      (abs a (type) (lam thunk (con unit) (error a)))
    )
    (termbind
      (strict)
      (vardecl traceError (all a (type) (fun (con string) a)))
      (abs
        a
        (type)
        (lam
          str
          (con string)
          [
            { error a }
            [
              {
                [
                  Unit_match
                  [
                    [ { (builtin chooseUnit) Unit } [ (builtin trace) str ] ]
                    Unit
                  ]
                ]
                (con unit)
              }
              (con unit ())
            ]
          ]
        )
      )
    )
    [ { traceError (con integer) } (con string "") ]
  )
)