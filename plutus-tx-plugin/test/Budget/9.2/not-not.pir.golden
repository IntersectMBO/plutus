(let
    data Bool | Bool_match where
      True : Bool
      False : Bool
  in
  \(x : integer) ->
    Bool_match
      (ifThenElse
         {all dead. Bool}
         (lessThanInteger 0 x)
         (/\dead -> False)
         (/\dead -> True)
         {all dead. dead})
      {all dead. Bool}
      (/\dead -> False)
      (/\dead -> True)
      {all dead. dead})
  1