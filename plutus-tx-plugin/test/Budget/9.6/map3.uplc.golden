(program
   1.1.0
   ((\caseList' ->
       (\safeAppend ->
          (\lookup' ->
             (\`$fToDataThese_$ctoBuiltinData` ->
                (\`$dToData` ->
                   (\`$dToData` ->
                      (\goList
                        n ->
                         (\unsafeFromSOPList ->
                            (\nt ->
                               (\nt ->
                                  (\nt ->
                                     (\s ->
                                        s s)
                                       (\s
                                         ds ->
                                          force
                                            (case
                                               ds
                                               [ (delay (constr 0 []))
                                               , (\x
                                                   xs ->
                                                    delay
                                                      (constr 1
                                                         [ (case
                                                              x
                                                              [ (\c
                                                                  a ->
                                                                   constr 0
                                                                     [ c
                                                                     , (case
                                                                          a
                                                                          [ (\b ->
                                                                               b)
                                                                          , (\a
                                                                              b ->
                                                                               addInteger
                                                                                 a
                                                                                 b)
                                                                          , (\a ->
                                                                               a) ]) ]) ])
                                                         , (s s xs) ])) ]))
                                       ((\s ->
                                           s s)
                                          (\s ->
                                             caseList'
                                               (constr 0 [])
                                               (\hd
                                                 tl ->
                                                  constr 1
                                                    [ (constr 0
                                                         [ (unIData
                                                              (force
                                                                 (force fstPair)
                                                                 hd))
                                                         , ((\tup ->
                                                               (\index ->
                                                                  (\args ->
                                                                     force
                                                                       (case
                                                                          (equalsInteger
                                                                             0
                                                                             index)
                                                                          [ (delay
                                                                               (force
                                                                                  (case
                                                                                     (equalsInteger
                                                                                        1
                                                                                        index)
                                                                                     [ (delay
                                                                                          (force
                                                                                             (case
                                                                                                (equalsInteger
                                                                                                   2
                                                                                                   index)
                                                                                                [ (delay
                                                                                                     ((\x ->
                                                                                                         error)
                                                                                                        (force
                                                                                                           trace
                                                                                                           "PT1"
                                                                                                           (constr 0
                                                                                                              [  ]))))
                                                                                                , (delay
                                                                                                     (constr 1
                                                                                                        [ (unIData
                                                                                                             (force
                                                                                                                headList
                                                                                                                args))
                                                                                                        , (unIData
                                                                                                             (force
                                                                                                                headList
                                                                                                                (force
                                                                                                                   tailList
                                                                                                                   args))) ])) ])))
                                                                                     , (delay
                                                                                          (constr 0
                                                                                             [ (unIData
                                                                                                  (force
                                                                                                     headList
                                                                                                     args)) ])) ])))
                                                                          , (delay
                                                                               (constr 2
                                                                                  [ (unIData
                                                                                       (force
                                                                                          headList
                                                                                          args)) ])) ]))
                                                                    (force
                                                                       (force
                                                                          sndPair)
                                                                       tup))
                                                                 (force
                                                                    (force
                                                                       fstPair)
                                                                    tup))
                                                              (unConstrData
                                                                 (force
                                                                    (force
                                                                       sndPair)
                                                                    hd))) ])
                                                    , (s s tl) ]))
                                          nt))
                                    ((\goRight ->
                                        safeAppend
                                          ((\s ->
                                              s s)
                                             (\s ->
                                                caseList'
                                                  []
                                                  (\hd
                                                    tl ->
                                                     (\v ->
                                                        (\k ->
                                                           force
                                                             (case
                                                                (lookup' k nt)
                                                                [ (\r ->
                                                                     delay
                                                                       (force
                                                                          mkCons
                                                                          (mkPairData
                                                                             k
                                                                             (`$fToDataThese_$ctoBuiltinData`
                                                                                `$dToData`
                                                                                `$dToData`
                                                                                (constr 1
                                                                                   [ (unIData
                                                                                        v)
                                                                                   , (unIData
                                                                                        r) ])))
                                                                          (s
                                                                             s
                                                                             tl)))
                                                                , (delay
                                                                     (force
                                                                        mkCons
                                                                        (mkPairData
                                                                           k
                                                                           (`$fToDataThese_$ctoBuiltinData`
                                                                              `$dToData`
                                                                              `$dToData`
                                                                              (constr 2
                                                                                 [ (unIData
                                                                                      v) ])))
                                                                        (s
                                                                           s
                                                                           tl))) ]))
                                                          (force (force fstPair)
                                                             hd))
                                                       (force (force sndPair)
                                                          hd)))
                                             nt)
                                          (goRight nt))
                                       ((\s ->
                                           s s)
                                          (\s ->
                                             caseList'
                                               []
                                               (\hd
                                                 tl ->
                                                  (\v ->
                                                     (\k ->
                                                        force
                                                          (case
                                                             (lookup' k nt)
                                                             [ (\r ->
                                                                  delay
                                                                    (force
                                                                       mkCons
                                                                       (mkPairData
                                                                          k
                                                                          (`$fToDataThese_$ctoBuiltinData`
                                                                             `$dToData`
                                                                             `$dToData`
                                                                             (constr 1
                                                                                [ (unIData
                                                                                     v)
                                                                                , (unIData
                                                                                     r) ])))
                                                                       (s
                                                                          s
                                                                          tl)))
                                                             , (delay
                                                                  (force
                                                                     mkCons
                                                                     (mkPairData
                                                                        k
                                                                        (`$fToDataThese_$ctoBuiltinData`
                                                                           `$dToData`
                                                                           `$dToData`
                                                                           (constr 0
                                                                              [ (unIData
                                                                                   v) ])))
                                                                     (s
                                                                        s
                                                                        tl))) ]))
                                                       (force (force fstPair)
                                                          hd))
                                                    (force (force sndPair)
                                                       hd))))))
                                 (unsafeFromSOPList
                                    (\i -> iData i)
                                    (\i -> iData i)
                                    (constr 1
                                       [ (constr 0 [(addInteger 1 n), 1])
                                       , (constr 1
                                            [ (constr 0 [(addInteger 2 n), 2])
                                            , (constr 1
                                                 [ (constr 0
                                                      [(addInteger 3 n), 3])
                                                 , (constr 1
                                                      [ (constr 0
                                                           [ (addInteger 4 n)
                                                           , 4 ])
                                                      , (constr 1
                                                           [ (constr 0
                                                                [ (addInteger
                                                                     5
                                                                     n)
                                                                , 5 ])
                                                           , (constr 0
                                                                [  ]) ]) ]) ]) ]) ])))
                              (unsafeFromSOPList
                                 (\i -> iData i)
                                 (\i -> iData i)
                                 (constr 1
                                    [ (constr 0 [(addInteger 3 n), 30])
                                    , (constr 1
                                         [ (constr 0 [(addInteger 4 n), 40])
                                         , (constr 1
                                              [ (constr 0
                                                   [(addInteger 6 n), 60])
                                              , (constr 1
                                                   [ (constr 0
                                                        [(addInteger 7 n), 70])
                                                   , (constr 0 []) ]) ]) ]) ])))
                           (\`$dToData` `$dToData` ->
                              (\go eta -> goList (go eta))
                                ((\s -> s s)
                                   (\s ds ->
                                      force
                                        (case
                                           ds
                                           [ (delay (constr 0 []))
                                           , (\x xs ->
                                                delay
                                                  (constr 1
                                                     [ (case
                                                          x
                                                          [ (\k a ->
                                                               constr 0
                                                                 [ (`$dToData`
                                                                      k)
                                                                 , (`$dToData`
                                                                      a) ]) ])
                                                     , (s s xs) ])) ])))))
                        ((\s -> s s)
                           (\s ds ->
                              case
                                ds
                                [ []
                                , (\d ds ->
                                     force mkCons
                                       (case d [(\d d -> mkPairData d d)])
                                       (s s ds)) ])))
                     (\i -> iData i))
                  (\i -> iData i))
               (\`$dToData` `$dToData` ds ->
                  case
                    ds
                    [ (\arg -> constrData 1 (force mkCons (`$dToData` arg) []))
                    , (\arg arg ->
                         constrData
                           2
                           (force mkCons
                              (`$dToData` arg)
                              (force mkCons (`$dToData` arg) [])))
                    , (\arg ->
                         constrData 0 (force mkCons (`$dToData` arg) [])) ]))
            (\k m ->
               (\s -> s s)
                 (\s ->
                    caseList'
                      (constr 1 [])
                      (\hd ->
                         force
                           (case
                              (equalsData k (force (force fstPair) hd))
                              [ (delay (\x -> s s x))
                              , (delay
                                   (\ds ->
                                      constr 0
                                        [(force (force sndPair) hd)])) ])))
                 m))
         ((\s -> s s)
            (\s xs xs ->
               caseList'
                 xs
                 (\hd tl ->
                    (\v ->
                       (\k ->
                          (\eta ->
                             (\nilCase ->
                                (\s -> s s)
                                  (\s ->
                                     caseList'
                                       nilCase
                                       (\hd ->
                                          force
                                            (case
                                               (equalsData
                                                  k
                                                  (force (force fstPair) hd))
                                               [ (delay
                                                    (\eta ->
                                                       force mkCons
                                                         hd
                                                         (s s eta)))
                                               , (delay
                                                    (force mkCons
                                                       (mkPairData k v))) ])))
                                  eta)
                               (force mkCons (mkPairData k v) []))
                            (s s tl xs))
                         (force (force fstPair) hd))
                      (force (force sndPair) hd))
                 xs)))
      (\z f xs ->
         force
           (force (force chooseList)
              xs
              (delay z)
              (delay (f (force headList xs) (force tailList xs)))))))