letrec
  data (List :: * -> *) a | List_match where
    Nil : List a
    Cons : a -> List a -> List a
in
letrec
  !lengthDirect : List integer -> integer
    = \(xs : List integer) ->
        List_match
          {integer}
          xs
          {integer}
          0
          (\(ds : integer) (ys : List integer) ->
             addInteger 1 (lengthDirect ys))
in
lengthDirect