(program
   1.1.0
   (\xs ->
      (\elem ->
         constr 0
           [ (elem
                (\x y ->
                   case (equalsInteger x y) [(constr 1 []), (constr 0 [])])
                8
                xs)
           , (elem
                (\x y ->
                   case (equalsInteger x y) [(constr 1 []), (constr 0 [])])
                12
                xs) ])
        (\`$dEq` a ->
           (\s -> s s)
             (\s xs ->
                force
                  (force (force chooseList)
                     xs
                     (delay (constr 1 []))
                     (delay
                        ((\x ->
                            (\xs ->
                               force
                                 (case
                                    (`$dEq` a x)
                                    [(delay (constr 0 [])), (delay (s s xs))]))
                              (force tailList xs))
                           (force headList xs))))))))