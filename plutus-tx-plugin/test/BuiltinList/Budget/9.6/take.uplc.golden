(program
   1.1.0
   ((\take xs -> force (force take) [] 5 xs)
      ((\f ->
          (\s -> f (\x -> f (\x -> f (\x -> f (\x -> s s x) x) x) x))
            (\s -> f (\x -> s s x)))
         (\take arg ->
            delay
              (delay
                 (\`$dMkNil` n l ->
                    case
                      (lessThanEqualsInteger n 0)
                      [ (force
                           (force (force chooseList)
                              l
                              (delay `$dMkNil`)
                              (delay
                                 ((\xs ->
                                     force mkCons
                                       (force headList l)
                                       (force (force (take (delay (\x -> x))))
                                          `$dMkNil`
                                          (subtractInteger n 1)
                                          xs))
                                    (force tailList l)))))
                      , `$dMkNil` ])))
         (delay (\x -> x)))))