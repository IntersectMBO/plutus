(program
   1.1.0
   (\xs ->
      force
        ((\f ->
            (\s -> f (\x -> f (\x -> f (\x -> f (\x -> s s x) x) x) x))
              (\s -> f (\x -> s s x)))
           (\go arg ->
              delay
                (\l xs ->
                   (\cse ->
                      cse
                        []
                        (\y ys ->
                           force
                             (case
                                (force
                                   ((\f ->
                                       (\s ->
                                          f
                                            (\x ->
                                               f
                                                 (\x ->
                                                    f
                                                      (\x -> f (\x -> s s x) x)
                                                      x)
                                                 x))
                                         (\s -> f (\x -> s s x)))
                                      (\go arg ->
                                         delay
                                           (cse
                                              (constr 1 [])
                                              (\x xs ->
                                                 force
                                                   (force
                                                      (force ifThenElse
                                                         (lessThanEqualsInteger
                                                            x
                                                            y)
                                                         (delay
                                                            (delay
                                                               (constr 0 [])))
                                                         (delay
                                                            (delay
                                                               (force
                                                                  (go
                                                                     (delay
                                                                        (\x ->
                                                                           x)))
                                                                  xs))))))))
                                      (delay (\x -> x)))
                                   xs)
                                [ (delay (force (go (delay (\x -> x))) ys xs))
                                , (delay
                                     ((\cse ->
                                         cse
                                           (force (go (delay (\x -> x)))
                                              ys
                                              (cse xs)))
                                        (force mkCons y))) ]))
                        l)
                     (\z f xs ->
                        force
                          (force (force chooseList)
                             xs
                             (delay z)
                             (delay
                                (f (force headList xs) (force tailList xs)))))))
           (delay (\x -> x)))
        xs
        []))