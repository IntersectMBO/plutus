(program
   1.1.0
   (\d ->
      (\cse ->
         (\cse ->
            (\cse ->
               case
                 cse
                 [ (case
                      cse
                      [ (case
                           (equalsInteger 2 cse)
                           [ ((\cse -> case cse [cse]) error)
                           , ((\args ->
                                 (\y ->
                                    (\`$mInts` ->
                                       `$mInts`
                                         (force headList args)
                                         (\x y z w ->
                                            `$mInts`
                                              y
                                              (\x y z w ->
                                                 constrData
                                                   0
                                                   (force mkCons
                                                      (iData (addInteger x x))
                                                      (force mkCons
                                                         (iData
                                                            (addInteger y y))
                                                         (force mkCons
                                                            (iData
                                                               (addInteger z z))
                                                            (force mkCons
                                                               (iData
                                                                  (addInteger
                                                                     w
                                                                     w))
                                                               [])))))
                                              (\void ->
                                                 (\cse -> case cse [cse])
                                                   error)))
                                      (\scrut cont fail ->
                                         (\l ->
                                            (\l ->
                                               (\l ->
                                                  cont
                                                    (unIData (force headList l))
                                                    (unIData (force headList l))
                                                    (unIData (force headList l))
                                                    (unIData
                                                       (force headList
                                                          (force tailList l))))
                                                 (force tailList l))
                                              (force tailList l))
                                           (force (force sndPair)
                                              (unConstrData scrut)))
                                      (\void -> (\cse -> case cse [cse]) error))
                                   (force headList (force tailList args)))
                                (force (force sndPair) cse)) ])
                      , (force headList (force (force sndPair) cse)) ])
                 , (force headList (force (force sndPair) cse)) ])
              (equalsInteger 0 cse))
           (force (force fstPair) cse))
        (unConstrData d)))