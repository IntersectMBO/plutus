(program
   1.1.0
   (\d ->
      (\cse ->
         (\cse ->
            (\cse ->
               (\cse ->
                  (\cse ->
                     (\lessThanInteger ->
                        addInteger
                          (addInteger
                             (addInteger
                                (addInteger (addInteger cse cse) cse)
                                cse)
                             (force
                                (case
                                   (lessThanInteger
                                      (addInteger cse cse)
                                      (addInteger cse cse))
                                   [ (delay (addInteger cse cse))
                                   , (delay (addInteger cse cse)) ])))
                          (force
                             (case
                                (lessThanInteger
                                   (addInteger cse cse)
                                   (addInteger cse cse))
                                [ (delay (addInteger cse cse))
                                , (delay (addInteger cse cse)) ])))
                       (\x y ->
                          force ifThenElse
                            (lessThanInteger x y)
                            (constr 0 [])
                            (constr 1 [])))
                    (case cse [(\int int int int -> int)]))
                 (case cse [(\int int int int -> int)]))
              (case cse [(\int int int int -> int)]))
           (case cse [(\int int int int -> int)]))
        ((\constrArgs ->
            (\field ->
               (\rest ->
                  (\field ->
                     (\rest ->
                        constr 0
                          [ field
                          , field
                          , (unIData (force headList rest))
                          , (unIData (force headList (force tailList rest))) ])
                       (force tailList rest))
                    (unIData (force headList rest)))
                 (force tailList constrArgs))
              (unIData (force headList constrArgs)))
           (force (force sndPair) (unConstrData d)))))