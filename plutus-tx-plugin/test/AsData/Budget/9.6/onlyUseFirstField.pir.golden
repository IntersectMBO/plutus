\(d : data) ->
  let
    !l : list data = sndPair {integer} {list data} (unConstrData d)
    !l : list data = tailList {data} l
    !l : list data = tailList {data} l
    !ds : integer = unIData (headList {data} l)
    !ds : integer = unIData (headList {data} l)
    !ds : integer = unIData (headList {data} l)
    !ds : integer = unIData (headList {data} (tailList {data} l))
  in
  ds