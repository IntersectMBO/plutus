(program
  1.1.0
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl MyMonoData (type))

        MyMonoData_match
        (vardecl Mono (fun (con integer) (fun (con integer) MyMonoData)))
        (vardecl Mono (fun (con integer) MyMonoData))
        (vardecl Mono (fun (con integer) MyMonoData))
      )
    )
    (termbind
      (nonstrict)
      (vardecl `$WMono` (fun (con integer) (fun (con integer) MyMonoData)))
      (lam
        conrep
        (con integer)
        (let
          (nonrec)
          (termbind (strict) (vardecl conrep (con integer)) conrep)
          (lam
            conrep
            (con integer)
            (let
              (nonrec)
              (termbind (strict) (vardecl conrep (con integer)) conrep)
              [ [ Mono conrep ] conrep ]
            )
          )
        )
      )
    )
    (lam ds (con integer) (lam ds (con integer) [ [ `$WMono` ds ] ds ]))
  )
)