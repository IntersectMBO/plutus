(program
  1.1.0
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl StrictTy (fun (type) (type)))
        (tyvardecl a (type))
        StrictTy_match
        (vardecl StrictTy (fun a (fun a [ StrictTy a ])))
      )
    )
    (termbind
      (nonstrict)
      (vardecl `$WStrictTy` (all a (type) (fun a (fun a [ StrictTy a ]))))
      (abs
        a
        (type)
        (lam
          conrep
          a
          (let
            (nonrec)
            (termbind (strict) (vardecl conrep a) conrep)
            (lam
              conrep
              a
              (let
                (nonrec)
                (termbind (strict) (vardecl conrep a) conrep)
                [ [ { StrictTy a } conrep ] conrep ]
              )
            )
          )
        )
      )
    )
    [ [ { `$WStrictTy` (con integer) } (con integer 1) ] (con integer 2) ]
  )
)