(program
  1.1.0
  (let
    (rec)
    (datatypebind
      (datatype
        (tyvardecl List (fun (type) (type)))
        (tyvardecl a (type))
        List_match
        (vardecl Nil [ List a ])
        (vardecl Cons (fun a (fun [ List a ] [ List a ])))
      )
    )
    (lam
      ds
      [ List (con integer) ]
      (let
        (nonrec)
        (termbind (strict) (vardecl ds [ List (con integer) ]) ds)
        [
          [
            { [ { List_match (con integer) } ds ] (con integer) }
            (con integer 0)
          ]
          (lam x (con integer) (lam ds [ List (con integer) ] x))
        ]
      )
    )
  )
)