(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl StrictTy (fun (type) (type)))
        (tyvardecl a (type))
        StrictTy_match
        (vardecl StrictTy (fun a (fun a [ StrictTy a ])))
      )
    )
    (termbind
      (strict)
      (vardecl WStrictTy (all a (type) (fun a (fun a [ StrictTy a ]))))
      (abs
        a
        (type)
        (lam
          dt
          a
          (lam
            dt
            a
            (let
              (nonrec)
              (termbind (strict) (vardecl dt a) dt)
              (termbind (strict) (vardecl dt a) dt)
              [ [ { StrictTy a } dt ] dt ]
            )
          )
        )
      )
    )
    [ [ { WStrictTy (con integer) } (con integer 1) ] (con integer 2) ]
  )
)