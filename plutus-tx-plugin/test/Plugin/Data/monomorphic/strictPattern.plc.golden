(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl StrictPattern (fun (type) (type)))
        (tyvardecl a (type))
        StrictPattern_match
        (vardecl StrictPattern (fun a (fun a [StrictPattern a])))
      )
    )
    (termbind
      (strict)
      (vardecl WStrictPattern (all a (type) (fun a (fun a [StrictPattern a]))))
      (abs a (type) (lam dt a (lam dt a [ [ { StrictPattern a } dt ] dt ])))
    )
    [ [ { WStrictPattern (con integer) } (con integer 1) ] (con integer 2) ]
  )
)