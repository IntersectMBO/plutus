(program
  1.1.0
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl MyMonoData (type))

        MyMonoData_match
        (vardecl Mono (fun (con integer) (fun (con integer) MyMonoData)))
        (vardecl Mono (fun (con integer) MyMonoData))
        (vardecl Mono (fun (con integer) MyMonoData))
      )
    )
    (termbind
      (nonstrict)
      (vardecl `$WMono` (fun (con integer) MyMonoData))
      (lam
        dt
        (con integer)
        (let
          (nonrec) (termbind (strict) (vardecl dt (con integer)) dt) [ Mono dt ]
        )
      )
    )
    [ `$WMono` (con integer 1) ]
  )
)