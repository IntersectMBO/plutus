(program
  1.1.0
  (let
    (nonrec)
    (typebind
      (tyvardecl Tuple2 (fun (type) (fun (type) (type))))
      (lam a (type) (lam a (type) (all a (type) (fun a a))))
    )
    (let
      (rec)
      (datatypebind
        (datatype
          (tyvardecl B (fun (type) (type)))
          (tyvardecl a (type))
          B_match
          (vardecl One (fun a [ B a ]))
          (vardecl Two (fun [ B [ [ Tuple2 a ] a ] ] [ B a ]))
        )
      )
      (lam
        ds
        [ B (con integer) ]
        [
          [
            { [ { B_match (con integer) } ds ] (con integer) }
            (lam a (con integer) a)
          ]
          (lam
            ds [ B [ [ Tuple2 (con integer) ] (con integer) ] ] (con integer 2)
          )
        ]
      )
    )
  )
)