(program
  { no-src-span }
  1.1.0
  (let
    { no-src-span }
    (nonrec)
    (datatypebind
      { no-src-span }
      (datatype
        { no-src-span }
        (tyvardecl { no-src-span } Bool ({ no-src-span } type))

        Bool_match
        (vardecl { no-src-span } True { no-src-span } Bool)
        (vardecl { no-src-span } False { no-src-span } Bool)
      )
    )
    (termbind
      { no-src-span }
      (strict)
      (vardecl
        { no-src-span }
        equalsInteger
        (fun
          { no-src-span }
          (con { no-src-span } integer)
          (fun
            { no-src-span }
            (con { no-src-span } integer)
            (con { no-src-span } bool)
          )
        )
      )
      (builtin { no-src-span } equalsInteger)
    )
    (termbind
      { no-src-span }
      (strict)
      (vardecl
        { no-src-span }
        ifThenElse
        (all
          { no-src-span }
          a
          ({ no-src-span } type)
          (fun
            { no-src-span }
            (con { no-src-span } bool)
            (fun
              { no-src-span }
              { no-src-span } a
              (fun { no-src-span } { no-src-span } a { no-src-span } a)
            )
          )
        )
      )
      (builtin { no-src-span } ifThenElse)
    )
    (termbind
      { no-src-span }
      (nonstrict)
      (vardecl
        { no-src-span }
        equalsInteger
        (fun
          { no-src-span }
          (con { no-src-span } integer)
          (fun
            { no-src-span } (con { no-src-span } integer) { no-src-span } Bool
          )
        )
      )
      (lam
        { no-src-span }
        x
        (con { no-src-span } integer)
        (lam
          { no-src-span }
          y
          (con { no-src-span } integer)
          [
            { no-src-span }
            [
              { no-src-span }
              [
                { no-src-span }
                {
                  { no-src-span }
                  { no-src-span } ifThenElse
                  { no-src-span } Bool
                }
                [
                  { no-src-span }
                  [
                    { no-src-span }
                    { no-src-span } equalsInteger
                    { no-src-span } x
                  ]
                  { no-src-span } y
                ]
              ]
              { no-src-span } True
            ]
            { no-src-span } False
          ]
        )
      )
    )
    { test/Plugin/Debug/Spec.hs:38:9-38:87, test/Plugin/Debug/Spec.hs:38:54-38:79 }
    equalsInteger
  )
)