(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl MyPolyData (fun (type) (fun (type) (type))))
        (tyvardecl a (type)) (tyvardecl b (type))
        MyPolyData_match
        (vardecl Poly1 (fun a (fun b [[MyPolyData a] b])))
        (vardecl Poly2 (fun a [[MyPolyData a] b]))
      )
    )
    (lam
      ds
      [[MyPolyData [(con integer) (con 8)]] [(con integer) (con 8)]]
      [
        [
          {
            [
              {
                { MyPolyData_match [(con integer) (con 8)] }
                [(con integer) (con 8)]
              }
              ds
            ]
            [(con integer) (con 8)]
          }
          (lam a [(con integer) (con 8)] (lam ds [(con integer) (con 8)] a))
        ]
        (lam default_arg0 [(con integer) (con 8)] (con 8 ! 2))
      ]
    )
  )
)