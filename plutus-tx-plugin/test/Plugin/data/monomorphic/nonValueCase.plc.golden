(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl MyEnum (type))
        
        MyEnum_match
        (vardecl Enum1 MyEnum) (vardecl Enum2 MyEnum)
      )
    )
    (let
      (nonrec)
      (datatypebind
        (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
      )
      (let
        (nonrec)
        (termbind
          (vardecl error (all a (type) (fun Unit a)))
          (abs e (type) (lam thunk Unit (error e)))
        )
        (lam
          ds
          MyEnum
          [
            [
              [
                { [ MyEnum_match ds ] (fun Unit [(con integer) (con 8)]) }
                (lam thunk Unit (con 8 ! 1))
              ]
              (lam thunk Unit [ { error [(con integer) (con 8)] } Unit ])
            ]
            Unit
          ]
        )
      )
    )
  )
)