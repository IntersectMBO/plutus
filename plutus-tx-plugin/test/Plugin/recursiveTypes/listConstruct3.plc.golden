(program
  (let
    (rec)
    (datatypebind
      (datatype
        (tyvardecl List (fun (type) (type)))
        (tyvardecl a (type))
        Nil_match
        (vardecl Nil [List a]) (vardecl Cons (fun a (fun [List a] [List a])))
      )
    )
    [
      [ { Cons [(con integer) (con 8)] } (con 8 ! 1) ]
      [
        [ { Cons [(con integer) (con 8)] } (con 8 ! 2) ]
        [
          [ { Cons [(con integer) (con 8)] } (con 8 ! 3) ]
          { Nil [(con integer) (con 8)] }
        ]
      ]
    ]
  )
)