(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl
          UTuple5
          (fun
            (type) (fun (type) (fun (type) (fun (type) (fun (type) (type)))))
          )
        )
        (tyvardecl a (type))
        (tyvardecl b (type))
        (tyvardecl c (type))
        (tyvardecl d (type))
        (tyvardecl e (type))
        UTuple5_match
        (vardecl
          UTuple5
          (fun
            a
            (fun
              b (fun c (fun d (fun e [ [ [ [ [ UTuple5 a ] b ] c ] d ] e ])))
            )
          )
        )
      )
    )
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (builtin addInteger)
    )
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (lam x (con integer) (lam y (con integer) [ [ addInteger x ] y ]))
    )
    (termbind
      (strict)
      (vardecl
        unboxedTuple
        (fun
          [
            [
              [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
              (con integer)
            ]
            (con integer)
          ]
          (con integer)
        )
      )
      (lam
        ds
        [
          [
            [ [ [ UTuple5 (con integer) ] (con integer) ] (con integer) ]
            (con integer)
          ]
          (con integer)
        ]
        [
          {
            [
              {
                {
                  {
                    { { UTuple5_match (con integer) } (con integer) }
                    (con integer)
                  }
                  (con integer)
                }
                (con integer)
              }
              ds
            ]
            (con integer)
          }
          (lam
            i
            (con integer)
            (lam
              j
              (con integer)
              (lam
                k
                (con integer)
                (lam
                  l
                  (con integer)
                  (lam
                    m
                    (con integer)
                    [
                      [
                        addInteger
                        [
                          [
                            addInteger
                            [ [ addInteger [ [ addInteger i ] j ] ] k ]
                          ]
                          l
                        ]
                      ]
                      m
                    ]
                  )
                )
              )
            )
          )
        ]
      )
    )
    (lam
      x
      (con integer)
      [
        unboxedTuple
        [
          [
            [
              [
                [
                  {
                    {
                      {
                        { { UTuple5 (con integer) } (con integer) }
                        (con integer)
                      }
                      (con integer)
                    }
                    (con integer)
                  }
                  x
                ]
                x
              ]
              x
            ]
            x
          ]
          x
        ]
      ]
    )
  )
)