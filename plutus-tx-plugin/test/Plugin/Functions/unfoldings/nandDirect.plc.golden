(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Bool (type))
        
        Bool_match
        (vardecl True Bool) (vardecl False Bool)
      )
    )
    (let
      (nonrec)
      (datatypebind
        (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
      )
      (let
        (nonrec)
        (termbind
          (strict)
          (vardecl nandDirect (fun Bool (fun Bool Bool)))
          (lam
            ds
            Bool
            (lam
              ds
              Bool
              [
                [
                  [
                    { [ Bool_match ds ] (fun Unit Bool) } (lam thunk Unit False)
                  ]
                  (lam
                    thunk
                    Unit
                    [
                      [
                        [
                          { [ Bool_match ds ] (fun Unit Bool) }
                          (lam thunk Unit False)
                        ]
                        (lam thunk Unit True)
                      ]
                      Unit
                    ]
                  )
                ]
                Unit
              ]
            )
          )
        )
        [ [ nandDirect True ] False ]
      )
    )
  )
)