(program
  (let
    (nonrec)
    (datatypebind
      (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
    )
    (let
      (nonrec)
      (datatypebind
        (datatype
          (tyvardecl Bool (type))
          
          Bool_match
          (vardecl True Bool) (vardecl False Bool)
        )
      )
      (let
        (nonrec)
        (termbind
          (strict)
          (vardecl andExternal (fun Bool (fun Bool Bool)))
          (lam
            a
            Bool
            (lam
              b
              Bool
              [
                [
                  [ { [ Bool_match a ] (fun Unit Bool) } (lam thunk Unit b) ]
                  (lam thunk Unit False)
                ]
                Unit
              ]
            )
          )
        )
        [ [ andExternal True ] False ]
      )
    )
  )
)