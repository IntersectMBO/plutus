(program
  (let
    (rec)
    (datatypebind
      (datatype
        (tyvardecl List (fun (type) (type)))
        (tyvardecl a (type))
        Nil_match
        (vardecl Nil [ List a ])
        (vardecl Cons (fun a (fun [ List a ] [ List a ])))
      )
    )
    (let
      (nonrec)
      (termbind
        (strict)
        (vardecl
          addInteger (fun (con integer) (fun (con integer) (con integer)))
        )
        (builtin addInteger)
      )
      (termbind
        (strict)
        (vardecl
          addInteger (fun (con integer) (fun (con integer) (con integer)))
        )
        (lam x (con integer) (lam y (con integer) [ [ addInteger x ] y ]))
      )
      (termbind
        (strict)
        (vardecl lengthStrict (all a (type) (fun [ List a ] (con integer))))
        (abs
          a
          (type)
          (let
            (rec)
            (termbind
              (strict)
              (vardecl go (fun (con integer) (fun [ List a ] (con integer))))
              (lam
                acc
                (con integer)
                (lam
                  ds
                  [ List a ]
                  (let
                    (nonrec)
                    (termbind (strict) (vardecl acc (con integer)) acc)
                    {
                      [
                        [
                          {
                            [ { Nil_match a } ds ]
                            (all dead (type) (con integer))
                          }
                          (abs dead (type) acc)
                        ]
                        (lam
                          ds
                          a
                          (lam
                            tl
                            [ List a ]
                            (abs
                              dead
                              (type)
                              [
                                [ go [ [ addInteger acc ] (con integer 1) ] ] tl
                              ]
                            )
                          )
                        )
                      ]
                      (all dead (type) dead)
                    }
                  )
                )
              )
            )
            (lam l [ List a ] [ [ go (con integer 0) ] l ])
          )
        )
      )
      { lengthStrict (con integer) }
    )
  )
)