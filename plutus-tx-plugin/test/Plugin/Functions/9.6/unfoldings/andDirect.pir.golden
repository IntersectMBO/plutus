program
  1.1.0
  (let
    data Bool | Bool_match where
      True : Bool
      False : Bool
    ~nandDirect : Bool -> Bool -> Bool
      = \(ds : Bool) ->
          let
            !ds : Bool = ds
          in
          \(ds : Bool) ->
            let
              !ds : Bool = ds
            in
            Bool_match
              ds
              {all dead. Bool}
              (/\dead -> False)
              (/\dead ->
                 Bool_match
                   ds
                   {all dead. Bool}
                   (/\dead -> False)
                   (/\dead -> True)
                   {all dead. dead})
              {all dead. dead}
    ~andDirect : Bool -> Bool -> Bool
      = \(ds : Bool) ->
          let
            !ds : Bool = ds
          in
          \(ds : Bool) ->
            let
              !ds : Bool = ds
            in
            nandDirect (nandDirect ds ds) (nandDirect ds ds)
  in
  andDirect True False)