(program
  (let
    (nonrec)
    (termbind
      (strict)
      (vardecl
        size
        (all a (type) (fun [(lam a (type) (fun a (con integer))) a] (fun a (con integer))))
      )
      (abs a (type) (lam v [(lam a (type) (fun a (con integer))) a] v))
    )
    (let
      (nonrec)
      (termbind
        (strict)
        (vardecl csize (fun (con integer) (con integer)))
        (lam x (con integer) x)
      )
      (let
        (nonrec)
        (termbind
          (nonstrict)
          (vardecl
            fSizedInteger [(lam a (type) (fun a (con integer))) (con integer)]
          )
          csize
        )
        (lam ds (con integer) [ [ { size (con integer) } fSizedInteger ] ds ])
      )
    )
  )
)