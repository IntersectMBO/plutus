(program
  1.1.0
  (let
    (nonrec)
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (builtin addInteger)
    )
    (termbind
      (nonstrict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (lam
        x
        (con integer)
        (let
          (nonrec)
          (termbind (strict) (vardecl x (con integer)) x)
          (lam
            y
            (con integer)
            (let
              (nonrec)
              (termbind (strict) (vardecl y (con integer)) y)
              [ [ addInteger x ] y ]
            )
          )
        )
      )
    )
    (lam
      ds
      (con integer)
      (let
        (nonrec)
        (termbind (strict) (vardecl ds (con integer)) ds)
        (lam
          ds
          (con integer)
          (let
            (nonrec)
            (termbind (strict) (vardecl ds (con integer)) ds)
            (termbind
              (strict) (vardecl z (con integer)) [ [ addInteger ds ] ds ]
            )
            (termbind (strict) (vardecl q (con integer)) [ [ addInteger z ] z ])
            [ [ addInteger q ] q ]
          )
        )
      )
    )
  )
)