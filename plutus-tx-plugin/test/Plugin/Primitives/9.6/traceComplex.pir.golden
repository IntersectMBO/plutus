program
  1.1.0
  (let
    data Bool | Bool_match where
      True : Bool
      False : Bool
    !trace : all a. string -> a -> a = trace
    ~trace : all a. string -> a -> a = trace
    data Unit | Unit_match where
      Unit : Unit
    !error : all a. unit -> a = /\a -> \(thunk : unit) -> error {a}
    !unitval : unit = ()
    ~traceError : all a. string -> a
      = /\a ->
          \(str : string) ->
            let
              !str : string = str
              !x : Unit = trace {Unit} str Unit
            in
            error {a} unitval
  in
  \(ds : Bool) ->
    let
      !ds : Bool = ds
    in
    Bool_match
      ds
      {all dead. Unit}
      (/\dead -> trace {Unit} "yes" Unit)
      (/\dead -> traceError {Unit} "no")
      {all dead. dead})