let
  !ifThenElse : all a. bool -> a -> a -> a
    = /\a -> \(b : bool) (x : a) (y : a) -> case a b [y, x]
  !lessThanInteger : integer -> integer -> bool = lessThanInteger
  ~lessThanInteger : integer -> integer -> bool
    = \(x : integer) ->
        let
          !x : integer = x
        in
        \(y : integer) ->
          let
            !y : integer = y
            !b : bool = lessThanInteger x y
          in
          ifThenElse {bool} b True False
in
\(ds : integer) ->
  let
    !ds : integer = ds
  in
  \(ds : integer) -> let !ds : integer = ds in lessThanInteger ds ds