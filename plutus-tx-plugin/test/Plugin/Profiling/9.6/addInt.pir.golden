program
  1.1.0
  (let
    !addInteger : integer -> integer -> integer = addInteger
    ~addInteger : integer -> integer -> integer
      = \(x : integer) ->
          let
            !x : integer = x
          in
          \(y : integer) ->
            let
              !y : integer = y
            in
            trace
              {unit -> integer}
              "entering addInteger-129"
              (\(thunk : unit) ->
                 trace {integer} "exiting addInteger-129" (addInteger x y))
              ()
    ~addInt : integer -> integer -> integer
      = \(x : integer) ->
          let
            !x : integer = x
          in
          trace
            {unit -> integer -> integer}
            "entering addInt-126"
            (\(thunk : unit) ->
               trace {integer -> integer} "exiting addInt-126" (addInteger x))
            ()
  in
  addInt)