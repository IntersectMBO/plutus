(program
  1.1.0
  (let
    (nonrec)
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (builtin addInteger)
    )
    (termbind
      (nonstrict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (lam
        x
        (con integer)
        (let
          (nonrec)
          (termbind (strict) (vardecl x (con integer)) x)
          (lam
            y
            (con integer)
            (let
              (nonrec)
              (termbind (strict) (vardecl y (con integer)) y)
              [
                [
                  [
                    { (builtin trace) (fun (con unit) (con integer)) }
                    (con string "entering addInteger")
                  ]
                  (lam
                    thunk
                    (con unit)
                    [
                      [
                        { (builtin trace) (con integer) }
                        (con string "exiting addInteger")
                      ]
                      [ [ addInteger x ] y ]
                    ]
                  )
                ]
                (con unit ())
              ]
            )
          )
        )
      )
    )
    (termbind
      (nonstrict)
      (vardecl addInt (fun (con integer) (fun (con integer) (con integer))))
      (lam
        x
        (con integer)
        (let
          (nonrec)
          (termbind (strict) (vardecl x (con integer)) x)
          [
            [
              [
                {
                  (builtin trace)
                  (fun (con unit) (fun (con integer) (con integer)))
                }
                (con string "entering addInt")
              ]
              (lam
                thunk
                (con unit)
                [
                  [
                    { (builtin trace) (fun (con integer) (con integer)) }
                    (con string "exiting addInt")
                  ]
                  [ addInteger x ]
                ]
              )
            ]
            (con unit ())
          ]
        )
      )
    )
    addInt
  )
)