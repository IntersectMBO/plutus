program
  1.1.0
  (force
     (delay
        (\`GHC.Tuple.Prim.Tuple2` `match_GHC.Tuple.Prim.Tuple2` ->
           force
             (delay
                (\`GHC.Maybe.Just`
                  `GHC.Maybe.Nothing`
                  `match_GHC.Maybe.Maybe` ->
                   force
                     (delay
                        (\`Lift.Spec.NestedRecord`
                          `match_Lift.Spec.NestedRecord` ->
                           `Lift.Spec.NestedRecord`))
                     (\arg_0 -> constr 0 [arg_0])
                     (\x ->
                        delay
                          (\`case_Lift.Spec.NestedRecord` ->
                             case x [`case_Lift.Spec.NestedRecord`]))
                     (force `GHC.Maybe.Just`
                        (force (force `GHC.Tuple.Prim.Tuple2`) 1 2))))
             (delay (\arg_0 -> constr 0 [arg_0]))
             (delay (constr 1 []))
             (delay
                (\x ->
                   delay
                     (\`case_GHC.Maybe.Just` `case_GHC.Maybe.Nothing` ->
                        case
                          x
                          [`case_GHC.Maybe.Just`, `case_GHC.Maybe.Nothing`])))))
     (delay (delay (\arg_0 arg_1 -> constr 0 [arg_0, arg_1])))
     (delay
        (delay
           (\x ->
              delay
                (\`case_GHC.Tuple.Prim.Tuple2` ->
                   case x [`case_GHC.Tuple.Prim.Tuple2`])))))