program
  1.1.0
  ((\fix1 ->
      (\`$fAdditiveMonoidInteger_$czero` ->
         (\euclid ->
            (\unsafeRatio eta ->
               case
                 ((\tup ->
                     force ifThenElse
                       (equalsInteger 0 (force (force fstPair) tup))
                       (\ds ->
                          (\t ->
                             (\arg ->
                                (\arg_1 -> constr 0 [(unIData arg), arg_1])
                                  (unIData (force headList (force tailList t))))
                               (force headList t))
                            (force (force sndPair) tup))
                       (\ds -> error)
                       ())
                    (unConstrData eta))
                 [(\a b -> unsafeRatio a b)])
              (fix1
                 (\unsafeRatio n d ->
                    force
                      (force ifThenElse
                         (equalsInteger d `$fAdditiveMonoidInteger_$czero`)
                         (delay error)
                         (delay
                            (force
                               (force ifThenElse
                                  (lessThanInteger
                                     d
                                     `$fAdditiveMonoidInteger_$czero`)
                                  (delay
                                     (unsafeRatio
                                        (subtractInteger
                                           `$fAdditiveMonoidInteger_$czero`
                                           n)
                                        (subtractInteger
                                           `$fAdditiveMonoidInteger_$czero`
                                           d)))
                                  (delay
                                     ((\gcd' ->
                                         (\dt ->
                                            constr 0
                                              [(quotientInteger n gcd'), dt])
                                           (quotientInteger d gcd'))
                                        (euclid n d))))))))))
           (fix1
              (\euclid x y ->
                 force
                   (force ifThenElse
                      (equalsInteger y `$fAdditiveMonoidInteger_$czero`)
                      (delay x)
                      (delay (euclid y (modInteger x y)))))))
        0)
     (\f -> (\s -> s s) (\s x -> f (s s) x)))