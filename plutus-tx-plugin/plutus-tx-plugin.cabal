cabal-version: 1.18
name: plutus-tx-plugin
version: 0.1.0.0
license: BSD3
license-file: LICENSE
copyright: Copyright: (c) 2018 Input Output
maintainer: michael.peyton-jones@iohk.io
author: Michael Peyton Jones
synopsis: PlutusTx compiler plugin
description:
    GHC compiler plugin for the PlutusTx compiler
category: Language
build-type: Simple
extra-doc-files: README.md

source-repository head
    type: git
    location: https://github.com/input-output-hk/plutus

flag development
    description:
        Enable `-Werror`
    default: False
    manual: True

library
    exposed-modules:
        Language.PlutusTx.Lift
        Language.PlutusTx.Plugin
        Language.PlutusTx.Builtins
        Language.PlutusTx.Compiler.Error
    hs-source-dirs: src
    other-modules:
        Language.PlutusTx.PLCTypes
        Language.PlutusTx.PIRTypes
        Language.PlutusTx.Utils
        Language.PlutusTx.Lift.LiftPir
        Language.PlutusTx.Lift.THUtils
        Language.PlutusTx.Lift.Instances
        Language.PlutusTx.Compiler.Binders
        Language.PlutusTx.Compiler.Builtins
        Language.PlutusTx.Compiler.Laziness
        Language.PlutusTx.Compiler.Expr
        Language.PlutusTx.Compiler.Names
        Language.PlutusTx.Compiler.Kind
        Language.PlutusTx.Compiler.Primitives
        Language.PlutusTx.Compiler.Type
        Language.PlutusTx.Compiler.Types
        Language.PlutusTx.Compiler.Utils
        Language.PlutusTx.Compiler.ValueRestriction
    default-language: Haskell2010
    default-extensions: ExplicitForAll ScopedTypeVariables
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable
    other-extensions: DeriveAnyClass FlexibleContexts FlexibleInstances
                      MultiParamTypeClasses TypeFamilies OverloadedStrings
                      MonadComprehensions ConstrainedClassMethods TupleSections GADTs
                      RankNTypes TemplateHaskell QuasiQuotes TypeApplications
                      ExistentialQuantification
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
    build-depends:
        base >=4.9 && <5,
        bytestring -any,
        cborg -any,
        containers -any,
        ghc -any,
        language-plutus-core -any,
        lens -any,
        mtl -any,
        plutus-ir -any,
        prettyprinter -any,
        serialise -any,
        template-haskell -any,
        th-abstraction -any,
        text -any,
        transformers -any

    if (flag(development) && impl(ghc <8.4))
        ghc-options: -Werror

test-suite plutus-tx-plugin-tests
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: test
    other-modules:
        Lift.Spec
        Plugin.Spec
        Plugin.IllTyped
    default-language: Haskell2010
    build-depends:
        base >=4.9 && <5,
        plutus-tx-plugin -any,
        plutus-ir -any,
        language-plutus-core -any,
        bytestring -any,
        tasty -any
