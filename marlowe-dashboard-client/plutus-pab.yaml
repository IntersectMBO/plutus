# This file is provided here for development purposes only. In deployment,
# settings are taken from `deployment/morph/machines/marlowe-dash.nix` (which
# also determines which contracts are available). In most cases we use the
# default settings - the main thing to watch out for is that the
# `scZeroSlotTime` here coincides with the frontend code's assumptions about
# the time of slot 0 (in `web-common-marlowe/src/Marlowe/Slot.purs`).
dbConfig:
    dbConfigFile: pab-core.db
    dbConfigPoolSize: 20

pabWebserverConfig:
  baseUrl: http://localhost:8080
  staticDir: plutus-pab-client/dist

walletServerConfig:
  baseUrl: http://localhost:8081
  wallet:
    getWallet: 1

nodeServerConfig:
  mscBaseUrl: http://localhost:8082
  mscSocketPath: ./node-server.sock
  mscSlotLength: 1
  mscKeptBlocks: 100
  # mscRandomTxInterval: 20 -- this creates random transactions on the blockchain
  mscSlotConfig:
    scZeroSlotTime: 1591566291000 # see note [Datetime to slot] in Marlowe.Slot
    scSlotLength: 1
  mscInitialTxWallets:
    - getWallet: 1
    - getWallet: 2
    - getWallet: 3

chainIndexConfig:
  ciBaseUrl: http://localhost:8083
  ciWatchedAddresses: []

requestProcessingConfig:
  requestProcessingInterval: 1

signingProcessConfig:
  spBaseUrl: http://localhost:8084
  spWallet:
    getWallet: 1

metadataServerConfig:
  mdBaseUrl: http://localhost:8085

# Optional timeout (in seconds) for calls to endpoints that are not currently
# available. If this is not set, calls to unavailable endpoints fail 
# immediately.
# The endpoints on Marlowe contracts are always available, so in principle
# this isn't an issue here. However, there is a split second between creating
# a contract and the endpoints first becoming available - so having this set
# ensures that the first attempt to call an endpoint (immediately after
# creating the contract) won't fail.
endpointTimeout: 5

# Optional EKG Server Config
# ----
# monitoringConfig:
#   monitoringPort: 9090
