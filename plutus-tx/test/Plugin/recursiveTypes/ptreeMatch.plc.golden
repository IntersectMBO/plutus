(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Tuple2 (fun (type) (fun (type) (type))))
        (tyvardecl a (type)) (tyvardecl b (type))
        Tuple2_match
        (vardecl Tuple2 (fun a (fun b [[Tuple2 a] b])))
      )
    )
    (let
      (rec)
      (datatypebind
        (datatype
          (tyvardecl B (fun (type) (type)))
          (tyvardecl a (type))
          B_match
          (vardecl One (fun a [B a]))
          (vardecl Two (fun [B [[Tuple2 a] a]] [B a]))
        )
      )
      (lam
        ds
        [B [(con integer) (con 8)]]
        [
          [
            {
              [ { B_match [(con integer) (con 8)] } ds ] [(con integer) (con 8)]
            }
            (lam a [(con integer) (con 8)] a)
          ]
          (lam
            ds
            [B [[Tuple2 [(con integer) (con 8)]] [(con integer) (con 8)]]]
            (con 8 ! 2)
          )
        ]
      )
    )
  )
)