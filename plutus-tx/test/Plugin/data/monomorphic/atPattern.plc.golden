(program
  (let
    (nonrec
    )
    (datatypebind
      (datatype
        (tyvardecl Tuple2 (fun (type) (fun (type) (type))))
        (tyvardecl a (type)) (tyvardecl b (type))
        Tuple2_match
        (vardecl Tuple2 (fun a (fun b [[Tuple2 a] b])))
      )
    )
    (let
      (nonrec
      )
      (termbind
        (vardecl
          addInteger
          (fun [(con integer) (con 8)] (fun [(con integer) (con 8)] [(con integer) (con 8)]))
        )
        { (builtin addInteger) (con 8) }
      )
      (lam
        t
        [[Tuple2 [(con integer) (con 8)]] [(con integer) (con 8)]]
        (let
          (nonrec)
          (termbind
            (vardecl
              wild [[Tuple2 [(con integer) (con 8)]] [(con integer) (con 8)]]
            )
            t
          )
          [
            {
              [
                {
                  { Tuple2_match [(con integer) (con 8)] }
                  [(con integer) (con 8)]
                }
                t
              ]
              [(con integer) (con 8)]
            }
            (lam
              ds
              [(con integer) (con 8)]
              (lam
                ds
                [(con integer) (con 8)]
                [
                  [ addInteger ds ]
                  [
                    (lam
                      ds
                      [[Tuple2 [(con integer) (con 8)]] [(con integer) (con 8)]]
                      [
                        {
                          [
                            {
                              { Tuple2_match [(con integer) (con 8)] }
                              [(con integer) (con 8)]
                            }
                            ds
                          ]
                          [(con integer) (con 8)]
                        }
                        (lam
                          a
                          [(con integer) (con 8)]
                          (lam b [(con integer) (con 8)] a)
                        )
                      ]
                    )
                    wild
                  ]
                ]
              )
            )
          ]
        )
      )
    )
  )
)