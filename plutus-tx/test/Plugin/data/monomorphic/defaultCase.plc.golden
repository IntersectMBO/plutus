(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl MyMonoData (type))
        
        MyMonoData_match
        (vardecl
          Mono1
          (fun [(con integer) (con 8)] (fun [(con integer) (con 8)] MyMonoData))
        )
        (vardecl Mono2 (fun [(con integer) (con 8)] MyMonoData))
        (vardecl Mono3 (fun [(con integer) (con 8)] MyMonoData))
      )
    )
    (lam
      ds
      MyMonoData
      [
        [
          [
            { [ MyMonoData_match ds ] [(con integer) (con 8)] }
            (lam
              default_arg0
              [(con integer) (con 8)]
              (lam default_arg1 [(con integer) (con 8)] (con 8 ! 2))
            )
          ]
          (lam default_arg0 [(con integer) (con 8)] (con 8 ! 2))
        ]
        (lam a [(con integer) (con 8)] a)
      ]
    )
  )
)