cabal-version: 2.2
name: plutus-tx
version: 0.1.0.0
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
maintainer: michael.peyton-jones@iohk.io
author: Michael Peyton Jones
synopsis: The PlutusTx compiler frontend
description:
    The PlutusTx compiler frontend
category: Language
build-type: Simple
extra-doc-files: README.md

source-repository head
    type: git
    location: https://github.com/input-output-hk/plutus

common lang
    default-language: Haskell2010
    default-extensions: ExplicitForAll ScopedTypeVariables
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable
    other-extensions: DeriveAnyClass FlexibleContexts FlexibleInstances
                      MultiParamTypeClasses TypeFamilies OverloadedStrings
                      MonadComprehensions ConstrainedClassMethods TupleSections GADTs
                      RankNTypes TemplateHaskell QuasiQuotes TypeApplications
                      ExistentialQuantification
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
                 -- See Plutus Tx readme
                 -fobject-code -fno-ignore-interface-pragmas -fno-omit-interface-pragmas

library
    import: lang
    hs-source-dirs: src
    exposed-modules:
        Language.PlutusTx
        Language.PlutusTx.TH
        Language.PlutusTx.Prelude
        Language.PlutusTx.Evaluation
    reexported-modules:
        Language.PlutusTx.Code,
        Language.PlutusTx.Lift,
        Language.PlutusTx.Lift.Class,
        Language.PlutusTx.Builtins,
        Language.PlutusTx.Plugin
    build-tool-depends: doctest:doctest
    build-depends:
        base >=4.9 && <5,
        bytestring -any,
        template-haskell >=2.13.0.0,
        language-plutus-core -any,
        plutus-core-interpreter -any,
        plutus-tx-compiler -any

library plutus-tx-compiler
    import: lang
    hs-source-dirs: compiler
    exposed-modules:
        Language.PlutusTx.Plugin
        Language.PlutusTx.Builtins
        Language.PlutusTx.PLCTypes
        Language.PlutusTx.PIRTypes
        Language.PlutusTx.Utils
        Language.PlutusTx.Lift
        Language.PlutusTx.Lift.Class
        Language.PlutusTx.Lift.THUtils
        Language.PlutusTx.Lift.Instances
        Language.PlutusTx.Code
        Language.PlutusTx.Compiler.Error
        Language.PlutusTx.Compiler.Binders
        Language.PlutusTx.Compiler.Builtins
        Language.PlutusTx.Compiler.Laziness
        Language.PlutusTx.Compiler.Expr
        Language.PlutusTx.Compiler.Names
        Language.PlutusTx.Compiler.Kind
        Language.PlutusTx.Compiler.Primitives
        Language.PlutusTx.Compiler.Type
        Language.PlutusTx.Compiler.Types
        Language.PlutusTx.Compiler.Utils
        Language.PlutusTx.Compiler.ValueRestriction
    build-depends:
        base >=4.9 && <5,
        bytestring -any,
        containers -any,
        extra -any,
        ghc >=8.6 && <8.7,
        language-plutus-core -any,
        lens -any,
        mtl -any,
        plutus-ir -any,
        prettyprinter -any,
        serialise -any,
        template-haskell -any,
        th-abstraction <0.3.0.0,
        text -any,
        transformers -any

test-suite plutus-tx-tests
    type: exitcode-stdio-1.0
    hs-source-dirs: test
    main-is: Spec.hs
    other-modules:
        Lift.Spec
        Plugin.Spec
        Plugin.Basic.Spec
        Plugin.Data.Spec
        Plugin.Errors.Spec
        Plugin.Functions.Spec
        Plugin.Laziness.Spec
        Plugin.Primitives.Spec
        Plugin.ReadValue.Spec
        Plugin.Lib
        TH.Spec
        TH.TestTH
    default-language: Haskell2010
    build-depends:
        base >=4.9 && <5,
        language-plutus-core -any,
        plutus-core-interpreter -any,
        plutus-tx -any,
        plutus-ir -any,
        prettyprinter -any,
        mtl -any,
        bytestring -any,
        template-haskell -any,
        tasty -any,
        tasty-hunit -any
    -- this makes the plugin give better errors
    ghc-options: -g
