cabal-version: 2.0
name: plutus-ir
version: 0.1.0.0
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
maintainer: michael.peyton-jones@iohk.io
author: Michael Peyton Jones
synopsis: Plutus IR language
description:
    Plutus IR language library and compiler to Plutus Core.
category: Language
build-type: Simple
extra-doc-files: README.md

source-repository head
    type: git
    location: https://github.com/input-output-hk/plutus

library
    exposed-modules:
        Language.PlutusIR
        Language.PlutusIR.Compiler
        Language.PlutusIR.Compiler.Names
        Language.PlutusIR.Compiler.Definitions
        Language.PlutusIR.Generators.AST
        Language.PlutusIR.Parser
        Language.PlutusIR.MkPir
        Language.PlutusIR.Value
        Language.PlutusIR.Optimizer.DeadCode
        Language.PlutusIR.Transform.Substitute
        Language.PlutusIR.Transform.ThunkRecursions
        Language.PlutusIR.Transform.Rename
        Language.PlutusIR.Transform.NonStrict
        Language.PlutusIR.Transform.LetFloat
    hs-source-dirs: src
    other-modules:
        Language.PlutusIR.Analysis.Free
        Language.PlutusIR.Analysis.Dependencies
        Language.PlutusIR.Analysis.Usages
        Language.PlutusIR.Compiler.Error
        Language.PlutusIR.Compiler.Let
        Language.PlutusIR.Compiler.Datatype
        Language.PlutusIR.Compiler.Provenance
        Language.PlutusIR.Compiler.Recursion
        Language.PlutusIR.Compiler.Types
        Language.PlutusIR.Compiler.Lower
    default-language: Haskell2010
    default-extensions: ExplicitForAll ScopedTypeVariables
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable
    other-extensions: DeriveAnyClass FlexibleContexts FlexibleInstances
                      MultiParamTypeClasses TypeFamilies OverloadedStrings
                      MonadComprehensions ConstrainedClassMethods TupleSections GADTs
                      RankNTypes TemplateHaskell QuasiQuotes TypeApplications
                      ExistentialQuantification
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
    build-depends:
        base >=4.9 && <5,
        bytestring -any,
        hedgehog -any,
        containers -any,
        language-plutus-core -any,
        lens -any,
        mtl -any,
        mmorph -any,
        prettyprinter -any,
        recursion-schemes -any,
        serialise -any,
        text -any,
        transformers -any,
        algebraic-graphs >= 0.3,
        megaparsec -any,
        parser-combinators >= 0.4.0

test-suite plutus-ir-test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: test
    other-modules:
        OptimizerSpec
        TransformSpec
        ParserSpec
        TestLib
    default-language: Haskell2010
    build-depends:
        base >=4.9 && <5,
        hedgehog -any,
        plutus-ir -any,
        filepath -any,
        text -any,
        language-plutus-core -any,
        mtl -any,
        mmorph -any,
        prettyprinter -any,
        serialise -any,
        tasty -any,
        tasty-hedgehog -any,
        text -any,
        megaparsec -any
