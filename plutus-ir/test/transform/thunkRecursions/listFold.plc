(let
  (rec)
  (datatypebind
    (datatype
      (tyvardecl List (fun (type) (type)))
      (tyvardecl a (type))
      match_List
      (vardecl Nil [List a]) (vardecl Cons (fun a (fun [List a] [List a])))
    )
  )
  (let
    (rec)
    (termbind
      (vardecl
        foldl
        (all a (type) (all b (type) (fun (fun a (fun b a)) (fun a (fun [List b] a)))))
      )
      (lam
        f
        (fun a (fun b a))
        (lam
          acc
          a
          (lam
            lst
            [List b]
            [
              [ [ { match_List a } lst ] acc ]
              (lam x b (lam xs [List b] [ [ [ foldl f ] [ [ f acc ] x ] ] xs ]))
            ]
          )
        )
      )
    )
    foldl
  )
)
