[
  [
    [
      {
        (abs
          Maybe
          (fun (type) (type))
          (lam
            Nothing
            [Maybe a]
            (lam
              Just
              (fun a [Maybe a])
              (lam
                match_Maybe
                (all a (type) (fun [Maybe a] [(lam a (type) (all r (type) (fun r (fun (fun a r) r)))) a]))
                [ { Just (all a (type) (fun a a)) } (abs a (type) (lam x a x)) ]
              )
            )
          )
        )
        (lam a (type) (all r (type) (fun r (fun (fun a r) r))))
      }
      (abs a (type) (abs r (type) (lam case0 r (lam case1 (fun a r) case0))))
    ]
    (abs
      a
      (type)
      (lam
        arg0 a (abs r (type) (lam case0 r (lam case1 (fun a r) [ case1 arg0 ])))
      )
    )
  ]
  (abs a (type) (lam x [Maybe a] x))
]