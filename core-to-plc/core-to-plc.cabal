cabal-version: 1.18
name: core-to-plc
version: 0.1.0.0
license: BSD3
license-file: LICENSE
copyright: Copyright: (c) 2018 Input Output
maintainer: michael.peyton-jones@iohk.io
author: Michael Peyton Jones
synopsis: GHC Core to Plutus Core compiler
description:
    Complier that converts GHC Core to Plutus Core
category: Language
build-type: Simple
extra-doc-files: README.md

source-repository head
    type: git
    location: https://github.com/input-output-hk/plutus-prototype

flag development
    description:
        Enable `-Werror`
    default: False
    manual: True

library
    exposed-modules:
        Language.Plutus.CoreToPLC.Plugin
        Language.Plutus.CoreToPLC.Error
        Language.Plutus.CoreToPLC.Primitives
    hs-source-dirs: src
    other-modules:
        Language.Plutus.CoreToPLC
        Language.Plutus.CoreToPLC.Builtins
        Language.Plutus.CoreToPLC.Laziness
        Language.Plutus.CoreToPLC.Types
    default-language: Haskell2010
    default-extensions: ExplicitForAll ScopedTypeVariables
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable
    other-extensions: DeriveAnyClass FlexibleContexts FlexibleInstances
                      MultiParamTypeClasses TypeFamilies OverloadedStrings
                      MonadComprehensions ConstrainedClassMethods TupleSections GADTs
                      RankNTypes TemplateHaskell QuasiQuotes TypeApplications
                      ExistentialQuantification
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
    build-depends:
        base >=4.9 && <5,
        ghc -any,
        template-haskell -any,
        language-plutus-core -any,
        containers -any,
        cborg -any,
        mtl -any,
        transformers -any,
        bytestring -any,
        text -any,
        prettyprinter -any,
        mmorph -any

    if (flag(development) && impl(ghc <8.4))
        ghc-options: -Werror

test-suite core-to-plc-plugin
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: test
    other-modules:
        IllTyped
    default-language: Haskell2010
    build-depends:
        base >=4.9 && <5,
        core-to-plc -any,
        language-plutus-core -any,
        bytestring -any,
        mtl -any,
        text -any,
        tasty -any,
        tasty-hunit -any,
        tasty-golden -any
