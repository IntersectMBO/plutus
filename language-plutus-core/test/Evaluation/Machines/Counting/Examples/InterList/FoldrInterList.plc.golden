((Right (/\(a0 :: *) -> /\(b0 :: *) -> /\(r :: *) -> \(f : a0 -> b0 -> r -> r) -> \(z : r) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} (iwrap (\(self :: * -> *) -> \(a :: *) -> self a -> a) (a -> b) (\(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(self :: * -> *) -> \(a :: *) -> self a -> a) a) a) -> unwrap s s) {a -> b} s) x))) {unit} {all (a :: *). all (b :: *). (a -> b -> r -> r) -> (\(a :: *) -> \(b :: *) -> ifix (\(rec :: ((* -> * -> *) -> *) -> *) -> \(spine :: (* -> * -> *) -> *) -> spine ((\(interlist :: * -> * -> *) -> \(a :: *) -> \(b :: *) -> all (r :: *). r -> (a -> b -> interlist b a -> r) -> r) (\(a :: *) -> \(b :: *) -> rec (\(dat :: * -> * -> *) -> dat a b)))) (\(dat :: * -> * -> *) -> dat a b)) a b -> r} (\(rec : unit -> (all (a :: *). all (b :: *). (a -> b -> r -> r) -> (\(a :: *) -> \(b :: *) -> ifix (\(rec :: ((* -> * -> *) -> *) -> *) -> \(spine :: (* -> * -> *) -> *) -> spine ((\(interlist :: * -> * -> *) -> \(a :: *) -> \(b :: *) -> all (r :: *). r -> (a -> b -> interlist b a -> r) -> r) (\(a :: *) -> \(b :: *) -> rec (\(dat :: * -> * -> *) -> dat a b)))) (\(dat :: * -> * -> *) -> dat a b)) a b -> r)) -> \(u : unit) -> /\(a :: *) -> /\(b :: *) -> \(f' : a -> b -> r -> r) -> \(xs : (\(a :: *) -> \(b :: *) -> ifix (\(rec :: ((* -> * -> *) -> *) -> *) -> \(spine :: (* -> * -> *) -> *) -> spine ((\(interlist :: * -> * -> *) -> \(a :: *) -> \(b :: *) -> all (r :: *). r -> (a -> b -> interlist b a -> r) -> r) (\(a :: *) -> \(b :: *) -> rec (\(dat :: * -> * -> *) -> dat a b)))) (\(dat :: * -> * -> *) -> dat a b)) a b) -> unwrap xs {r} z (\(x : a) -> \(y : b) -> \(xs' : (\(a :: *) -> \(b :: *) -> ifix (\(rec :: ((* -> * -> *) -> *) -> *) -> \(spine :: (* -> * -> *) -> *) -> spine ((\(interlist :: * -> * -> *) -> \(a :: *) -> \(b :: *) -> all (r :: *). r -> (a -> b -> interlist b a -> r) -> r) (\(a :: *) -> \(b :: *) -> rec (\(dat :: * -> * -> *) -> dat a b)))) (\(dat :: * -> * -> *) -> dat a b)) b a) -> f' x y (rec () {b} {a} (\(y' : b) -> \(x' : a) -> f' x' y') xs'))) () {a0} {b0}))
, ({ tally: ({ BAST causes ({ cpu: 0
| mem: 1942
})})
| budget: ({ cpu: 0
| mem: 1942
})
}))