((Right (abs
  a0
  (type)
  (abs
    b0
    (type)
    (abs
      r
      (type)
      (lam
        f
        (fun a0 (fun b0 (fun r r)))
        (lam
          z
          r
          {
            {
              [
                [
                  {
                    {
                      (abs
                        a
                        (type)
                        (abs
                          b
                          (type)
                          (lam
                            f
                            (fun (fun a b) (fun a b))
                            [
                              {
                                (abs
                                  a
                                  (type)
                                  (lam
                                    s
                                    [(lam a (type) (ifix (lam self (fun (type) (type)) (lam a (type) (fun [self a] a))) a)) a]
                                    [ (unwrap s) s ]
                                  )
                                )
                                (fun a b)
                              }
                              (iwrap
                                (lam self (fun (type) (type)) (lam a (type) (fun [self a] a)))
                                (fun a b)
                                (lam
                                  s
                                  [(lam a (type) (ifix (lam self (fun (type) (type)) (lam a (type) (fun [self a] a))) a)) (fun a b)]
                                  (lam
                                    x
                                    a
                                    [
                                      [
                                        f
                                        [
                                          {
                                            (abs
                                              a
                                              (type)
                                              (lam
                                                s
                                                [(lam a (type) (ifix (lam self (fun (type) (type)) (lam a (type) (fun [self a] a))) a)) a]
                                                [ (unwrap s) s ]
                                              )
                                            )
                                            (fun a b)
                                          }
                                          s
                                        ]
                                      ]
                                      x
                                    ]
                                  )
                                )
                              )
                            ]
                          )
                        )
                      )
                      (all a (type) (fun a a))
                    }
                    (all a (type) (all b (type) (fun (fun a (fun b (fun r r))) (fun [[(lam a (type) (lam b (type) (ifix (lam rec (fun (fun (fun (type) (fun (type) (type))) (type)) (type)) (lam spine (fun (fun (type) (fun (type) (type))) (type)) [spine [(lam interlist (fun (type) (fun (type) (type))) (lam a (type) (lam b (type) (all r (type) (fun r (fun (fun a (fun b (fun [[interlist b] a] r))) r)))))) (lam a (type) (lam b (type) [rec (lam dat (fun (type) (fun (type) (type))) [[dat a] b])]))]])) (lam dat (fun (type) (fun (type) (type))) [[dat a] b])))) a] b] r))))
                  }
                  (lam
                    rec
                    (fun (all a (type) (fun a a)) (all a (type) (all b (type) (fun (fun a (fun b (fun r r))) (fun [[(lam a (type) (lam b (type) (ifix (lam rec (fun (fun (fun (type) (fun (type) (type))) (type)) (type)) (lam spine (fun (fun (type) (fun (type) (type))) (type)) [spine [(lam interlist (fun (type) (fun (type) (type))) (lam a (type) (lam b (type) (all r (type) (fun r (fun (fun a (fun b (fun [[interlist b] a] r))) r)))))) (lam a (type) (lam b (type) [rec (lam dat (fun (type) (fun (type) (type))) [[dat a] b])]))]])) (lam dat (fun (type) (fun (type) (type))) [[dat a] b])))) a] b] r)))))
                    (lam
                      u
                      (all a (type) (fun a a))
                      (abs
                        a
                        (type)
                        (abs
                          b
                          (type)
                          (lam
                            f'
                            (fun a (fun b (fun r r)))
                            (lam
                              xs
                              [[(lam a (type) (lam b (type) (ifix (lam rec (fun (fun (fun (type) (fun (type) (type))) (type)) (type)) (lam spine (fun (fun (type) (fun (type) (type))) (type)) [spine [(lam interlist (fun (type) (fun (type) (type))) (lam a (type) (lam b (type) (all r (type) (fun r (fun (fun a (fun b (fun [[interlist b] a] r))) r)))))) (lam a (type) (lam b (type) [rec (lam dat (fun (type) (fun (type) (type))) [[dat a] b])]))]])) (lam dat (fun (type) (fun (type) (type))) [[dat a] b])))) a] b]
                              [
                                [
                                  { (unwrap xs) r } z
                                ]
                                (lam
                                  x
                                  a
                                  (lam
                                    y
                                    b
                                    (lam
                                      xs'
                                      [[(lam a (type) (lam b (type) (ifix (lam rec (fun (fun (fun (type) (fun (type) (type))) (type)) (type)) (lam spine (fun (fun (type) (fun (type) (type))) (type)) [spine [(lam interlist (fun (type) (fun (type) (type))) (lam a (type) (lam b (type) (all r (type) (fun r (fun (fun a (fun b (fun [[interlist b] a] r))) r)))))) (lam a (type) (lam b (type) [rec (lam dat (fun (type) (fun (type) (type))) [[dat a] b])]))]])) (lam dat (fun (type) (fun (type) (type))) [[dat a] b])))) b] a]
                                      [
                                        [ [ f' x ] y ]
                                        [
                                          [
                                            {
                                              {
                                                [
                                                  rec (abs a (type) (lam x a x))
                                                ]
                                                b
                                              }
                                              a
                                            }
                                            (lam
                                              y' b (lam x' a [ [ f' x' ] y' ])
                                            )
                                          ]
                                          xs'
                                        ]
                                      ]
                                    )
                                  )
                                )
                              ]
                            )
                          )
                        )
                      )
                    )
                  )
                ]
                (abs a (type) (lam x a x))
              ]
              a0
            }
            b0
          }
        )
      )
    )
  )
)) , ({ ({ ({ })
| ({ })
})
| ({ (cpu 10)
| (mem 10)
})
}))