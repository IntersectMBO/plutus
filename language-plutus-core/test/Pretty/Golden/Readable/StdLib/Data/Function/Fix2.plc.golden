/\(a :: *) -> /\(b :: *) -> /\(a :: *) -> /\(b :: *) -> \(f : all (Q :: *). ((a -> b) -> (a -> b) -> Q) -> (a -> b) -> (a -> b) -> Q) -> (/\(F :: * -> *) -> \(by : (all (Q :: *). F Q -> Q) -> (all (Q :: *). F Q -> Q)) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(rec :: ((* -> *) -> *) -> *) -> \(spine :: (* -> *) -> *) -> spine ((\(self :: * -> *) -> \(a :: *) -> self a -> a) (\(a :: *) -> rec (\(dat :: * -> *) -> dat a)))) (\(dat :: * -> *) -> dat a)) a) -> unwrap s s) {a -> b} (iwrap (\(rec :: ((* -> *) -> *) -> *) -> \(spine :: (* -> *) -> *) -> spine ((\(self :: * -> *) -> \(a :: *) -> self a -> a) (\(a :: *) -> rec (\(dat :: * -> *) -> dat a)))) (\(dat :: * -> *) -> dat (a -> b)) (\(s : (\(a :: *) -> ifix (\(rec :: ((* -> *) -> *) -> *) -> \(spine :: (* -> *) -> *) -> spine ((\(self :: * -> *) -> \(a :: *) -> self a -> a) (\(a :: *) -> rec (\(dat :: * -> *) -> dat a)))) (\(dat :: * -> *) -> dat a)) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> ifix (\(rec :: ((* -> *) -> *) -> *) -> \(spine :: (* -> *) -> *) -> spine ((\(self :: * -> *) -> \(a :: *) -> self a -> a) (\(a :: *) -> rec (\(dat :: * -> *) -> dat a)))) (\(dat :: * -> *) -> dat a)) a) -> unwrap s s) {a -> b} s) x))) {all (Q :: *). F Q -> F Q} {all (Q :: *). F Q -> Q} (\(rec : (all (Q :: *). F Q -> F Q) -> (all (Q :: *). F Q -> Q)) -> \(h : all (Q :: *). F Q -> F Q) -> /\(R :: *) -> \(fr : F R) -> by (/\(Q :: *) -> \(fq : F Q) -> rec h {Q} (h {Q} fq)) {R} fr)) {\(X :: *) -> (a -> b) -> (a -> b) -> X} (\(k : all (Q :: *). ((a -> b) -> (a -> b) -> Q) -> Q) -> /\(S :: *) -> \(h : (a -> b) -> (a -> b) -> S) -> h (\(x : a) -> k {b} (\(f_0 : a -> b) -> \(f_1 : a -> b) -> f_0 x)) (\(x : a) -> k {b} (\(f_0 : a -> b) -> \(f_1 : a -> b) -> f_1 x))) f