\(n : fix nat. all (r :: *). r -> (nat -> r) -> r) -> \(k : fix nat. all (r :: *). r -> (nat -> r) -> r) -> (/\(r :: *) -> \(f : r -> r) -> \(z : r) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> fix self. self -> a) a) -> unwrap s s) {a -> b} (wrap self ((\(a :: *) -> self -> a) (a -> b)) (\(s : (\(a :: *) -> fix self. self -> a) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> fix self. self -> a) a) -> unwrap s s) {a -> b} s) x))) {fix nat. all (r :: *). r -> (nat -> r) -> r} {r} (\(rec : (fix nat. all (r :: *). r -> (nat -> r) -> r) -> r) -> \(n : fix nat. all (r :: *). r -> (nat -> r) -> r) -> unwrap n {r} z (\(n' : fix nat. all (r :: *). r -> (nat -> r) -> r) -> f (rec n')))) {(fix nat. all (r :: *). r -> (nat -> r) -> r) -> (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) (fix nat. all (r :: *). r -> (nat -> r) -> r)} (\(rec : (fix nat. all (r :: *). r -> (nat -> r) -> r) -> (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) (fix nat. all (r :: *). r -> (nat -> r) -> r)) -> \(n' : fix nat. all (r :: *). r -> (nat -> r) -> r) -> (/\(a :: *) -> \(x : a) -> \(xs : (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) a) -> wrap list ((\(a :: *) -> all (r :: *). r -> (a -> list -> r) -> r) a) (/\(r :: *) -> \(z : r) -> \(f : a -> (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) a -> r) -> f x xs)) {fix nat. all (r :: *). r -> (nat -> r) -> r} n' (rec ((\(n : fix nat. all (r :: *). r -> (nat -> r) -> r) -> wrap nat (all (r :: *). r -> (nat -> r) -> r) (/\(r :: *) -> \(z : r) -> \(f : (fix nat. all (r :: *). r -> (nat -> r) -> r) -> r) -> f n)) n'))) (\(n' : fix nat. all (r :: *). r -> (nat -> r) -> r) -> (/\(a :: *) -> wrap list ((\(a :: *) -> all (r :: *). r -> (a -> list -> r) -> r) a) (/\(r :: *) -> \(z : r) -> \(f : a -> (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) a -> r) -> z)) {fix nat. all (r :: *). r -> (nat -> r) -> r}) k n