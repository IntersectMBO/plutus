/\(s :: size) -> \(ss : size s) -> (/\(a :: *) -> /\(r :: *) -> \(f : r -> a -> r) -> (/\(a :: *) -> /\(b :: *) -> \(f : (a -> b) -> a -> b) -> (/\(a :: *) -> \(s : (\(a :: *) -> fix self. self -> a) a) -> unwrap s s) {a -> b} (wrap self ((\(a :: *) -> self -> a) (a -> b)) (\(s : (\(a :: *) -> fix self. self -> a) (a -> b)) -> \(x : a) -> f ((/\(a :: *) -> \(s : (\(a :: *) -> fix self. self -> a) a) -> unwrap s s) {a -> b} s) x))) {r} {(\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) a -> r} (\(rec : r -> (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) a -> r) -> \(z : r) -> \(xs : (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) a) -> unwrap xs {r} z (\(x : a) -> \(xs' : (\(a :: *) -> fix list. all (r :: *). r -> (a -> list -> r) -> r) a) -> rec (f z x) xs'))) {integer s} {integer s} (addInteger {s}) (resizeInteger {1} {s} ss 1!0)