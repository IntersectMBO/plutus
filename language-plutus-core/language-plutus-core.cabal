cabal-version: 2.0
name: language-plutus-core
version: 0.1.0.0
license: BSD3
license-file: LICENSE
copyright: Copyright: (c) 2018 Input Output
maintainer: vanessa.mchale@iohk.io
author: Vanessa McHale
tested-with: ghc ==8.2.2 ghc ==8.4.3 ghc ==8.6.1
synopsis: Language library for Plutus Core
description:
    Pretty-printer, parser, and typechecker for Plutus Core.
category: Language, Plutus
build-type: Simple
extra-doc-files: README.md

source-repository head
    type: git
    location: https://github.com/input-output-hk/plutus

flag eventlog
    description:
        Pass `-eventlog` flag to GHC
    default: False
    manual: True

flag development
    description:
        Enable `-Werror`
    default: False
    manual: True

library
    exposed-modules:
        Language.PlutusCore
        Language.PlutusCore.Quote
        Language.PlutusCore.MkPlc
        Language.PlutusCore.TH
        Language.PlutusCore.Evaluation.CkMachine
        Language.PlutusCore.Evaluation.MachineException
        Language.PlutusCore.Evaluation.Result
        Language.PlutusCore.Constant
        Language.PlutusCore.Pretty
        Language.PlutusCore.View
        Language.PlutusCore.Subst
        Language.PlutusCore.Name
        Language.PlutusCore.StdLib.Data.Bool
        Language.PlutusCore.StdLib.Data.ChurchNat
        Language.PlutusCore.StdLib.Data.Function
        Language.PlutusCore.StdLib.Data.Integer
        Language.PlutusCore.StdLib.Data.List
        Language.PlutusCore.StdLib.Data.Nat
        Language.PlutusCore.StdLib.Data.Unit
        Language.PlutusCore.StdLib.Everything
        Language.PlutusCore.StdLib.Meta
        Language.PlutusCore.StdLib.Meta.Data.Tuple
        Language.PlutusCore.StdLib.Type
        Language.PlutusCore.Generators
        Language.PlutusCore.Generators.Interesting
        Language.PlutusCore.Generators.Test
        PlutusPrelude
        Common
        PlcTestUtils
    build-tools: alex -any, happy >=1.17.1
    hs-source-dirs: src prelude stdlib generators common
    other-modules:
        Language.PlutusCore.Type
        Language.PlutusCore.Lexer
        Language.PlutusCore.Lexer.Type
        Language.PlutusCore.Parser
        Language.PlutusCore.Constant.Apply
        Language.PlutusCore.Constant.DynamicType
        Language.PlutusCore.Constant.Make
        Language.PlutusCore.Constant.Typed
        Language.PlutusCore.Check.Normal
        Language.PlutusCore.Pretty.Classic
        Language.PlutusCore.Pretty.Plc
        Language.PlutusCore.Pretty.Readable
        Language.PlutusCore.Renamer
        Language.PlutusCore.Error
        Language.PlutusCore.TypeSynthesis
        Language.PlutusCore.Normalize
        Language.PlutusCore.CBOR
        Language.PlutusCore.Generators.Internal.Denotation
        Language.PlutusCore.Generators.Internal.Entity
        Language.PlutusCore.Generators.Internal.TypeEvalCheck
        Language.PlutusCore.Generators.Internal.TypedBuiltinGen
        Language.PlutusCore.Generators.Internal.Utils
        Data.Functor.Foldable.Monadic
        Data.Text.Prettyprint.Doc.Custom
    default-language: Haskell2010
    default-extensions: ScopedTypeVariables FlexibleContexts
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable
    other-extensions: DeriveAnyClass FlexibleInstances
                      MultiParamTypeClasses TypeFamilies OverloadedStrings
                      MonadComprehensions ConstrainedClassMethods TupleSections GADTs
                      RankNTypes TemplateHaskell QuasiQuotes TypeApplications
                      ExistentialQuantification
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
                 -Wnoncanonical-monoid-instances
    build-depends:
        base >=4.9 && <5,
        bytestring -any,
        containers -any,
        array -any,
        mtl -any,
        transformers -any,
        deepseq -any,
        recursion-schemes -any,
        text -any,
        prettyprinter >=1.1.0.1,
        lens -any,
        composition-prelude >=1.1.0.1,
        template-haskell -any,
        th-lift-instances -any,
        mmorph -any,
        cborg -any,
        serialise -any,
        safe-exceptions -any,
        dependent-sum -any,
        dependent-map -any,
        hedgehog -any,
        filepath -any,
        tasty -any,
        tasty-golden -any

    if (flag(development) && impl(ghc <8.4))
        ghc-options: -Werror

    if impl(ghc >=8.4)
        ghc-options: -Wmissing-export-lists

executable language-plutus-core-generate-evaluation-test
    main-is: Main.hs
    hs-source-dirs: generate-evaluation-test
    default-language: Haskell2010
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
    build-depends:
        base -any,
        language-plutus-core -any,
        text -any

    if (flag(development) && impl(ghc <8.4))
        ghc-options: -Werror

    if impl(ghc >=8.4)
        ghc-options: -Wmissing-export-lists

test-suite language-plutus-core-test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: test
    other-modules:
        Evaluation.CkMachine
        Evaluation.Constant.All
        Evaluation.Constant.Apply
        Evaluation.Constant.Success
        Evaluation.Constant.SuccessFailure
        Evaluation.Constant.Failure
        Evaluation.Constant.Resize
        Generators
        Pretty.Readable
        TypeSynthesis.Spec
        Quotation.Spec
    default-language: Haskell2010
    default-extensions: FlexibleContexts
    other-extensions: OverloadedStrings
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
    build-depends:
        base -any,
        language-plutus-core -any,
        tasty -any,
        hedgehog -any,
        tasty-hunit -any,
        tasty-hedgehog -any,
        transformers -any,
        bytestring -any,
        serialise -any,
        filepath -any,
        tasty-golden -any,
        text -any,
        prettyprinter -any,
        containers -any,
        mtl -any,
        mmorph -any

    if flag(eventlog)
        ghc-options: -eventlog

    if (flag(development) && impl(ghc <8.4))
        ghc-options: -Werror

    if impl(ghc >=8.4)
        ghc-options: -Wmissing-export-lists

benchmark language-plutus-core-bench
    type: exitcode-stdio-1.0
    main-is: Bench.hs
    hs-source-dirs: bench
    default-language: Haskell2010
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates -Wredundant-constraints -Widentities
                 -rtsopts
    build-depends:
        base -any,
        language-plutus-core -any,
        criterion -any,
        bytestring -any,
        serialise -any,
        text -any

    if flag(eventlog)
        ghc-options: -eventlog

    if flag(development)
        ghc-options: -Werror

    if impl(ghc >=8.4)
        ghc-options: -Wmissing-export-lists
