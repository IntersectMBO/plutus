cabal-version: 2.0
name: language-plutus-core
version: 0.1.0.0
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
maintainer: vanessa.mchale@iohk.io
author: Vanessa McHale
tested-with: ghc ==8.2.2 ghc ==8.4.3 ghc ==8.6.1
synopsis: Language library for Plutus Core
description:
    Pretty-printer, parser, and typechecker for Plutus Core.
category: Language, Plutus
build-type: Simple
extra-doc-files: README.md

source-repository head
    type: git
    location: https://github.com/input-output-hk/plutus

library
    exposed-modules:
        Language.PlutusCore
        Language.PlutusCore.Quote
        Language.PlutusCore.MkPlc
        Language.PlutusCore.Evaluation.Machine.Ck
        Language.PlutusCore.Evaluation.Machine.Cek
        Language.PlutusCore.Evaluation.Machine.ExMemory
        Language.PlutusCore.Evaluation.Machine.L
        Language.PlutusCore.Evaluation.Machine.Exception
        Language.PlutusCore.Evaluation.Result
        Language.PlutusCore.Check.Value
        Language.PlutusCore.Check.Normal
        Language.PlutusCore.CBOR
        Language.PlutusCore.Constant
        Language.PlutusCore.Constant.Dynamic
        Language.PlutusCore.Rename.Internal
        Language.PlutusCore.Rename.Monad
        Language.PlutusCore.Rename
        Language.PlutusCore.Normalize
        Language.PlutusCore.Normalize.Internal
        Language.PlutusCore.Pretty
        Language.PlutusCore.View
        Language.PlutusCore.Subst
        Language.PlutusCore.Name
        Language.PlutusCore.Core
        Language.PlutusCore.DeBruijn
        Language.PlutusCore.Check.Uniques
        Language.PlutusCore.FsTree
        Language.PlutusCore.StdLib.Data.Bool
        Language.PlutusCore.StdLib.Data.ChurchNat
        Language.PlutusCore.StdLib.Data.Function
        Language.PlutusCore.StdLib.Data.Integer
        Language.PlutusCore.StdLib.Data.List
        Language.PlutusCore.StdLib.Data.Nat
        Language.PlutusCore.StdLib.Data.Sum
        Language.PlutusCore.StdLib.Data.Unit
        Language.PlutusCore.StdLib.Everything
        Language.PlutusCore.StdLib.Meta
        Language.PlutusCore.StdLib.Meta.Data.Tuple
        Language.PlutusCore.StdLib.Meta.Data.Function
        Language.PlutusCore.StdLib.Type
        Language.PlutusCore.Examples.Everything
        Language.PlutusCore.Generators
        Language.PlutusCore.Generators.AST
        Language.PlutusCore.Generators.Interesting
        Language.PlutusCore.Generators.Test
        Language.PlutusCore.Lexer
        Language.PlutusCore.Parser
        PlutusPrelude
        Control.Monad.Trans.Inner
        Common
        Data.ByteString.Lazy.Hash
        PlcTestUtils
        Crypto
    build-tool-depends: alex:alex -any, happy:happy >=1.17.1
    hs-source-dirs: src prelude stdlib examples generators common
    other-modules:
        Language.PlutusCore.Pretty.ConfigName
        Language.PlutusCore.Core.Type
        Language.PlutusCore.Core.Plated
        Language.PlutusCore.Core.Instance.Eq
        Language.PlutusCore.Core.Instance.Pretty.Classic
        Language.PlutusCore.Core.Instance.Pretty.Common
        Language.PlutusCore.Core.Instance.Pretty.Default
        Language.PlutusCore.Core.Instance.Pretty.Plc
        Language.PlutusCore.Core.Instance.Pretty.Readable
        Language.PlutusCore.Core.Instance.Pretty
        Language.PlutusCore.Core.Instance.Recursive
        Language.PlutusCore.Core.Instance
        Language.PlutusCore.Constant.Apply
        Language.PlutusCore.Constant.Dynamic.BuiltinName
        Language.PlutusCore.Constant.Dynamic.Call
        Language.PlutusCore.Constant.Dynamic.Emit
        Language.PlutusCore.Constant.Dynamic.Instances
        Language.PlutusCore.Constant.Dynamic.OnChain
        Language.PlutusCore.Constant.Dynamic.OffChain
        Language.PlutusCore.Constant.Function
        Language.PlutusCore.Constant.Make
        Language.PlutusCore.Constant.Name
        Language.PlutusCore.Constant.Typed
        Language.PlutusCore.Lexer.Type
        Language.PlutusCore.Eq
        Language.PlutusCore.Mark
        Language.PlutusCore.Pretty.Classic
        Language.PlutusCore.Pretty.ConfigName
        Language.PlutusCore.Pretty.Default
        Language.PlutusCore.Pretty.Plc
        Language.PlutusCore.Pretty.Readable
        Language.PlutusCore.Pretty.Utils
        Language.PlutusCore.Error
        Language.PlutusCore.Size
        Language.PlutusCore.TypeCheck.Internal
        Language.PlutusCore.TypeCheck
        Language.PlutusCore.Analysis.Definitions
        Language.PlutusCore.Examples.Data.InterList
        Language.PlutusCore.Examples.Data.TreeForest
        Language.PlutusCore.Generators.Internal.Denotation
        Language.PlutusCore.Generators.Internal.Dependent
        Language.PlutusCore.Generators.Internal.Entity
        Language.PlutusCore.Generators.Internal.TypeEvalCheck
        Language.PlutusCore.Generators.Internal.TypedBuiltinGen
        Language.PlutusCore.Generators.Internal.Utils
        Data.Functor.Foldable.Monadic
        Data.Text.Prettyprint.Doc.Custom
        Language.PlutusCore.Evaluation.Machine.GenericSemigroup
    default-language: Haskell2010
    default-extensions: ScopedTypeVariables FlexibleContexts
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable DerivingStrategies DerivingVia
    other-extensions: DeriveAnyClass FlexibleInstances
                      MultiParamTypeClasses TypeFamilies OverloadedStrings
                      MonadComprehensions ConstrainedClassMethods TupleSections GADTs
                      RankNTypes TemplateHaskell QuasiQuotes 
                      ExistentialQuantification
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
                 -Wnoncanonical-monoid-instances
    build-depends:
        base >=4.9 && <5,
        bytestring -any,
        cryptonite -any,
        containers -any,
        bimap -any,
        array -any,
        mtl -any,
        transformers -any,
        deepseq -any,
        recursion-schemes -any,
        text -any,
        prettyprinter >=1.1.0.1,
        lens -any,
        composition-prelude >=1.1.0.1,
        template-haskell -any,
        th-lift-instances -any,
        memory -any,
        mmorph -any,
        cborg -any,
        serialise -any,
        safe-exceptions -any,
        dependent-sum -any,
        dependent-map -any,
        hedgehog <1.0,
        filepath -any,
        tasty -any,
        tasty-golden -any,
        cryptonite,
        cardano-crypto,
        tuple,
        monoidal-containers,
        semigroups,
        hashable

executable language-plutus-core-generate-evaluation-test
    main-is: Main.hs
    hs-source-dirs: generate-evaluation-test
    default-language: Haskell2010
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
    build-depends:
        base -any,
        language-plutus-core -any,
        text -any,
        hedgehog -any

test-suite language-plutus-core-test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: test
    other-modules:
        Evaluation.Constant.Apply
        Evaluation.Constant.Success
        Evaluation.Constant
        Evaluation.DynamicBuiltins.Common
        Evaluation.DynamicBuiltins.Definition
        Evaluation.DynamicBuiltins.Logging
        Evaluation.DynamicBuiltins.MakeRead
        Evaluation.DynamicBuiltins
        Evaluation.Golden
        Evaluation.Machines
        Evaluation.Spec
        Normalization.Check
        Normalization.Type
        Pretty.Readable
        Check.Spec
        TypeSynthesis.Spec
    default-language: Haskell2010
    default-extensions: FlexibleContexts
    other-extensions: OverloadedStrings
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
    build-depends:
        base -any,
        language-plutus-core -any,
        tasty -any,
        hedgehog -any,
        tasty-hunit -any,
        tasty-hedgehog -any,
        transformers -any,
        bytestring -any,
        serialise -any,
        filepath -any,
        tasty-golden -any,
        text -any,
        prettyprinter -any,
        containers -any,
        mtl -any,
        mmorph -any,
        tuple -any

benchmark language-plutus-core-bench
    type: exitcode-stdio-1.0
    main-is: Bench.hs
    hs-source-dirs: bench
    default-language: Haskell2010
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates -Wredundant-constraints -Widentities
                 -rtsopts
    build-depends:
        base -any,
        language-plutus-core -any,
        criterion -any,
        bytestring -any,
        serialise -any,
        containers

benchmark language-plutus-core-weigh
    type: exitcode-stdio-1.0
    main-is: Bench.hs
    hs-source-dirs: weigh
    default-language: Haskell2010
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates -Wredundant-constraints -Widentities
                 -rtsopts
    build-depends:
        base -any,
        language-plutus-core -any,
        weigh -any,
        bytestring -any,
        serialise -any,
        containers
