/\a r ->
  \(f : r -> a -> r) ->
    (/\a b ->
       \(f : (a -> b) -> a -> b) ->
         (/\a ->
            \(s : (\a -> ifix (\(self :: * -> *) a -> self a -> a) a) a) ->
              unwrap s s)
           {a -> b}
           (iwrap
              (\(self :: * -> *) a -> self a -> a)
              (a -> b)
              (\(s :
                   (\a -> ifix (\(self :: * -> *) a -> self a -> a) a)
                     (a -> b)) ->
                 f
                   (\(x : a) ->
                      (/\a ->
                         \(s :
                             (\a -> ifix (\(self :: * -> *) a -> self a -> a) a)
                               a) ->
                           unwrap s s)
                        {a -> b}
                        s
                        x))))
      {r}
      {list a -> r}
      (\(rec : r -> list a -> r) (z : r) (xs : list a) ->
         (/\a ->
            \(xs : list a) ->
              /\r -> \(z : r) (f : a -> list a -> r) -> caseList {a} {r} z f xs)
           {a}
           xs
           {r}
           z
           (\(x : a) (xs' : list a) -> rec (f z x) xs'))