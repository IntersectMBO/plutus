\(d : data) ->
  /\r ->
    \(fConstr : integer -> list data -> r)
     (fMap : list (pair data data) -> r)
     (fList : list data -> r)
     (fI : integer -> r)
     (fB : bytestring -> r) ->
      chooseData
        {unit -> r}
        d
        (\(u : unit) ->
           (/\a b c ->
              \(f : a -> b -> c) (p : pair a b) ->
                f (fstPair {a} {b} p) (sndPair {a} {b} p))
             {integer}
             {list data}
             {r}
             fConstr
             (unConstrData d))
        (\(u : unit) -> fMap (unMapData d))
        (\(u : unit) -> fList (unListData d))
        (\(u : unit) -> fI (unIData d))
        (\(u : unit) -> fB (unBData d))
        ()