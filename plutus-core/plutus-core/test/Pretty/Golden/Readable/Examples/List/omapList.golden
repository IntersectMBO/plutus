/\a ->
  \(f : a -> a) ->
    (/\a b ->
       \(f : (a -> b) -> a -> b) -> fix (rec : a -> b). \(x : a) -> f rec x)
      {list a}
      {list a}
      (\(rec : list a -> list a) (xs : list a) ->
         (/\a ->
            \(xs : list a) ->
              /\r ->
                \(z : r) (f : a -> list a -> r) ->
                  (Left caseList) {a} {r} z f xs)
           {a}
           xs
           {list a}
           xs
           (\(x : a) (xs' : list a) -> (Left mkCons) {a} (f x) (rec xs')))