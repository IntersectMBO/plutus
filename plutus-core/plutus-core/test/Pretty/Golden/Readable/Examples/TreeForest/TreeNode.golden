/\a ->
  \(x : a)
   (fr :
      ifix
        (\(rec :: ((* -> (* -> * -> *) -> *) -> *) -> *)
          (spine :: (* -> (* -> * -> *) -> *) -> *) ->
           spine
             (\a (tag :: * -> * -> *) ->
                all r.
                  tag
                    ((a ->
                      rec
                        (\(dat :: * -> (* -> * -> *) -> *) ->
                           dat a (\t f -> f)) ->
                      r) ->
                     r)
                    (r ->
                     (rec
                        (\(dat :: * -> (* -> * -> *) -> *) ->
                           dat a (\t f -> t)) ->
                      rec
                        (\(dat :: * -> (* -> * -> *) -> *) ->
                           dat a (\t f -> f)) ->
                      r) ->
                     r)))
        (\(dat :: * -> (* -> * -> *) -> *) -> dat a (\t f -> f))) ->
    iwrap
      (\(rec :: ((* -> (* -> * -> *) -> *) -> *) -> *)
        (spine :: (* -> (* -> * -> *) -> *) -> *) ->
         spine
           (\a (tag :: * -> * -> *) ->
              all r.
                tag
                  ((a ->
                    rec
                      (\(dat :: * -> (* -> * -> *) -> *) ->
                         dat a (\t f -> f)) ->
                    r) ->
                   r)
                  (r ->
                   (rec
                      (\(dat :: * -> (* -> * -> *) -> *) ->
                         dat a (\t f -> t)) ->
                    rec
                      (\(dat :: * -> (* -> * -> *) -> *) ->
                         dat a (\t f -> f)) ->
                    r) ->
                   r)))
      (\(dat :: * -> (* -> * -> *) -> *) -> dat a (\t f -> t))
      (/\r ->
         \(f :
             a ->
             ifix
               (\(rec :: ((* -> (* -> * -> *) -> *) -> *) -> *)
                 (spine :: (* -> (* -> * -> *) -> *) -> *) ->
                  spine
                    (\a (tag :: * -> * -> *) ->
                       all r.
                         tag
                           ((a ->
                             rec
                               (\(dat :: * -> (* -> * -> *) -> *) ->
                                  dat a (\t f -> f)) ->
                             r) ->
                            r)
                           (r ->
                            (rec
                               (\(dat :: * -> (* -> * -> *) -> *) ->
                                  dat a (\t f -> t)) ->
                             rec
                               (\(dat :: * -> (* -> * -> *) -> *) ->
                                  dat a (\t f -> f)) ->
                             r) ->
                            r)))
               (\(dat :: * -> (* -> * -> *) -> *) -> dat a (\t f -> f)) ->
             r) ->
           f x fr)