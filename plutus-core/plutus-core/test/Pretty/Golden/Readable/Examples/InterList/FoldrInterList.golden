/\a0 b0 r ->
  \(f : a0 -> b0 -> r -> r) (z : r) ->
    (/\a b ->
       \(f : (a -> b) -> a -> b) -> fix (rec : a -> b). \(x : a) -> f rec x)
      {unit}
      {all a b.
         (a -> b -> r -> r) ->
         (\a b ->
            ifix
              (\(rec :: ((* -> * -> *) -> *) -> *)
                (spine :: (* -> * -> *) -> *) ->
                 spine
                   ((\(interlist :: * -> * -> *) a b ->
                       all r. r -> (a -> b -> interlist b a -> r) -> r)
                      (\a b -> rec (\(dat :: * -> * -> *) -> dat a b))))
              (\(dat :: * -> * -> *) -> dat a b))
           a
           b ->
         r}
      (\(rec :
           unit ->
           (all a b.
              (a -> b -> r -> r) ->
              (\a b ->
                 ifix
                   (\(rec :: ((* -> * -> *) -> *) -> *)
                     (spine :: (* -> * -> *) -> *) ->
                      spine
                        ((\(interlist :: * -> * -> *) a b ->
                            all r. r -> (a -> b -> interlist b a -> r) -> r)
                           (\a b -> rec (\(dat :: * -> * -> *) -> dat a b))))
                   (\(dat :: * -> * -> *) -> dat a b))
                a
                b ->
              r))
        (u : unit) ->
         /\a b ->
           \(f' : a -> b -> r -> r)
            (xs :
               (\a b ->
                  ifix
                    (\(rec :: ((* -> * -> *) -> *) -> *)
                      (spine :: (* -> * -> *) -> *) ->
                       spine
                         ((\(interlist :: * -> * -> *) a b ->
                             all r. r -> (a -> b -> interlist b a -> r) -> r)
                            (\a b -> rec (\(dat :: * -> * -> *) -> dat a b))))
                    (\(dat :: * -> * -> *) -> dat a b))
                 a
                 b) ->
             unwrap xs
               {r}
               z
               (\(x : a)
                 (y : b)
                 (xs' :
                    (\a b ->
                       ifix
                         (\(rec :: ((* -> * -> *) -> *) -> *)
                           (spine :: (* -> * -> *) -> *) ->
                            spine
                              ((\(interlist :: * -> * -> *) a b ->
                                  all r.
                                    r -> (a -> b -> interlist b a -> r) -> r)
                                 (\a b ->
                                    rec (\(dat :: * -> * -> *) -> dat a b))))
                         (\(dat :: * -> * -> *) -> dat a b))
                      b
                      a) ->
                  f' x y (rec () {b} {a} (\(y' : b) (x' : a) -> f' x' y') xs')))
      ()
      {a0}
      {b0}