program
  1.1.0
  ((/\(List :: * -> *) ->
      \(Nil : all a. List a)
       (Cons : all a. a -> List a -> List a)
       (match_List :
          all a.
            List a ->
            (all out_List.
               out_List -> (a -> List a -> out_List) -> out_List)) ->
        /\a -> \(x : a) -> x)
     {\a -> ifix (\(List :: * -> *) a -> sop [] [a, (List a)]) a}
     (/\a ->
        iwrap
          (\(List :: * -> *) a -> sop [] [a, (List a)])
          a
          (constr
             (sop
                []
                [ a
                , ((\a -> ifix (\(List :: * -> *) a -> sop [] [a, (List a)]) a)
                     a) ])
             0
             []))
     (/\a ->
        \(arg_0 : a)
         (arg_1 :
            (\a -> ifix (\(List :: * -> *) a -> sop [] [a, (List a)]) a) a) ->
          iwrap
            (\(List :: * -> *) a -> sop [] [a, (List a)])
            a
            (constr
               (sop
                  []
                  [ a
                  , ((\a ->
                        ifix (\(List :: * -> *) a -> sop [] [a, (List a)]) a)
                       a) ])
               1
               [arg_0, arg_1]))
     (/\a ->
        \(x : (\a -> ifix (\(List :: * -> *) a -> sop [] [a, (List a)]) a) a) ->
          /\out_List ->
            \(case_Nil : out_List)
             (case_Cons :
                a ->
                (\a -> ifix (\(List :: * -> *) a -> sop [] [a, (List a)]) a)
                  a ->
                out_List) ->
              case out_List (unwrap x) [case_Nil, case_Cons]))