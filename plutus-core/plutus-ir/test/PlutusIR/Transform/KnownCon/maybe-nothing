(let
  (nonrec)
  (datatypebind
    (datatype
      (tyvardecl Maybe (fun (type) (type)))
      (tyvardecl a (type))
      Maybe_match
      (vardecl Just (fun a [ Maybe a ])) (vardecl Nothing [ Maybe a ])
    )
  )
  {
    [
      [
        {
          [ { Maybe_match (con integer) } { Nothing (con integer) } ]
          (all dead (type) (con integer))
        }
        (lam
          a
          (con integer)
          (abs dead (type) [ [ (builtin addInteger) (con integer 2) ] a ])
        )
      ]
      (abs dead (type) (con integer 42))
    ]
    (all dead (type) dead)
  }
)
