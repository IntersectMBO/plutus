(let
  (nonrec)
  (datatypebind
    (datatype
      (tyvardecl Tuple2 (fun (type) (fun (type) (type))))
      (tyvardecl a (type)) (tyvardecl b (type))
      Tuple2_match
      (vardecl Tuple2 (fun a (fun b [ [ Tuple2 a ] b ])))
    )
  )
  {
    [
      {
        [
          { { Tuple2_match (con integer) } (con integer) }
          [
            [ { { Tuple2 (con integer) } (con integer) } (con integer 1) ]
            (con integer 2)
          ]
        ]
        (all dead (type) (con integer))
      }
      (lam
        a
        (con integer)
        (lam b (con integer) (abs dead (type) [ [ (builtin addInteger) a ] b ]))
      )
    ]
    (all dead (type) dead)
  }
)
