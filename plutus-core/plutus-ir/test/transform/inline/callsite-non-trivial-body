{-
let f :: (Integer -> Integer) -> (Integer -> Integer -> Integer) -> Integer -> Integer
    f unused a b = a b (1 + 2 + 3 + 4)
 in f (\unused -> 5) (+) 6 + f (\unused -> 7 + 8 + 9 + 10) (+) 11

Both occurrences of `f` are fully applied, but only the second occurrence should be
inlined, because inlining the first occurrence increases the program size:
size ((+) 6 (1 + 2 + 3 + 4)) > size (f (\unused -> 5) (+) 6)
-}

(let
  (nonrec)
  (termbind
    (strict)
    (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
    (lam x (con integer) (lam y (con integer) [ [ (builtin addInteger) x ] y ]))
  )
  (termbind
    (strict)
    (vardecl
      f
      (fun
        (fun (con integer) (con integer))
        (fun
          (fun (con integer) (fun (con integer) (con integer)))
          (fun (con integer) (con integer))
        )
      )
    )
    (lam
      unused
      (fun (con integer) (con integer))
      (lam
        a
        (fun (con integer) (fun (con integer) (con integer)))
        (lam
          b
          (con integer)
          [
            [ a b ]
            [
              [
                addInteger
                [
                  [
                    addInteger
                    [ [ addInteger (con integer 1) ] (con integer 2) ]
                  ]
                  (con integer 3)
                ]
              ]
              (con integer 4)
            ]
          ]
        )
      )
    )
  )
  [
    [
      addInteger
      [
        [ [ f (lam unused (con integer) (con integer 5)) ] addInteger ]
        (con integer 6)
      ]
    ]
    [
      [
        [
          f
          (lam
            unused
            (con integer)
            [
              [
                addInteger
                [
                  [
                    addInteger
                    [ [ addInteger (con integer 7) ] (con integer 8) ]
                  ]
                  (con integer 9)
                ]
              ]
              (con integer 10)
            ]
          )
        ]
        addInteger
      ]
      (con integer 11)
    ]
  ]
)
