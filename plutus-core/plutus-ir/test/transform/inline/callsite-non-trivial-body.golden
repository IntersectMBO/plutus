(let
  (nonrec)
  (termbind
    (strict)
    (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
    (lam x (con integer) (lam y (con integer) [ [ (builtin addInteger) x ] y ]))
  )
  (termbind
    (strict)
    (vardecl
      f
      (fun
        (fun (con integer) (con integer))
        (fun
          (fun (con integer) (fun (con integer) (con integer)))
          (fun (con integer) (con integer))
        )
      )
    )
    (lam
      unused
      (fun (con integer) (con integer))
      (lam
        a
        (fun (con integer) (fun (con integer) (con integer)))
        (lam
          b
          (con integer)
          [
            [ a b ]
            [
              [
                addInteger
                [
                  [
                    addInteger
                    [ [ (builtin addInteger) (con integer 1) ] (con integer 2) ]
                  ]
                  (con integer 3)
                ]
              ]
              (con integer 4)
            ]
          ]
        )
      )
    )
  )
  [
    [
      addInteger
      [
        [ [ f (lam unused (con integer) (con integer 5)) ] addInteger ]
        (con integer 6)
      ]
    ]
    [
      [ addInteger (con integer 11) ]
      [
        [
          addInteger
          [
            [
              addInteger
              [ [ (builtin addInteger) (con integer 1) ] (con integer 2) ]
            ]
            (con integer 3)
          ]
        ]
        (con integer 4)
      ]
    ]
  ]
)