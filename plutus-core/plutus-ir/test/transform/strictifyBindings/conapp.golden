(let
  (rec)
  (datatypebind
    (datatype
      (tyvardecl List (fun (type) (type)))
      (tyvardecl a (type))
      match_List
      (vardecl Nil [ List a ])
      (vardecl Cons (fun a (fun [ List a ] [ List a ])))
    )
  )
  (let
    (nonrec)
    (termbind
      (strict)
      (vardecl x [ List (con integer) ])
      [ [ { Cons (con integer) } (con integer 1) ] { Nil (con integer) } ]
    )
    x
  )
)