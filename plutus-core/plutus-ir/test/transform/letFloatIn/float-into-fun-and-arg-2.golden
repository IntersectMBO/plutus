[
  (let
    (nonrec)
    (termbind
      (strict)
      (vardecl addInteger (fun (con integer) (fun (con integer) (con integer))))
      (let
        (nonrec)
        (termbind
          (strict)
          (vardecl
            addInteger (fun (con integer) (fun (con integer) (con integer)))
          )
          (builtin addInteger)
        )
        (lam x (con integer) (lam y (con integer) [ [ addInteger x ] y ]))
      )
    )
    [
      addInteger
      [
        (let
          (nonrec)
          (termbind
            (strict)
            (vardecl f (fun (con integer) (con integer)))
            (lam y (con integer) [ [ addInteger y ] (con integer 3) ])
          )
          f
        )
        (let
          (nonrec)
          (termbind
            (nonstrict)
            (vardecl x (con integer))
            [ [ addInteger (con integer 1) ] (con integer 2) ]
          )
          x
        )
      ]
    ]
  )
  (con integer 1)
]