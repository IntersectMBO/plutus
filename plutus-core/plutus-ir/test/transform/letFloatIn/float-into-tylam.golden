(abs
  a
  (type)
  (lam
    a
    a
    [
      [
        {
          {
            (let
              (nonrec)
              (datatypebind
                (datatype
                  (tyvardecl Tuple2 (fun (type) (fun (type) (type))))
                  (tyvardecl a (type)) (tyvardecl b (type))
                  Tuple2_match
                  (vardecl Tuple2 (fun a (fun b [ [ Tuple2 a ] b ])))
                )
              )
              Tuple2
            )
            a
          }
          (con integer)
        }
        a
      ]
      (let
        (nonrec)
        (termbind
          (nonstrict)
          (vardecl y (con integer))
          [ [ (builtin addInteger) (con integer 1) ] (con integer 2) ]
        )
        [ [ (builtin addInteger) y ] y ]
      )
    ]
  )
)