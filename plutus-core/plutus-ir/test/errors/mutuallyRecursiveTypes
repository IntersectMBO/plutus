(let
  (nonrec)
  (typebind (tyvardecl unit (type)) (all a (type) (fun a a)))
(let
  (rec)
  (datatypebind
    (datatype
      (tyvardecl Tree (fun (type) (type)))
      (tyvardecl a (type))
      match_Tree
      (vardecl Node (fun a (fun [Forest a] [Tree a])))
    )
  )
  (datatypebind
    (datatype
      (tyvardecl Forest (fun (type) (type)))
      (tyvardecl a (type))
      match_Forest
      (vardecl Nil [Forest a])
      (vardecl Cons (fun [Tree a] (fun [Forest a] [Forest a])))
    )
  )
  [ { Node unit } (error unit) { Nil unit } ]
)
)
