(lam
  x
  (con integer)
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Maybe (fun (type) (type)))
        (tyvardecl a (type))
        match_Maybe
        (vardecl Nothing [Maybe a]) (vardecl Just (fun a [Maybe a]))
      )
    )
    (termbind
      (strict)
      (vardecl j (con integer))
      [ [ (builtin addInteger) (con integer 3) ] x ]
    )
    [ { Just (all a (type) (fun a a)) } (abs a (type) (lam x a x)) ]
  )
)