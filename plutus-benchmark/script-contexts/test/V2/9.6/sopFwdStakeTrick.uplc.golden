(program
   1.1.0
   ((\`$fUnsafeFromDataBuiltinData_$cunsafeFromBuiltinData` ->
       (\`$fEqStakingCredential_$c==`
         obsScriptCred
         ctx ->
          (\`$fUnsafeFromDataCredential_$cunsafeFromBuiltinData` ->
             (\`$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData` ->
                case
                  (case
                     ctx
                     [ (\ds
                         ds ->
                          (\`$fUnsafeFromDataTxOutRef_$cunsafeFromBuiltinData` ->
                             (\`$fUnsafeFromDataDCert_$cunsafeFromBuiltinData` ->
                                (\`$fUnsafeFromDataScriptContext_$cunsafeFromBuiltinData` ->
                                   constr 0
                                     [ (case
                                          ds
                                          [ (\ds
                                              ds
                                              ds
                                              ds
                                              ds
                                              ds
                                              ds
                                              ds
                                              ds
                                              ds
                                              ds
                                              ds ->
                                               (\`$fUnsafeFromDataMap_$cunsafeFromBuiltinData` ->
                                                  (\cse ->
                                                     (\`$fUnsafeFromDataList_$cunsafeFromBuiltinData` ->
                                                        (\cse ->
                                                           (\`$fUnsafeFromDataTxOut_$cunsafeFromBuiltinData` ->
                                                              (\cse ->
                                                                 (\arg_0
                                                                   arg_1
                                                                   arg_2
                                                                   arg_3
                                                                   arg_4
                                                                   arg_5
                                                                   arg_6
                                                                   arg_7
                                                                   arg_8
                                                                   arg_9
                                                                   arg_10
                                                                   arg_11 ->
                                                                    constr 0
                                                                      [ arg_0
                                                                      , arg_1
                                                                      , arg_2
                                                                      , arg_3
                                                                      , arg_4
                                                                      , arg_5
                                                                      , arg_6
                                                                      , arg_7
                                                                      , arg_8
                                                                      , arg_9
                                                                      , arg_10
                                                                      , arg_11 ])
                                                                   (cse ds)
                                                                   (cse ds))
                                                                (`$fUnsafeFromDataList_$cunsafeFromBuiltinData`
                                                                   (\d ->
                                                                      case
                                                                        d
                                                                        [ (\ds
                                                                            ds ->
                                                                             constr 0
                                                                               [ (`$fUnsafeFromDataTxOutRef_$cunsafeFromBuiltinData`
                                                                                    ds)
                                                                               , (`$fUnsafeFromDataTxOut_$cunsafeFromBuiltinData`
                                                                                    ds) ]) ]))
                                                                (`$fUnsafeFromDataList_$cunsafeFromBuiltinData`
                                                                   `$fUnsafeFromDataTxOut_$cunsafeFromBuiltinData`
                                                                   ds))
                                                             (\eta ->
                                                                case
                                                                  eta
                                                                  [ (\ds
                                                                      ds
                                                                      ds
                                                                      ds ->
                                                                       constr 0
                                                                         [ (case
                                                                              ds
                                                                              [ (\ds
                                                                                  ds ->
                                                                                   constr 0
                                                                                     [ (`$fUnsafeFromDataCredential_$cunsafeFromBuiltinData`
                                                                                          ds)
                                                                                     , (case
                                                                                          ds
                                                                                          [ (\ds ->
                                                                                               constr 0
                                                                                                 [ (`$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData`
                                                                                                      ds) ])
                                                                                          , (constr 1
                                                                                               [  ]) ]) ]) ])
                                                                         , (cse
                                                                              ds)
                                                                         , (case
                                                                              ds
                                                                              [ (constr 0
                                                                                   [  ])
                                                                              , (\ds ->
                                                                                   constr 2
                                                                                     [ (unBData
                                                                                          ds) ])
                                                                              , (\ds ->
                                                                                   constr 1
                                                                                     [ ds ]) ])
                                                                         , (case
                                                                              ds
                                                                              [ (\ds ->
                                                                                   constr 0
                                                                                     [ (unBData
                                                                                          ds) ])
                                                                              , (constr 1
                                                                                   [  ]) ]) ]) ])
                                                             (cse ds)
                                                             (cse ds)
                                                             (`$fUnsafeFromDataList_$cunsafeFromBuiltinData`
                                                                `$fUnsafeFromDataDCert_$cunsafeFromBuiltinData`
                                                                ds)
                                                             (`$fUnsafeFromDataMap_$cunsafeFromBuiltinData`
                                                                `$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData`
                                                                unIData
                                                                ds)
                                                             (case
                                                                ds
                                                                [ (\ds
                                                                    ds ->
                                                                     constr 0
                                                                       [ (case
                                                                            ds
                                                                            [ (\ds
                                                                                ds ->
                                                                                 constr 0
                                                                                   [ (case
                                                                                        ds
                                                                                        [ (constr 1
                                                                                             [  ])
                                                                                        , (\ds ->
                                                                                             constr 0
                                                                                               [ (unIData
                                                                                                    ds) ])
                                                                                        , (constr 2
                                                                                             [  ]) ])
                                                                                   , (case
                                                                                        ds
                                                                                        [ False
                                                                                        , True ]) ]) ])
                                                                       , (case
                                                                            ds
                                                                            [ (\ds
                                                                                ds ->
                                                                                 constr 0
                                                                                   [ (case
                                                                                        ds
                                                                                        [ (constr 1
                                                                                             [  ])
                                                                                        , (\ds ->
                                                                                             constr 0
                                                                                               [ (unIData
                                                                                                    ds) ])
                                                                                        , (constr 2
                                                                                             [  ]) ])
                                                                                   , (case
                                                                                        ds
                                                                                        [ False
                                                                                        , True ]) ]) ]) ]) ])
                                                             (`$fUnsafeFromDataList_$cunsafeFromBuiltinData`
                                                                unBData
                                                                ds))
                                                          (cse (cse unIData)))
                                                       (\`$dUnsafeFromData` ->
                                                          (\go d ->
                                                             go (unListData d))
                                                            ((\s ->
                                                                s s)
                                                               (\s
                                                                 xs ->
                                                                  case
                                                                    xs
                                                                    [ (\x
                                                                        xs ->
                                                                         constr 1
                                                                           [ (`$dUnsafeFromData`
                                                                                x)
                                                                           , (s
                                                                                s
                                                                                xs) ])
                                                                    , (constr 0
                                                                         [  ]) ])))
                                                       (`$fUnsafeFromDataMap_$cunsafeFromBuiltinData`
                                                          `$fUnsafeFromDataScriptContext_$cunsafeFromBuiltinData`
                                                          `$fUnsafeFromDataBuiltinData_$cunsafeFromBuiltinData`
                                                          ds)
                                                       (cse
                                                          `$fUnsafeFromDataBuiltinData_$cunsafeFromBuiltinData`
                                                          ds))
                                                    (`$fUnsafeFromDataMap_$cunsafeFromBuiltinData`
                                                       unBData))
                                                 (\`$dUnsafeFromData`
                                                   `$dUnsafeFromData` ->
                                                    (\go d ->
                                                       go (unMapData d))
                                                      ((\s ->
                                                          s s)
                                                         (\s
                                                           xs ->
                                                            case
                                                              xs
                                                              [ (\tup
                                                                  tups ->
                                                                   constr 1
                                                                     [ (constr 0
                                                                          [ (`$dUnsafeFromData`
                                                                               (case
                                                                                  tup
                                                                                  [ (\l
                                                                                      r ->
                                                                                       l) ]))
                                                                          , (`$dUnsafeFromData`
                                                                               (case
                                                                                  tup
                                                                                  [ (\l
                                                                                      r ->
                                                                                       r) ])) ])
                                                                     , (s
                                                                          s
                                                                          tups) ])
                                                              , (constr 0
                                                                   []) ])))
                                                 (case
                                                    ds
                                                    [(\ds -> unBData ds)])) ])
                                     , (`$fUnsafeFromDataScriptContext_$cunsafeFromBuiltinData`
                                          ds) ])
                                  (\d ->
                                     case
                                       d
                                       [ (\ds -> constr 1 [(unBData ds)])
                                       , (\ds ->
                                            constr 3
                                              [ (`$fUnsafeFromDataTxOutRef_$cunsafeFromBuiltinData`
                                                   ds) ])
                                       , (\ds ->
                                            constr 2
                                              [ (`$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData`
                                                   ds) ])
                                       , (\ds ->
                                            constr 0
                                              [ (`$fUnsafeFromDataDCert_$cunsafeFromBuiltinData`
                                                   ds) ]) ]))
                               (\d ->
                                  case
                                    d
                                    [ (\ds ->
                                         constr 2
                                           [ (`$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData`
                                                ds) ])
                                    , (\ds ->
                                         constr 0
                                           [ (`$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData`
                                                ds) ])
                                    , (\ds
                                        ds ->
                                         constr 1
                                           [ (`$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData`
                                                ds)
                                           , (unBData ds) ])
                                    , (\ds ds ->
                                         constr 5 [(unBData ds), (unBData ds)])
                                    , (\ds ds ->
                                         constr 6 [(unBData ds), (unIData ds)])
                                    , (constr 3 [])
                                    , (constr 4 []) ]))
                            (\d ->
                               case
                                 d
                                 [ (\ds ds ->
                                      constr 0
                                        [ (case ds [(\ds -> unBData ds)])
                                        , (unIData ds) ]) ])) ])
                  [ (\ds
                      ds ->
                       case
                         ds
                         [ (\ds
                             ds
                             ds
                             ds
                             ds
                             ds
                             ds
                             ds
                             ds
                             ds
                             ds
                             ds ->
                              force
                                ((\`$j` ->
                                    case
                                      ds
                                      [ (delay
                                           ((\x ->
                                               case
                                                 error
                                                 [(\a ds -> `$j` a ds)])
                                              (force trace
                                                 "PT8"
                                                 (constr 0 []))))
                                      , (\x ds ->
                                           delay
                                             (case x [(\a ds -> `$j` a ds)])) ])
                                   (\a
                                     ds ->
                                      force
                                        ((\`$j` ->
                                            case
                                              ds
                                              [ (delay
                                                   (`$j`
                                                      ((\x -> error)
                                                         (force trace
                                                            "PT9"
                                                            (constr 0 [])))))
                                              , (\ds as -> delay (`$j` as)) ])
                                           (\rest ->
                                              force
                                                ((\`$j` ->
                                                    case
                                                      rest
                                                      [ (delay
                                                           ((\x ->
                                                               case
                                                                 error
                                                                 [ (\a ds ->
                                                                      `$j`
                                                                        a
                                                                        ds) ])
                                                              (force trace
                                                                 "PT8"
                                                                 (constr 0
                                                                    []))))
                                                      , (\x
                                                          ds ->
                                                           delay
                                                             (case
                                                                x
                                                                [ (\a
                                                                    ds ->
                                                                     `$j`
                                                                       a
                                                                       ds) ])) ])
                                                   (\a
                                                     ds ->
                                                      (\obsScriptCred' ->
                                                         (\go ->
                                                            (\cse ->
                                                               case
                                                                 (cse a)
                                                                 [ (case
                                                                      (cse a)
                                                                      [ (go ds)
                                                                      , (constr 0
                                                                           [  ]) ])
                                                                 , (constr 0
                                                                      []) ])
                                                              (`$fEqStakingCredential_$c==`
                                                                 obsScriptCred'))
                                                           ((\s ->
                                                               s s)
                                                              (\s
                                                                ds ->
                                                                 case
                                                                   ds
                                                                   [ ((\x ->
                                                                         error)
                                                                        (force
                                                                           trace
                                                                           "not found"
                                                                           (constr 0
                                                                              [  ])))
                                                                   , (\ds
                                                                       xs' ->
                                                                        case
                                                                          ds
                                                                          [ (\c'
                                                                              i ->
                                                                               case
                                                                                 (`$fEqStakingCredential_$c==`
                                                                                    c'
                                                                                    obsScriptCred')
                                                                                 [ (s
                                                                                      s
                                                                                      xs')
                                                                                 , (constr 0
                                                                                      [  ]) ]) ]) ])))
                                                        (`$fUnsafeFromDataStakingCredential_$cunsafeFromBuiltinData`
                                                           obsScriptCred)))))))) ]) ])
               (\d ->
                  case
                    d
                    [ (\ds ->
                         constr 0
                           [ (`$fUnsafeFromDataCredential_$cunsafeFromBuiltinData`
                                ds) ])
                    , (\ds ds ds ->
                         constr 1
                           [(unIData ds), (unIData ds), (unIData ds)]) ]))
            (\d ->
               case
                 d
                 [ (\ds -> constr 0 [(unBData ds)])
                 , (\ds -> constr 1 [(unBData ds)]) ]))
         (\ds ds ->
            case
              ds
              [ (\l ->
                   case
                     ds
                     [ (\r ->
                          case
                            l
                            [ (\l ->
                                 case
                                   r
                                   [ (\r -> equalsByteString l r)
                                   , (\ipv -> False) ])
                            , (\a ->
                                 case
                                   r
                                   [ (\ipv -> False)
                                   , (\a' -> equalsByteString a a') ]) ])
                     , (\ipv ipv ipv -> False) ])
              , (\a b c ->
                   case
                     ds
                     [ (\ipv -> False)
                     , (\a' b' c' ->
                          case
                            (equalsInteger a a')
                            [ False
                            , (case
                                 (equalsInteger b b')
                                 [False, (equalsInteger c c')]) ]) ]) ]))
      (\d -> d)))