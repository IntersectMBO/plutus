module Ast21 where

open import VerifiedCompilation
open import VerifiedCompilation.Certificate
open import Untyped
open import RawU
open import Builtin
open import Data.Unit
open import Data.Nat
open import Data.Integer
open import Utils
import Agda.Builtin.Bool
import Relation.Nullary
import VerifiedCompilation.UntypedTranslation
open import Agda.Builtin.Maybe
open import Data.Empty using (⊥)
open import Data.Bool.Base using (Bool; false; true)
open import Agda.Builtin.Equality using (_≡_; refl)

ast21 : Untyped

ast21 = (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (ULambda (UCase (UApp (ULambda (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1)))) (UDelay (UApp (UApp (UApp (UVar 0) (UBuiltin bData)) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1))))) (UApp (UApp (UApp (UVar 10) (UBuiltin bData)) (ULambda (UApp (UBuiltin mapData) (UVar 0)))) (UApp (UVar 9) (UApp (UApp (UApp (UVar 14) (UBuiltin unBData)) (ULambda (UApp (UBuiltin unMapData) (UVar 0)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UVar 5))))))))) (UDelay (UApp (ULambda (UForce (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 4)))) (UDelay (UApp (ULambda (UForce (UCase (UApp (UApp (UVar 1) (UVar 2)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) ((ULambda (UDelay (UConstr 1 ([])))) ∷ (UDelay (UApp (UVar 4) (UApp (UApp (UApp (UApp (UVar 3) (UVar 2)) (ULambda (UVar 0))) (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (ULambda (UApp (UApp (UBuiltin equalsByteString) (UApp (UVar 0) (UVar 1))) (UApp (UVar 0) (UVar 2)))) (ULambda (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UApp (UBuiltin unConstrData) (UVar 0)))))))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (ULambda (UApp (UApp (UBuiltin equalsInteger) (UApp (UVar 0) (UVar 1))) (UApp (UVar 0) (UVar 2)))) (ULambda (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UApp (UBuiltin unConstrData) (UVar 0))))))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))))) (UApp (UForce (UBuiltin headList)) (UVar 2)))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UApp (UBuiltin unConstrData) (UVar 0))))))) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 12)))))) ∷ [])))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 4))))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UApp (UVar 6) (ULambda (UVar 0))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UVar 9)))))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UVar 6) (UApp (UApp (UApp (UApp (UVar 5) (UVar 4)) (ULambda (UVar 0))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 3)) (ULambda (ULambda (UApp (UApp (UApp (UVar 2) (UVar 6)) (ULambda (ULambda (UForce (UCase (UApp (UApp (UVar 6) (UVar 3)) (UVar 1)) ((UDelay (UForce (UCase (UVar 2) ((ULambda (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay (UForce (UCase (UVar 0) ((ULambda (UDelay (UConstr 1 ([])))) ∷ (UDelay (UConstr 0 ([]))) ∷ [])))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))))) (ULambda (UApp (UVar 4) (UCon (tagCon unit tt))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UApp (UVar 12) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UApp (UVar 1) (UCon (tagCon unit tt)))))) (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 4)) (ULambda (ULambda (UApp (UApp (UApp (UVar 2) (UVar 7)) (ULambda (ULambda (UForce (UCase (UApp (UApp (UVar 7) (UVar 3)) (UVar 1)) ((UDelay (UForce (UCase (UVar 2) ((ULambda (UDelay (UForce (UCase (UVar 1) ((ULambda (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 1)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))) ∷ (UDelay (UForce (UCase (UVar 0) ((ULambda (UDelay (UConstr 1 ([])))) ∷ (UDelay (UConstr 0 ([]))) ∷ [])))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))))) (ULambda (UApp (UVar 4) (UCon (tagCon unit tt))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UApp (UVar 13) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UApp (UVar 1) (UCon (tagCon unit tt)))))) (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 6)) (ULambda (ULambda (UApp (UApp (UApp (UVar 2) (UVar 9)) (ULambda (ULambda (UForce (UCase (UApp (UApp (UVar 9) (UVar 3)) (UVar 1)) ((UDelay (UApp (UApp (UVar 6) (UVar 2)) (UVar 0))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))))) (ULambda (UApp (UVar 4) (UCon (tagCon unit tt))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UApp (UVar 1) (UCon (tagCon unit tt)))))) (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 7)) (ULambda (ULambda (ULambda (UApp (UApp (UApp (UVar 3) (UVar 11)) (ULambda (ULambda (ULambda (UForce (UCase (UApp (UApp (UVar 12) (UVar 5)) (UVar 2)) ((UDelay (UForce (UCase (UApp (UApp (UVar 9) (UVar 4)) (UVar 1)) ((UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 3)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))) ∷ (UDelay (UConstr 1 ([]))) ∷ []))))))) (ULambda (UApp (UVar 5) (UCon (tagCon unit tt)))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 3)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UVar 1))) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UApp (UVar 1) (UCon (tagCon unit tt)))))) (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 8)) (ULambda (ULambda (UApp (UApp (UApp (UVar 2) (UVar 11)) (ULambda (ULambda (UForce (UCase (UApp (UApp (UVar 11) (UVar 3)) (UVar 1)) ((UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 2)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))))) (ULambda (UApp (UVar 4) (UCon (tagCon unit tt))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UApp (UVar 1) (UCon (tagCon unit tt)))))) (ULambda (UApp (ULambda (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1)))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UVar 9) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 2)))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 10))))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))))) (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 11)) (ULambda (ULambda (UApp (UApp (UApp (UVar 2) (UVar 14)) (ULambda (ULambda (UForce (UCase (UApp (UApp (UVar 14) (UVar 3)) (UVar 1)) ((UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UVar 2)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([])))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))))) (ULambda (UApp (UVar 4) (UCon (tagCon unit tt))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 6)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0)))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UApp (UVar 1) (UCon (tagCon unit tt)))))) (ULambda (UApp (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 12)) (ULambda (ULambda (UApp (UApp (UApp (UVar 2) (UVar 15)) (ULambda (ULambda (UForce (UCase (UApp (UApp (UVar 15) (UVar 3)) (UVar 1)) ((UDelay (UApp (UApp (UVar 15) (UVar 2)) (UVar 0))) ∷ (UDelay (UConstr 1 ([]))) ∷ [])))))) (ULambda (UApp (UVar 4) (UCon (tagCon unit tt))))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 9)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UApp (UVar 1) (UCon (tagCon unit tt)))))) (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 10)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 3)))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 10)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UVar 11) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 4)))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))))) (UDelay (UConstr 1 ([])))))) (UApp (UBuiltin unConstrData) (UVar 12))))) (UDelay (UConstr 1 ([]))))))))))))) (UApp (UBuiltin unConstrData) (UVar 7)))))))))) (ULambda (ULambda (UApp (ULambda (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1)))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 2))))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))))) (ULambda (UForce (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 3)))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UVar 2) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 4)))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 4))))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))))) (ULambda (UApp (UApp (ULambda (UApp (UApp (UVar 0) (UVar 6)) (ULambda (ULambda (UApp (UApp (UApp (UVar 2) (UVar 7)) (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UVar 3)) (UVar 1))) (UDelay (UApp (UApp (UVar 6) (UVar 2)) (UVar 0)))) (UDelay (UConstr 1 ([])))))))) (ULambda (UConstr 1 ([])))))))) (ULambda (ULambda (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UApp (UApp (UVar 3) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 0)))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))))) (ULambda (UConstr 1 ([]))))))) (ULambda (ULambda (UApp (ULambda (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1)))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UVar 11) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 2)))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))))) (ULambda (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 2)))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UApp (UBuiltin unConstrData) (UVar 3))))) (UDelay (UConstr 0 ([])))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))))))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))))) (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 2)))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 2)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UApp (UBuiltin unConstrData) (UVar 3))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))))))))))) (UApp (UBuiltin unConstrData) (UVar 1))))))))))) (UApp (UBuiltin unConstrData) (UVar 1))))))))))) (ULambda (ULambda (UApp (ULambda (UForce (UApp (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1)))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 2))))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UApp (UVar 1) (UCon (tagCon unit tt))))))) (UApp (UBuiltin unConstrData) (UVar 2))))) (UDelay (UApp (UVar 0) (UCon (tagCon unit tt)))))) (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1)))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsByteString) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 2))))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))))) (UConstr 0 ([]))) (UConstr 1 ([]))))) (UDelay (UConstr 1 ([])))))) (UApp (UBuiltin unConstrData) (UVar 2))))) (UDelay (UConstr 1 ([]))))))))) (UApp (UBuiltin unConstrData) (UVar 1))))))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))))) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 12)))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 4)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (UApp (UApp (UVar 8) (ULambda (UVar 0))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 11)))))))))))) (UDelay (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 5)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UDelay (UApp (ULambda (UConstr 0 ([]))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 0))))) (UDelay (UApp (ULambda (UCase (UVar 0) ((UVar 0) ∷ []))) UError))))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 15)))))))))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 14)))))))))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 13)))))))))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 12))))))))) (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UDelay (UConstr 1 ([])))) (UDelay (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UDelay (UConstr 0 ((UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UVar 0))) ∷ [])))) (UDelay (UApp (UVar 11) (UCon (tagCon string "PT1")))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))) (ULambda (UVar 0)))) (ULambda (ULambda (ULambda (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UApp (UApp (UApp (UVar 22) (UCon (tagCon (list pdata) ([])))) (ULambda (ULambda (UApp (ULambda (UForce (UCase (UApp (UVar 5) (UVar 0)) ((UDelay (UApp (ULambda (UApp (UApp (UForce (UBuiltin mkCons)) (UApp (UVar 7) (UVar 1))) (UVar 0))) (UApp (UApp (UVar 4) (UVar 4)) (UVar 1)))) ∷ (UDelay (UApp (UApp (UVar 4) (UVar 4)) (UVar 1))) ∷ [])))) (UApp (UVar 6) (UVar 1)))))) (UVar 0))))))))))) (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UForce (UBuiltin nullList)) (UVar 0))) (UConstr 0 ([]))) (UConstr 1 ([]))))))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 7))))))))) (ULambda (ULambda (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 18) (UConstr 1 ([]))) (ULambda (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsData) (UApp (UVar 4) (UVar 3))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (ULambda (UConstr 0 ([])))) (ULambda (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)))))))) (UVar 0)))))))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 5)))))) ((UDelay (UCon (tagCon unit tt))) ∷ (UDelay (UApp (UVar 0) (UCon (tagCon string "PT5")))) ∷ []))) (ULambda (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UVar 0)) (UConstr 0 ([])))))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UApp (UBuiltin unConstrData) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UApp (UBuiltin unConstrData) (UVar 0)))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ([]))) ∷ (ULambda (ULambda (UDelay (UCase (UVar 1) ((ULambda (ULambda (UApp (ULambda (UForce (UCase (UApp (UApp (UVar 10) (ULambda (UCase (UVar 0) ((ULambda (UApp (ULambda (ULambda (UApp (UVar 1) (UApp (UVar 13) (UVar 0))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ([]))) ∷ (ULambda (ULambda (UDelay (UConstr 1 ((UConstr 0 ((UVar 4) ∷ (UVar 1) ∷ [])) ∷ (UApp (UApp (UVar 3) (UVar 3)) (UVar 0)) ∷ []))))) ∷ [])))))))) ∷ [])))) (UVar 0)) ((UDelay (UApp (UApp (UVar 6) (UVar 6)) (UVar 3))) ∷ (ULambda (ULambda (UDelay (UConstr 1 ((UConstr 0 ((UVar 4) ∷ (UApp (UApp (UApp (UVar 9) (UBuiltin bData)) (ULambda (UApp (UBuiltin iData) (UVar 0)))) (UApp (UApp (UVar 12) (ULambda (UCase (UVar 0) ((ULambda (UApp (ULambda (ULambda (UApp (UVar 1) (UApp (UVar 15) (UVar 0))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ([]))) ∷ (ULambda (ULambda (UDelay (UConstr 1 ((UConstr 0 ((UVar 4) ∷ (UVar 1) ∷ [])) ∷ (UApp (UApp (UVar 3) (UVar 3)) (UVar 0)) ∷ []))))) ∷ [])))))))) ∷ [])))) (UVar 2))) ∷ [])) ∷ (UApp (UApp (UVar 8) (UVar 8)) (UVar 5)) ∷ []))))) ∷ [])))) (UApp (UApp (UApp (UVar 10) (UBuiltin unBData)) (UBuiltin unIData)) (UVar 0))))) ∷ []))))) ∷ [])))))))) (ULambda (ULambda (UApp (ULambda (ULambda (UApp (UVar 4) (UApp (UVar 1) (UVar 0))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ([]))) ∷ (ULambda (ULambda (UDelay (UConstr 1 ((UCase (UVar 1) ((ULambda (ULambda (UConstr 0 ((UApp (UVar 7) (UVar 1)) ∷ (UApp (UVar 6) (UVar 0)) ∷ [])))) ∷ [])) ∷ (UApp (UApp (UVar 3) (UVar 3)) (UVar 0)) ∷ []))))) ∷ []))))))))))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UCase (UVar 0) ((UCon (tagCon (list (pair pdata pdata)) ([]))) ∷ (ULambda (ULambda (UApp (UApp (UForce (UBuiltin mkCons)) (UCase (UVar 1) ((ULambda (ULambda (UApp (UApp (UBuiltin mkPairData) (UVar 1)) (UVar 0)))) ∷ []))) (UApp (UApp (UVar 3) (UVar 3)) (UVar 0))))) ∷ []))))))) (ULambda (UForce (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UVar 0)) (UCon (tagCon integer (ℤ.pos 0))))) (UDelay (UConstr 0 ([])))) (UDelay (UConstr 1 ((UVar 0) ∷ (UConstr 0 ([])) ∷ [])))))))) (ULambda (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UConstr 0 ([]))) ∷ (ULambda (ULambda (UDelay (UApp (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (ULambda (UForce (UCase (UVar 0) ((UDelay (UVar 2)) ∷ (ULambda (ULambda (UDelay (UConstr 1 ((UVar 1) ∷ (UApp (UApp (UVar 3) (UVar 3)) (UVar 0)) ∷ []))))) ∷ [])))))) (UApp (UVar 5) (UVar 2)))) (UApp (UApp (UVar 3) (UVar 3)) (UVar 0)))))) ∷ [])))))))))) (ULambda (ULambda (ULambda (UApp (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UApp (UVar 4) (UConstr 0 ([]))) (ULambda (ULambda (UConstr 1 ((UConstr 0 ((UApp (UVar 5) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 1))) ∷ (UApp (UVar 4) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1))) ∷ [])) ∷ (UApp (UApp (UVar 2) (UVar 2)) (UVar 0)) ∷ []))))))) (UVar 0))))))) (ULambda (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UForce (UBuiltin chooseList))) (UVar 0)) (UDelay (UVar 2))) (UDelay (UApp (UApp (UVar 1) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UForce (UBuiltin tailList)) (UVar 0))))))))))
