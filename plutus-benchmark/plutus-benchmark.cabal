cabal-version: 3.0
name: plutus-benchmark
version: 0.1.0.0
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
maintainer: radu.ometita@iohk.io
author: Radu Ometita
homepage: https://github.com/iohk/plutus#readme
bug-reports: https://github.com/iohk/plutus/issues
description:
    Please see the README on GitHub at <https://github.com/input-output-hk/plutus#readme>
build-type: Simple

data-files:
        common/templates/*.tpl
        validation/data/*.flat

source-repository head
    type: git
    location: https://github.com/iohk/plutus

common lang
  default-language: Haskell2010
  default-extensions: ExplicitForAll FlexibleContexts ScopedTypeVariables
                      DeriveGeneric StandaloneDeriving DeriveLift
                      GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                      DeriveTraversable DerivingStrategies DerivingVia
                      ImportQualifiedPost
  ghc-options:
    -fno-specialise
    -fno-spec-constr
    -fno-ignore-interface-pragmas
    -fno-omit-interface-pragmas
  ghc-options:
     -Wall -Wnoncanonical-monad-instances
     -Wincomplete-uni-patterns -Wincomplete-record-updates
     -Wredundant-constraints -Widentities -Wunused-packages
     -Wmissing-deriving-strategies


---------------- Common code for benchmarking ----------------

library plutus-benchmark-common
  import: lang
  hs-source-dirs:
      common
  exposed-modules:
      PlutusBenchmark.Common
      PlutusBenchmark.NaturalSort
  other-modules:
      Paths_plutus_benchmark
  build-depends:
      base >=4.9 && <5
    , plutus-core ^>=1.0
    , plutus-tx ^>=1.0
    , criterion -any
    , filepath -any


---------------- nofib ----------------

library nofib-internal
  import: lang
  hs-source-dirs:
      nofib/src
  exposed-modules:
      PlutusBenchmark.NoFib.Clausify
      PlutusBenchmark.NoFib.Queens
      PlutusBenchmark.NoFib.Knights
      PlutusBenchmark.NoFib.Knights.ChessSetList
      PlutusBenchmark.NoFib.Knights.KnightHeuristic
      PlutusBenchmark.NoFib.Knights.Queue
      PlutusBenchmark.NoFib.Knights.Sort
      PlutusBenchmark.NoFib.Knights.Utils
      PlutusBenchmark.NoFib.LastPiece
      PlutusBenchmark.NoFib.Prime
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , plutus-core ^>=1.0
    , plutus-tx ^>=1.0
    , plutus-tx-plugin ^>=1.0
    , deepseq -any

executable nofib-exe
  import: lang
  main-is: Main.hs
  hs-source-dirs:
      nofib/exe
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , nofib-internal -any
    , plutus-core ^>=1.0
    , plutus-tx ^>=1.0
    , ansi-wl-pprint -any
    , bytestring -any
    , flat -any
    , optparse-applicative -any
    , transformers -any
    , lens -any

benchmark nofib
  import: lang
  type: exitcode-stdio-1.0
  main-is: BenchPlc.hs
  hs-source-dirs:
    nofib/bench
  other-modules:
    Shared
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , nofib-internal -any
    , criterion >= 1.5.9.0

benchmark nofib-hs
  import: lang
  type: exitcode-stdio-1.0
  main-is: BenchHaskell.hs
  hs-source-dirs:
    nofib/bench
  other-modules:
    Shared
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , nofib-internal -any
    , criterion -any

test-suite plutus-benchmark-nofib-tests
    import: lang
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: nofib/test
    build-depends:
        base >=4.9 && <5
      , plutus-benchmark-common -any
      , nofib-internal -any
      , plutus-core ^>=1.0
      , plutus-core:plutus-core-testlib -any
      , plutus-tx ^>=1.0
      , plutus-tx:plutus-tx-testlib -any
      , tasty -any
      , tasty-hunit -any
      , tasty-quickcheck -any


---------------- lists ----------------

library lists-internal
  import: lang
  hs-source-dirs:
      lists/src
  exposed-modules:
      PlutusBenchmark.Lists.Sort
      PlutusBenchmark.Lists.Sum.Compiled
      PlutusBenchmark.Lists.Sum.HandWritten
  other-modules:
      PlutusBenchmark.Lists.Sort.GhcSort
      PlutusBenchmark.Lists.Sort.InsertionSort
      PlutusBenchmark.Lists.Sort.MergeSort
      PlutusBenchmark.Lists.Sort.QuickSort
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , plutus-core ^>=1.0
    , plutus-tx ^>=1.0
    , plutus-tx-plugin ^>=1.0
    , mtl -any

executable list-sort-exe
  import: lang
  main-is: Main.hs
  hs-source-dirs:
      lists/exe
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , lists-internal -any
    , monoidal-containers -any
    , plutus-core ^>=1.0

benchmark lists
  import: lang
  type: exitcode-stdio-1.0
  main-is: Bench.hs
  hs-source-dirs:
      lists/bench
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , lists-internal -any
    , criterion >= 1.5.9.0

test-suite plutus-benchmark-lists-tests
    import: lang
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: lists/test
    other-modules:
        Sort.Spec
        Sum.Spec
    build-depends:
        base >=4.9 && <5
      , plutus-benchmark-common -any
      , lists-internal -any
      , tasty -any
      , tasty-quickcheck -any

---------------- validation ----------------

benchmark validation
  import: lang
  type: exitcode-stdio-1.0
  main-is: BenchCek.hs
  hs-source-dirs:
      validation
  other-modules:
      Common
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , plutus-core ^>=1.0
    , bytestring -any
    , criterion >= 1.5.9.0
    , deepseq -any
    , directory -any
    , filepath -any
    , flat -any
    , optparse-applicative -any

---------------- validation-decode ----------------

benchmark validation-decode
  import: lang
  type: exitcode-stdio-1.0
  main-is: BenchDec.hs
  hs-source-dirs:
      validation
  other-modules:
      Common
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , plutus-core ^>=1.0
    , bytestring -any
    , criterion >= 1.5.9.0
    , directory -any
    , filepath -any
    , flat -any
    , optparse-applicative -any
    , plutus-ledger-api ^>=1.0
    , serialise -any

---------------- validation-full ----------------

benchmark validation-full
  import: lang
  type: exitcode-stdio-1.0
  main-is: BenchFull.hs
  hs-source-dirs:
      validation
  other-modules:
      Common
  build-depends:
      base >=4.9 && <5
    , plutus-benchmark-common -any
    , plutus-core ^>=1.0
    , bytestring -any
    , criterion >= 1.5.9.0
    , directory -any
    , filepath -any
    , flat -any
    , optparse-applicative -any
    , plutus-ledger-api ^>=1.0
    , plutus-ledger-api:plutus-ledger-api-testlib -any
    , serialise -any

---------------- Cek cost model calibration ----------------

benchmark cek-calibration
    import: lang
    type: exitcode-stdio-1.0
    default-language: Haskell2010
    main-is: Main.hs
    hs-source-dirs:
       cek-calibration
    -- Something weird causes this to sometimes report the plugin
    -- package as unused...
    ghc-options: -Wno-unused-packages
    build-depends:
        base >=4.9 && <5
      , plutus-core ^>=1.0
      , plutus-tx ^>=1.0
      , plutus-tx-plugin ^>=1.0
      , criterion >= 1.5.9.0
      , mtl -any
      , lens -any
