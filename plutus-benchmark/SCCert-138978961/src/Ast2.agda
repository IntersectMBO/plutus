module Ast2 where

open import VerifiedCompilation
open import VerifiedCompilation.Certificate
open import Untyped
open import RawU
open import Builtin
open import Data.Unit
open import Data.Nat
open import Data.Integer
open import Utils
import Agda.Builtin.Bool
import Relation.Nullary
import VerifiedCompilation.UntypedTranslation
open import Agda.Builtin.Maybe
open import Data.Empty using (⊥)
open import Data.Bool.Base using (Bool; false; true)
open import Agda.Builtin.Equality using (_≡_; refl)

ast2 : Untyped

ast2 = (UApp (ULambda (ULambda (UApp (UApp (ULambda (ULambda (UApp (UForce (UApp (UApp (ULambda (ULambda (UApp (UForce (UVar 0)) (UApp (UApp (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UVar 3) (UApp (UForce (UBuiltin headList)) (UVar 1))) (UApp (UForce (UBuiltin headList)) (UVar 0))) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 0))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UForce (UBuiltin sndPair))) (UApp (UBuiltin unConstrData) (UVar 6)))))) (ULambda (ULambda (ULambda (UApp (UForce (UVar 4)) (UVar 2)))))) (ULambda (UApp (ULambda (UApp (UForce (UApp (UVar 4) UError)) (UVar 0))) UError)))))) (UDelay (ULambda (UConstr 0 ((UVar 0) ∷ []))))) (UDelay (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ [])))))))) (ULambda (UForce (UApp (UApp (UForce (UApp (UApp (UApp (ULambda (ULambda (ULambda (UApp (UVar 0) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin modInteger) (UApp (UVar 7) (UApp (UApp (UApp (UApp (ULambda (ULambda (ULambda (UApp (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UApp (UVar 17) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 15)))) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 14)))) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 13)))) (UApp (UBuiltin unIData) (UApp (UForce (UBuiltin headList)) (UVar 12)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UVar 11)))) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 10)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UVar 9)))) (UApp (UForce (UBuiltin headList)) (UVar 8))) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 7)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UVar 6)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UVar 5)))) (UApp (UBuiltin unBData) (UApp (UForce (UBuiltin headList)) (UVar 4)))) (UApp (UBuiltin unMapData) (UApp (UForce (UBuiltin headList)) (UVar 3)))) (UApp (UBuiltin unListData) (UApp (UForce (UBuiltin headList)) (UVar 2)))) (UApp (UApp (UVar 0) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UVar 1)))) (UApp (UApp (UVar 0) (UBuiltin unIData)) (UApp (UForce (UBuiltin headList)) (UApp (UForce (UBuiltin tailList)) (UVar 1)))))) (ULambda (ULambda (UApp (ULambda (UApp (ULambda (UApp (ULambda (UForce (UApp (UApp (UForce (UApp (UVar 25) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UVar 1))) (UVar 27)) (UVar 26)))) (UDelay (UForce (UVar 23)))) (UDelay (UForce (UApp (UApp (UForce (UApp (UVar 25) (UApp (UApp (UApp (UForce (UBuiltin ifThenElse)) (UApp (UApp (UBuiltin equalsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 1))) (UVar 27)) (UVar 26)))) (UDelay (UApp (UForce (UVar 24)) (UApp (UVar 4) (UApp (UForce (UBuiltin headList)) (UVar 0)))))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "PT1"))) (UVar 30)))))))))) (UApp (UForce (UForce (UBuiltin sndPair))) (UVar 1)))) (UApp (UForce (UForce (UBuiltin fstPair))) (UVar 0)))) (UApp (UBuiltin unConstrData) (UVar 0))))))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UBuiltin tailList)) (UVar 0)))) (UApp (UForce (UForce (UBuiltin sndPair))) (UApp (UBuiltin unConstrData) (UVar 8)))))) (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (ULambda (UVar 13))))))))))))))))))))) (UDelay (ULambda (UConstr 0 ((UVar 0) ∷ []))))) (UDelay (UConstr 1 ([])))) (UDelay (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (ULambda UError)))) (UCon (tagCon integer (ℤ.pos 2)))))) (UVar 2)) (UVar 1)))))) (UConstr 0 ([]))) (UConstr 1 ([]))) (ULambda (UDelay (ULambda (ULambda (UCase (UVar 2) ((UVar 1) ∷ (UVar 0) ∷ [])))))))) (UDelay (UVar 2))) (UDelay (UApp (ULambda UError) (UApp (UApp (UForce (UBuiltin trace)) (UCon (tagCon string "Odd number of outputs"))) (UVar 2)))))))))) (UConstr 0 ([]))) (ULambda (UDelay (ULambda (UCase (UVar 1) ((UVar 0) ∷ [])))))))) (UApp (ULambda (UApp (ULambda (UApp (UVar 0) (UVar 0))) (ULambda (UApp (UVar 1) (ULambda (UApp (UApp (UVar 1) (UVar 1)) (UVar 0))))))) (ULambda (ULambda (UForce (UApp (UApp (UApp (UForce (UForce (UBuiltin chooseList))) (UVar 0)) (UDelay (UCon (tagCon integer (ℤ.pos 0))))) (UDelay (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UApp (UVar 2) (UApp (UForce (UBuiltin tailList)) (UVar 1))))) (UApp (UForce (UBuiltin headList)) (UVar 0))))))))))
