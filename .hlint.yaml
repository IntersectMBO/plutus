---
- functions:
  - {name: unsafePerformIO, within: [PlutusPrelude, Language.PlutusCore.TestSupport.Generator]}
  - {name: error, within: [Main, Evaluation.CkMachine, Evaluation.Constant.Success, Language.PlutusCore.Constant.Apply, Language.PlutusCore.CkMachine, Language.PlutusCore.TestSupport.Generator, Language.PlutusCore.Constant.Make, Language.PlutusCore.TestSupport.TypedBuiltinGen, Language.PlutusCore.TH]}
  - {name: undefined, within: [Language.PlutusCore.Constant.Apply]}
  - {name: fromJust, within: []}
  - {name: foldl, within: []}

- error: {lhs: "hylo embed", rhs: "ana", name: "Use anamorphism"}
- error: {lhs: "hylo f project", rhs: "cata f", name: "Use catamorphism"}
- error: {lhs: "concat", rhs: "fold", name: "Generalize concat"}
- error: {lhs: "concatMap", rhs: "foldMap", name: "Generalize concatMap"}
- error: {lhs: "f >> pure ()", rhs: "void f", name: "Use void"}
- error: {lhs: "over _1 f x", rhs: "first f x", name: "Use arrows"}
- error: {lhs: "over _2 f x", rhs: "second f x", name: "Use arrows"}
- error: {lhs: "bool x x p", rhs: "x", name: "Redundant bool"}
- error: {lhs: "maybe mempty", rhs: "foldMap", name: "Use foldMap"}
- error: {lhs: "mconcat", rhs: "fold", name: "Generalize mconcat"}

- ignore: {name: Reduce duplication, within: [Language.PlutusCore.Renamer, Language.PlutusCore.Constant.Prelude, Language.PlutusCore.StdLib.Data.Bool, Language.PlutusCore.StdLib.Data.ChurchNat, Language.PlutusCore.StdLib.Data.Function, Language.PlutusCore.StdLib.Data.List, Language.PlutusCore.StdLib.Data.Nat]}
- ignore: {name: Redundant $, within: [Evaluation.Constant.Success, Language.PlutusCore.TestSupport.TypedBuiltinGen]}
# this is rarely an improvement, also ignored in cardano
- ignore: {name: Move brackets to avoid $}

- fixity: infixr 8 .*
- fixity: infixr 3 ***
- fixity: infixr 3 &&&
- fixity: infixr 1 <=<
