module TestCert where

open import VerifiedCompilation
open import VerifiedCompilation.Certificate
open import Untyped
open import RawU
open import Builtin
open import Data.Unit
open import Data.Nat
open import Data.Integer
open import Utils
import Agda.Builtin.Bool
import Relation.Nullary
import VerifiedCompilation.UntypedTranslation
open import Agda.Builtin.Maybe
open import Data.Empty using (⊥)
open import Data.Bool.Base using (Bool; false; true)
open import Agda.Builtin.Equality using (_≡_; refl)

asts : List (SimplifierTag × Untyped × Untyped)
asts = ((floatDelayT , ((UApp (UApp (UApp (UForce (UForce (UDelay (UDelay (ULambda (ULambda (UApp (UVar 1) (UVar 0)))))))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))) , (UApp (UApp (UApp (UForce (UForce (UDelay (UDelay (ULambda (ULambda (UApp (UVar 1) (UVar 0)))))))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))))) ∷ (forceDelayT , ((UApp (UApp (UApp (UForce (UForce (UDelay (UDelay (ULambda (ULambda (UApp (UVar 1) (UVar 0)))))))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))) , (UApp (UApp (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))) , (UApp (UApp (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))))) ∷ (caseReduceT , ((UApp (UApp (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))) , (UApp (UApp (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))))) ∷ (inlineT , ((UApp (UApp (UApp (ULambda (ULambda (UApp (UVar 1) (UVar 0)))) (UBuiltin addInteger)) (UApp (ULambda (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1))))) (UApp (ULambda (UVar 0)) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UCon (tagCon integer (ℤ.pos 1)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (floatDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (forceDelayT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseOfCaseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (caseReduceT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (inlineT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))))) ∷ (cseT , ((UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0)))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (floatDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (forceDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseOfCaseT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseReduceT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (inlineT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (cseT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (floatDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (forceDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseOfCaseT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseReduceT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (inlineT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (cseT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (floatDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (forceDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseOfCaseT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseReduceT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (inlineT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (cseT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (floatDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (forceDelayT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseOfCaseT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (caseReduceT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ (inlineT , ((UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))) , (UApp (ULambda (UApp (UApp (UBuiltin addInteger) (UApp (ULambda (UApp (UApp (UBuiltin multiplyInteger) (UVar 1)) (UCon (tagCon integer (ℤ.pos 0))))) (UApp (UApp (UBuiltin lessThanEqualsInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UCon (tagCon integer (ℤ.pos 0)))))) (UApp (UApp (UBuiltin multiplyInteger) (UCon (tagCon integer (ℤ.pos 0)))) (UVar 0)))) (UApp (UApp (UBuiltin divideInteger) (UCon (tagCon integer (ℤ.pos 1)))) (UCon (tagCon integer (ℤ.pos 0))))))) ∷ [])

certificate : passed? (runCertifier asts) ≡ true
certificate = refl
